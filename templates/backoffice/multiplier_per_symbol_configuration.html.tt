<p> <b>Commission</b> is a percentage of <b>volume</b> <br/>
<b>Deal cancelation commission</b> is a percentage of <b>theo price</b> <br/>
<b>Stop out level</b> is a percentage of <b>stake</b>. E.g. 0 means stop out level is set at the level where client can lose 100% of stake, whereas 5 means 95% of stake.</p>

<p>Different requirements for regulated clients on financial intruments. Hence, we will have a separate sets of config:

<select id="multiplier_select" onchange="ToggleTable(this.id)" onfocus="SavePrevious(this.id)">
    <option value="common">Common</option>
    <option value="maltainvest">Malta invest</option>
</select>

</p>

[% FOREACH category IN existing_config.keys %]
    <form id="[% category %]" [% IF NOT existing_config.$category.selected %]style="display: none" [% END %]>
    <fieldset  [% IF disabled %] disabled title='no write access' [% END %]>
    <table class="collapsed hover alternate" border="1">
        <tr>
            <th>Underlying symbol</th>
            <th>Commission</th>
            <th>Multiplier range</th>
            <th>Deal cancellation commission</th>
            <th>Deal cancellation duration range</th>
            <th>Stop out level</th>
            <th></th>
            <th></th>
        </tr>
        [% FOREACH data IN existing_config.$category.items %]
        <tr id="[% data.symbol %]-multiplier_config">
            <td>[% data.symbol %]</td>
            <td><input type="text" name="commission" value="[% data.commission %]" data-lpignore="true" /></td>
            <td><input type="text" name="multiplier_range" value="[% data.multiplier_range_json %]" data-lpignore="true" /></td>
            <td><input type="text" name="cancellation_commission" value="[% data.cancellation_commission %]" data-lpignore="true" /></td>
            <td><input type="text" name="cancellation_duration_range" value="[% data.cancellation_duration_range_json %]" data-lpignore="true" /></td>
            <td><input type="text" name="stop_out_level" value="[% data.stop_out_level %]" data-lpignore="true" /></td>
            <td><button onClick="SaveMultiplierConfig('[% category %]', '[% data.symbol %]')" type="button">save</button></td>
            <td class="multiplier_config_result"></td>
        </tr>
        [% END %]
    </table>
    </fieldset>
    </form>
[% END %]

<script>
var multiplier_upload_url = "[% multiplier_upload_url | none %]";

function SaveMultiplierConfig(id, symbol) {
    var el = \$('form#'+id).find('tr#' + symbol + '-multiplier_config');
    var result = el.find('td.multiplier_config_result');
    result.text('processing ...');

    \$.ajax({
        url: multiplier_upload_url,
        data: {
            save_multiplier_config: 1,
            symbol: symbol,
            commission: el.find('input[name="commission"]').val(),
            multiplier_range: el.find('input[name="multiplier_range"]').val(),
            cancellation_commission: el.find('input[name="cancellation_commission"]').val(),
            cancellation_duration_range: el.find('input[name="cancellation_duration_range"]').val(),
            stop_out_level: el.find('input[name="stop_out_level"]').val(),
            landing_company: id
        },
        success: function(data) {
            var config = \$.parseJSON(data);
            if (config.error) {
                result.text(config.error).css('color', 'red');
            } else {
                result.text('saved').css('color', 'green');
            }
        }
    });
}

function ToggleTable(id) {
    var el = \$('select#'+id);
    var prev_val = el.data('prev-value');

    // hide previous selected table
    \$('form#'+prev_val).toggle();
    // show current table
    \$('form#'+el.val()).toggle();
    // save new previous
    el.data('prev-value', el.val());
}

function SavePrevious(id) {
    // set previous value in data-previous
    var el = \$('select#'+id);
    el.data('prev-value', el.val());
}
</script>
