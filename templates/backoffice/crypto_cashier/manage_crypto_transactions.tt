[% MACRO address_link BLOCK %]
[% IF addr %]
    <a href="[% address_uri _ addr %]" target="_blank">[% addr %]</a>
[% ELSE %]
    &nbsp;
[% END %]
[% END %]
[% MACRO transaction_link BLOCK %]
[% IF tx %]
    <a href="[% transaction_uri _ tx %]" target="_blank">[% tx.substr(0,6) %]...</a>
[% ELSE %]
    &nbsp;
[% END %]
[% END %]

[% BLOCK bulk_verify_controls %]
<table>
    <tr>
        <td class="selection_display_text">None selected</td>
        <td>
            <form action="[% controller_url %]" onsubmit="return bulkConfirm();" method="POST" class="bulk_actions">
                <input type="hidden" name="currency" value="[%currency%]" />
                <input type="hidden" name="view_action" value="withdrawals" />
                <input type="hidden" class="selected_transactions" name="selected_transactions" value="" />
                <button class="btn btn--primary" name="action" value="bulkSave" disabled>Bulk <span class="action">Remark</span></button>
                <button class="btn btn--primary" name="action" value="bulkReject" disabled>Bulk <span class="action reject">Reject</span></button>
                <button class="btn btn--primary" name="action" value="bulkVerify" disabled>Bulk <span class="action verify">Verify</span></button>
            </form>
        </td>
    </tr>
</table>
[% END %]

<style>
    table.internal th {
        padding: 0 5px;
    }
    .warning_tag {
        color:red;
        font-weight:bold;
        text-align: center;
        background-color: #FFFF00;
    }
    table tr.selected, table tr.selected:hover {
        background: #D0E3C4 !important;
    }
    .selection_display_text {
        background: #ddc;
        padding: 3px 7px;
    }
    .action {
        font-weight: bold;
        font-size: inherit;
    }
    button:not([disabled]) .action.reject, input[value='Reject'] {
        color: darkred;
    }
    button:not([disabled]) .action.verify, input[value='Verify']:not([disabled]) {
        color: darkgreen;
    }
</style>
<table class="small border">
    <thead>
        <tr>
            <th>Status</th>
            <th>Description</th>
        </tr>
    </thead>
    <tbody>
        [% IF view_action == 'deposits' || view_action == 'search' %]
            [% IF view_action == 'search' %]
                 <tr><th align="left" colspan="2"><b>Deposit:</b></th></tr>
            [% END %]
            <tr>
                <td>New</td>
                <td>List transactions with new addresses i.e no blockchain transaction has been performed</td>
            </tr>
            <tr>
                <td>Pending</td>
                <td>List transactions that are on blockchain but not yet confirmed (we wait for 3 confirmations)</td>
            </tr>
            <tr>
                <td>Confirmed</td>
                <td>List transactions that are confirmed on blockchain and client account should be credited</td>
            </tr>
            <tr>
                <td>Error</td>
                <td>List errored out transaction, reason would be specified in error info.</td>
            </tr>
        [% END %]
        [% IF view_action == 'withdrawals' || view_action == 'search' %]
            [% IF view_action == 'search' %]
                <tr><th align="left" colspan="2"><b>Withdrawal:</b></th></tr>
            [% END %]
            <tr>
                <td>Pending</td>
                <td>List withdrawal requests initiated by client</td>
            </tr>
            <tr>
                <td>Verified</td>
                <td>List withdrawal requests verified by payments team after validation</td>
            </tr>
            <tr>
                <td>Rejected</td>
                <td>List withdrawal requests rejected by payments team after validation</td>
             </tr>
            <tr>
                <td>Cancelled</td>
                <td>List withdrawal requests cancelled by the client before transactions were verified</td>
             </tr>
             <tr>
                <td>Processing</td>
                <td>List withdrawal requests where client account is debited but blockchain transaction is not yet confirmed</td>
             </tr>
             <tr>
                <td>Performing Blockchain Transaction</td>
                <td>List withdrawal requests where we initiated blockchain transaction. Please note that this is intermediate status and transaction should not be here for long. This status is set just before we make blockchain transaction. If you see transaction in this for long then we need to investigate it.</td>
             </tr>
             <tr>
                <td>Sent</td>
                <td>List withdrawal requests finally processed i.e debit and both blockchain completed</td>
             </tr>
            <tr>
                <td>Error</td>
                <td>List errored out transaction, reason would be specified in error info.</td>
            </tr>
        [% END %]
    </tbody>
</table>
<hr>
[% IF view_action == 'withdrawals' and transactions.size > 0 %]
    <p>The estimation fee is done before we send the transaction so it can have a small difference from the final fee.</p>
[% END %]
[% IF transactions.size == 0 %]
    <p>There are no such transactions.</p>
[% ELSE %]
    [% IF view_type == 'pending' && view_action == 'withdrawals' %]
        <br>
        [% PROCESS bulk_verify_controls %]
    [% END %]
    <table class="hover alternate full-width">
        <thead>
            <tr>
                [% IF view_action == 'search' %]
                    <th>Status</th>
                [% END %]
                [% IF view_type == 'pending' && view_action == 'withdrawals' %]
                    <th></th>
                [% END %]
                <th>Blockchain Info</th>
                <th>Payment Info</th>
                <th>Date</th>
                [% IF view_action == 'withdrawals' || view_action == 'search' %]
                    <th>Verification</th>
                [% END %]
                <th>Details</th>
            </tr>
        </thead>
        <tbody>
        [% FOREACH trx IN transactions %]
            <tr id="[% 'row_' _ trx.id %]">
                [% IF view_action == 'search' %]
                    <td valign="top">
                        <b>[% trx.transaction_type FILTER ucfirst %]: </b>
                        [% IF trx.status == 'LOCKED' %]PENDING[% ELSE %][% trx.status %][% END %]
                    </td>
                [% END %]
                [% IF view_type == 'pending' && trx.transaction_type == 'withdrawal' && view_action == 'withdrawals' %]
                    <td>
                       <input type="checkbox" value="[% trx.id %]" data-amount="[% trx.amount %]" data-loginid="[% trx.client_loginid %]" onclick="bulkToggleSelected(this)" />
                    </td>
                [% END %]
                <td valign="top">
                    <table class="internal"><tbody>
                        [% IF trx.is_internal_transfer == 1 %]
                        <tr><td>&nbsp;</td><td><span class="warning_tag">INTERNAL TRANSFER</span></td></tr>
                        [% END %]
                        <tr><th>Address:</th><td>[% address_link(addr = trx.address) %]</td></tr>
                        <tr><th>Blockchain ID:</th><td>[% transaction_link(tx = trx.blockchain_txn) %]</td></tr>
                    </tbody></table>
                </td>
                <td valign="top">
                    <table class="internal"><tbody>
                        <tr><th>Amount:</th><td>[% trx.currency_code %] [% trx.amount %] (USD [% trx.usd_amount %])</td></tr>
                        <tr>
                            <th>Client:</th>
                            <td style="line-height: 1.1rem;">
                                [% trx.client_loginid %]<br />
                                <a href="[% trx.statement_link %]" target="_blank">Statement</a><br />
                                <a href="[% trx.profit_link %]" target="_blank">Profit</a>
                            </td>
                            <td><button onClick="viewFiatStatement(this, '[% trx.client_loginid %]', '[% broker %]', '[% fetch_url %]')"> FIAT Statement</button></td>
                            <td></td>
                        </tr>
                        <tr><th>Payment ID:</th><td>[% trx.payment_id %]</td></tr>
                    [% IF trx.transaction_type == 'withdrawal'%]
                        <tr><th>Estimated Fee:</th><td>[% trx.estimated_fee %]</td></tr>
                        <tr><th>Transaction Fee:</th><td>[% trx.txn_fee %]</td></tr>
                    [% END %]
                    </tbody></table>
                </td>
                <td valign="top">
                    <table class="internal"><tbody>
                        <tr><th>ID:</th><td>[% trx.id %]</td></tr>
                        <tr><th>Creation:</th><td>[% trx.creation_date %]</td></tr>
                    [% IF trx.transaction_type == 'deposit' %]
                        <tr><th>Pending:</th><td>[% trx.pending_date %]</td></tr>
                        <tr><th>Confirmed:</th><td>[% trx.confirmed_date %]</td></tr>
                    [% ELSIF trx.transaction_type == 'withdrawal' %]
                        <tr><th>Verified:</th><td>[% trx.verified_date %]</td></tr>
                        <tr><th>Rejected:</th><td>[% trx.rejected_date %]</td></tr>
                        <tr><th>Cancelled:</th><td>[% trx.cancelled_date %]</td></tr>
                        <tr><th>Processing:</th><td>[% trx.processing_date %]</td></tr>
                        <tr><th>Performing Blockchain:</th><td>[% trx.performing_blockchain_txn_date %]</td></tr>
                        <tr><th>Sent:</th><td>[% trx.sent_date %]</td></tr>
                    [% END %]
                    </tbody></table>
                </td>
                [% IF trx.transaction_type == 'withdrawal' %]
                    <td valign="top">
                        <table class="internal"><tbody>
                            <tr><th>Authorisers:</th><td>[% trx.authorisers.join(', ') %]</td></tr>
                            <tr><th>Client Status:</th><td>[% trx.client_status %]</td></tr>
                        </tbody></table>
                        <br/>
                        [% IF trx.status == 'LOCKED' %]
                        <form action="[% controller_url %]" onsubmit="return confirm('Do you really want to continue?');" method="POST">
                            <input type="hidden" name="trx_id" value="[% trx.id %]"/>
                            <input type="hidden" name="broker" value="[% broker %]"/>
                            <input type="hidden" name="address" value="[% trx.address %]"/>
                            <input type="hidden" name="currency" value="[% trx.currency_code %]"/>
                            <input type="hidden" name="amount" value="[% trx.amount %]"/>
                            <input type="hidden" name="loginid" value="[% trx.client_loginid %]"/>
                            <input type="hidden" name="view_action" value="withdrawals"/>
                            <br/>
                            <label>
                                Set Remark:<br/>
                                <textarea name="remark" placeholder="Replaces current remark" data-trxid="[% trx.id %]" oninput="bulkUpdateRemark(this)"></textarea>
                            </label>
                            <br/>
                            <input type="submit" name="action" value="Save"/>
                            [% IF trx.is_withdrawal_locked %]
                                <span class="warning_tag">The client withdrawal is locked</span>
                            [% ELSIF trx.authorisers.grep("^$staff\$").size > 0 %]
                                <input type="submit" name="action" value="Verify" disabled="disabled"/>
                            [% ELSE %]
                                <input type="submit" name="action" value="Verify"/>
                            [% END %]
                            <br/>
                            <select name="rejection_reason" data-trxid="[% trx.id %]" onchange="bulkUpdateReason(this)">
                                <option value="">--- Select Rejection Reason ---</option>
                                [% FOREACH option IN rejection_reasons %]
                                    <option value="[% option.index %]">[% option.reason %]</option>
                                [% END %]
                            </select>
                            <input type="submit" name="action" value="Reject"/>
                        </form>
                        [% END %]
                    </td>
                [% ELSIF view_action == 'search' && trx.transaction_type == 'deposit' %]
                    [% #Empty Verification cell for deposit transactions in search listing %]
                    <td></td>
                [% END %]
                <td valign="top">
                    <table class="internal"><tbody>
                        <tr><th>Remark:</th><td>[% trx.remark %]</td></tr>
                        <tr><th>Error:</th><td>[% trx.error_text %]</td></tr>
                    </tbody></table>
                </td>
            </tr>
        [% END %]
        </tbody>
    </table>

    [% IF view_type == 'pending' && view_action == 'withdrawals' %]
        [% PROCESS bulk_verify_controls %]
    [% END %]
    <br>
[% END %]

[% url_base = '?broker=' _ broker _ '&currency=' _ currency _ '&show_all_pendings=' _ show_all_pendings _ '&show_one_authorised=' _ show_one_authorised _ '&view_action=' _ view_action %]
[% IF view_action == 'deposits' %]
    <hr>
    <div class="link-group">
        <a class='link' [% IF view_type == 'new' %]class='selected' [% END %]href="[% url_base %]&view_type=new">View new addresses</a>
        <a class='link' [% IF view_type == 'pending' %]class='selected' [% END %]href="?[% url_base %]&view_type=pending">View pending transactions</a>
        <a class='link' [% IF view_type == 'confirmed' %]class='selected' [% END %]href="[% url_base %]&view_type=confirmed">View confirmed transactions</a>
        <a class='link' [% IF view_type == 'error' %]class='selected' [% END %]href="[% url_base %]&view_type=error">View errored transactions</a>
    </div>
[% ELSIF view_action == 'withdrawals' %]
    <hr>
    <div class="link-group">
        <a class='link' [% IF view_type == 'pending' %]class='selected' [% END %]href="[% url_base %]&view_type=pending">View pending transactions</a>
        <a class='link' [% IF view_type == 'verified' %]class='selected' [% END %]href="[% url_base %]&view_type=verified">View verified transactions</a>
        <a class='link' [% IF view_type == 'rejected' %]class='selected' [% END %]href="[% url_base %]&view_type=rejected">View rejected transaction</a>
        <a class='link' [% IF view_type == 'cancelled' %]class='selected' [% END %]href="[% url_base %]&view_type=cancelled">View cancelled transaction</a>
        <a class='link' [% IF view_type == 'processing' %]class='selected' [% END %]href="[% url_base %]&view_type=processing">View transactions under processing</a>
        <a class='link' [% IF view_type == 'performing_blockchain_txn' %]class='selected' [% END %]href="[% url_base %]&view_type=performing_blockchain_txn">View transactions listed as performed blockchain</a>
        <a class='link' [% IF view_type == 'sent' %]class='selected' [% END %]href="[% url_base %]&view_type=sent">View sent Transactions</a>
        <a class='link' [% IF view_type == 'error' %]class='selected' [% END %]href="[% url_base %]&view_type=error">View errored out transactions</a>
    </div>
[% END %]

<script>

function viewFiatStatement(elem, loginID, brokerCode, fetchURL) {
    var td_result = elem.parentNode.nextElementSibling;
    td_result.innerHTML = "<span class='success'> Fetching ..</span>";

    \$.ajax({
        url: fetchURL,
        data: {
            fiat_details: 1,
            login_id: loginID,
            broker_code: brokerCode,
        },
        success: function(data) {
           try {
               var fiat = \$.parseJSON(data);
               if (fiat.loginid)
                  td_result.innerHTML = "<a class='link' href='" + fiat.statement + "' target='_blank'> " + fiat.loginid + "</a>";
               else
                  td_result.innerHTML = "no fiat";
           }
           catch(err) {
               td_result.innerHTML = "<span class='error'>Error</span>";
           }
        },
        error: function(xhr, status, error){
           td_result.innerHTML = "<span class='error'>Error</span>";
        }
    });
}

// ----- Bulk Verify -----
const selected_transactions = {};

function bulkToggleSelected(el_chk) {
    const trx_id      = el_chk.value;
    const is_selected = el_chk.checked;
    const el_row      = el_chk.closest('tr');

    el_row.classList[is_selected ? 'add' : 'remove']('selected');

    if (is_selected) {
        selected_transactions[trx_id] = {
            amount          : el_chk.getAttribute('data-amount'),
            loginid         : el_chk.getAttribute('data-loginid'),
            remark          : el_row.querySelector('textarea[name="remark"]').value.trim(),
            rejection_reason: el_row.querySelector('select[name="rejection_reason"]').value,
        };
    } else {
        delete selected_transactions[trx_id];
    }

    bulkUpdateForm();
}

function bulkUpdateRemark(el_remark) {
    const trx_id = el_remark.getAttribute('data-trxid');

    if (selected_transactions[trx_id]) {
        selected_transactions[trx_id].remark = el_remark.value.trim();
        bulkUpdateForm();
    }
}

function bulkUpdateReason(el_rejection_reason) {
    const trx_id = el_rejection_reason.getAttribute('data-trxid');

    if (selected_transactions[trx_id]) {
        selected_transactions[trx_id].rejection_reason = el_rejection_reason.value;
        bulkUpdateForm();
    }
}

function bulkUpdateForm() {
    // Populate hidden value
    document.querySelectorAll('.selected_transactions').forEach((el_hidden) => {
        el_hidden.value = JSON.stringify(selected_transactions);
    });

    // Update the message
    const bulk_data              = bulkCalculate();
    const trx_count              = bulk_data.trx_count;
    const has_sufficient_remarks = bulk_data.remarks_count === trx_count;
    const has_sufficient_reasons = bulk_data.reasons_count === trx_count;

    const pluralForm     = (name, count) => `\${name}\${count > 1 ? 's' : ''}`;
    const createCountMsg = (name, count, is_ok) => `<span style="color: \${is_ok ? 'darkgreen' : 'darkred'};"><b>\${count}</b> \${pluralForm(name, count)}</span>`;

    const message_text = trx_count
        ? `<b>\${bulk_data.trx_count}</b> \${pluralForm('Transaction', trx_count)} selected
            (
                \${createCountMsg('Remark',           bulk_data.remarks_count, has_sufficient_remarks)},
                \${createCountMsg('Rejection reason', bulk_data.reasons_count, has_sufficient_reasons)}
            ).
            Total amount is: <b>\${bulk_data.total_amount} [% currency %]</b>`
        : 'None selected';
    document.querySelectorAll('.selection_display_text').forEach((el_selection_text) => {
        el_selection_text.innerHTML = message_text;
    });

    document.querySelectorAll('.bulk_actions button').forEach((el_btn) => {
        const should_enable = trx_count
            && (el_btn.value !== 'bulkSave'   || has_sufficient_remarks)  // remark button
            && (el_btn.value !== 'bulkReject' || has_sufficient_reasons); // reject button

        el_btn[should_enable ? 'removeAttribute' : 'setAttribute']('disabled', 'disabled');
        el_btn[should_enable || !trx_count ? 'removeAttribute' : 'setAttribute']('tooltip', 'Required data not entered!');
    });
}

function bulkCalculate() {
    const trx_ids_list = Object.keys(selected_transactions);

    let decimal_places = 0;
    let total_amount   = 0;
    let remarks_count  = 0;
    let reasons_count  = 0;

    trx_ids_list.forEach((trx_id) => {
        decimal_places = decimal_places || (selected_transactions[trx_id].amount.split('.')[1] || '').length;
        total_amount  += parseFloat(selected_transactions[trx_id].amount);
        remarks_count += !!selected_transactions[trx_id].remark.length;
        reasons_count += !!selected_transactions[trx_id].rejection_reason.length;
    });

    return {
        remarks_count,
        reasons_count,
        trx_count   : trx_ids_list.length,
        total_amount: total_amount.toFixed(decimal_places),
    };
}

function bulkConfirm() {
    const bulk_data = bulkCalculate();

    if (!bulk_data.trx_count) {
        alert('Error: No transaction selected.');
        return false;
    }

    return confirm(
        `Are you sure you want to perform Bulk action as below?
  - Selected transactions: \${bulk_data.trx_count}
      (Remarks: \${bulk_data.remarks_count}, Rejection reasons: \${bulk_data.reasons_count})
  - Total Amount: \${bulk_data.total_amount} [% currency %]`
    );
}

</script>
