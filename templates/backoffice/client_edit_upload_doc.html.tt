<br />

<form enctype="multipart/form-data" ACTION="[% self_post %]" method="POST" onsubmit="return validate_document_info()">
  <label for="docnationalityselect">Nationality (as per identity document, it can be different from residence, updates only with Passport and Proof ID upload)</label>
  <select id="docnationalityselect" name="docnationality">
    <option value="">Please select</option>
    [% FOREACH c IN countries.all_country_names.sort %]
        [% cc = countries.code_from_country(c) %]
        <option value="[% cc %]">[% c %]</option>
    [% END %]
  </select>
  <br>

<table style="width: 1200px">
[% FOR n IN [1..4] %]
<tr>
  <td>File [% n %]:</td>
  <td><select name="doctype_[% n %]" id="doctype_[% n %]" onchange="doc_type_changed([% n %])")">
    <option value="passport">Passport</option>
    <option value="national_identity_card">National ID</option>
    <option value="driving_licence">Driving License</option>
    <option value="utility_bill">Utility Bill</option>
    <option value="bankstatement">Bank statement</option>
    <option value="power_of_attorney">Power of attorney</option>
    <option value="amlglobalcheck">AML Global Check</option>
    <option value="docverification">Doc Verification (Autodoc)</option>
    <option value="vf_face_id">Video Verification Screenshot - Face & ID</option>
    <option value="vf_id">Video Verification Screenshot - ID</option>
    <option value="vf_poa">Video Verification Screenshot - POA</option>
    <option value="professional_eu_qualified_investor">EU qualified investor</option>
    <option value="professional_uk_high_net_worth">UK high net worth</option>
    <option value="professional_uk_self_certified_sophisticated">UK self-certified sophisticated</option>
    <option value="selfie_with_id">Selfie with ID</option>
    <option value="payslip">Payslip</option>
    <option value="tax_receipt">Tax Receipt</option>
    <option value="employment_contract">Employment Contract</option>
    <option value="code_of_conduct">Code of Conduct</option>
    <option value="other">Other</option>
  </select></td>
  <td align="right">
  <label name="doc_field_required_[% n %]">*</label>
    <select name="page_type_[% n %]" id="page_type_[% n %]">
      <option value="" selected>Page Type</option>
      <option value="front">Front Side</option>
      <option value="back">Back Side</option>
      <option value="photo" disabled>Photo</option>
    </select>
  <td>
  <td>*<input type="FILE" name="FILE_[% n %]" style="width: 150px" onchange="file_size_validation(this)"></td>
  <td align="right">
    <div id="expiration_date_div_[% n %]" anch>
      Expiration date:
      <span name="doc_field_required_[% n %]">
      <input type="checkbox" name="is_expiration_date_optional_[% n %]" onClick="check_is_expiration_date_optional([% n %])" title="Make optional" style="vertical-align:middle;margin:0;padding:0">
      <label id="required_star_[% n %]">*</label></span>
      <input type="text" size=11 name="expiration_date_[% n %]" placeholder="YYYY-MM-DD" pattern="\d{4}-\d{2}-\d{2}" class="datepick" data-lpignore="true" />
    </div>
    <div id="issue_date_div_[% n %]" style="display:none">
      Issue date:
      <input type="text" size=11 name="issue_date_[% n %]" placeholder="YYYY-MM-DD" pattern="\d{4}-\d{2}-\d{2}" class="datepick" data-lpignore="true" />
      <label name="doc_field_required_[% n %]">*</label>
    </div>
  </td>
  <td align="right">
    Document ID:
    <label name="doc_field_required_[% n %]">*</label>
    <input type="text" size=11 maxlength="30" name="document_id_[% n %]" placeholder="Document ID" data-lpignore="true" />
  </td>
  <td align="right">
    Comments:
    <input type="text" size=25 maxlength="255" name="comments_[% n %]" placeholder="optional, up to 255 characters" data-lpignore="true" />
  </td>
</tr>
[% END %]
</table>

  <input type="hidden" name="whattodo" value="uploadID">
  <input type="hidden" name="broker" value="[% broker %]">
  <input type="hidden" name="loginID" value="[% loginid %]">
  <input type=submit value="Upload new ID doc.">
</form>
<script type="text/javascript" language="javascript">

var regex_poi = /([% poi_doctypes %])/i;
var regex_expirable =  /([% expirable_doctypes %])/i;
var regex_no_date = /[% no_date_doctypes %]/i;
var regex_selfie_with_id = /selfie_with_id/i;

function doc_type_changed(i){
  let doc_type = document.getElementById('doctype_'+i).value;
  let is_expirable_doc = doc_type.match(regex_expirable);
  let is_no_date_doc = doc_type.match(regex_no_date);
  let is_poi_doc = doc_type.match(regex_poi);
  let is_selfie_with_id = doc_type.match(regex_selfie_with_id);
  document.getElementById('page_type_' +i).value = '';

  let enabled_options = [];
  if(is_poi_doc || is_selfie_with_id) {
    enabled_options = (is_poi_doc)?['front','back']:['photo'];
  }
  handle_page_type_control(i, enabled_options);
  if(is_selfie_with_id) {
    document.getElementById('page_type_' +i).value = 'photo';
  }
  document.getElementById('expiration_date_div_'+i).style.display = 'none';
  document.getElementById('issue_date_div_'+i).style.display = 'none';

  if (is_expirable_doc)
    document.getElementById('expiration_date_div_'+i).style.display = 'inline';
  else if (!is_no_date_doc)
    document.getElementById('issue_date_div_'+i).style.display = 'inline';

  let req_elements = document.getElementsByName('doc_field_required_'+i);
  for (let i = 0; i < req_elements.length; i++)
      req_elements[i].style.display = is_poi_doc ? 'inline': 'none';
}

function check_is_expiration_date_optional(i){
   document.getElementById('required_star_' + i).innerHTML = document.getElementsByName('is_expiration_date_optional_' + i)[0].checked ? '': '*';
}

function file_size_validation(file) {
  var FileSize = file.files[0].size / (1024 * 1024);

  // Maximum is 8MB
  var max_size = 8;
  if(FileSize > max_size) {
    alert ("Exceeds maximum size of " + max_size + "MB");
    file.value = "";
  }
}

function validate_expiry_date(date) {
  let expiry_date = new Date(date);
  if(expiry_date == 'Invalid Date')
      return "Invalid expiry date. Please match the requested format.\n"
  else if(expiry_date <= new Date())
    return "Expiry date must be a future date.\n";

  return '';
}

function validate_document_info() {
  let get_value = function(elm_name) {
    return (document.getElementsByName(elm_name)[0] || {}).value;
  }

  let error_msg = "";
  let nationality = document.getElementsByName('docnationality')[0].value;
  let is_file_uploaded = false;

  for (let i = 1; i <= 4; i++) {

    let file_comments_errors = "";

    let doc_type = get_value('doctype_' + i);
    let issue_date = get_value('issue_date_' + i);
    let expiry_date = get_value('expiration_date_' + i);
    let comments = get_value('comments_' + i);
    let doc_id = get_value('document_id_' + i);
    let page_type = get_value('page_type_' + i);

    let is_poi_doc = doc_type.match(regex_poi);
    let is_expirable_doc = doc_type.match(regex_expirable);
    let is_no_date_doc = doc_type.match(regex_no_date);
    let is_expiration_date_optional = document.getElementsByName('is_expiration_date_optional_' + i)[0].checked;


    // Check if file uploaded (if not, proceed to next file)
    if(!get_value('FILE_' + i)) {

      if (expiry_date || doc_id || comments) {
        file_comments_errors = "Please upload a file for File " + i + "\n\n";
        error_msg += file_comments_errors;
      }

      continue;
    }

    is_file_uploaded = true;

    // POI validation
    if(is_poi_doc) {
      if(!nationality) {
        file_comments_errors += "Nationality is required.\n";
      }

      if(!page_type) {
        file_comments_errors += "Page type is not selected.\n";
      }

      if(!doc_id) {
        file_comments_errors += "Document ID is required.\n";
      }

      if (!expiry_date && !is_expiration_date_optional)
        file_comments_errors += "Expiry date is required.\n";
      if (expiry_date)
        file_comments_errors += validate_expiry_date(expiry_date);
    }
    else if (is_expirable_doc && expiry_date){
      file_comments_errors += validate_expiry_date(expiry_date);
    }
    else if (!is_no_date_doc && issue_date) {
      issue_date = new Date(issue_date);
      if(issue_date == 'Invalid Date'){
          file_comments_errors += "Invalid issue date. Please match the requested format.\n"
        }
        else if(issue_date > new Date()) {
        file_comments_errors += "Issue date must be a past date.\n"
      }
    }

    if (doc_id.length > 30) {
      file_comments_errors += "Document ID is too long.\n";
    }

    if(comments.length > 255) {
      file_comments_errors += "Comments are too long.";
    }

    if (file_comments_errors !== "") {
      error_msg += "Document upload failed for File " + i + ": \n\n" + file_comments_errors + "\n\n";
    }
  }

  if(!is_file_uploaded) {
    error_msg = "No file is selected for uploading.";
  }

  if (error_msg !== "") {
    alert(error_msg);
    return false;
  }

  return true;
}

function handle_page_type_control(i, enabled_options) {
  let options = document.getElementById('page_type_' +i ).getElementsByTagName("option");
  for (var index = 1; index < options.length; index++) {
          options[index].disabled = (enabled_options.indexOf(options[index].value) !== -1)?false:true ;
    }
}

\$(document).ready(function() {
      \$('.datepick').datepicker({dateFormat: "yy-mm-dd",changeMonth: true,
      changeYear: true});
});
</script>
