<p><a href="[% request.url_for('backoffice/f_clientloginid.cgi', { broker => broker.code}) %]#attorney_granter">Back to Client Management</a></p>

<table border="1" id="attorney_table">

[% IF attorneys.size %]
<tr><th>Attorney</th><th>Company name</th><th>Website URL</th><th>Total Granters</th><th>Status</th></tr>
[% INCLUDE 'backoffice/attorney_list.html.tt' %]
[% END %]

<tr><td colspan="5">Add new attorney or edit one</td></tr>
<tr>
        <form id="add_attorney">
        <td><input style="width: 100%; border: none; background-color: transparent;" type="text" name="loginid" placeholder="Login ID"></td>
        <td><input style="width: 100%; border: none; background-color: transparent;" type="text" name="company_name" placeholder="Company name"></td>
        <td><input style="width: 100%; border: none; background-color: transparent;" type="text" name="url" placeholder="http://..."></td>
        <td colspan="2"><input style="width: 100%" type="submit" name="_smbt_" value="Submit"></td>
        </form>
</tr>
</table>

<form enctype="multipart/form-data" action="[% request.url_for('backoffice/attorney_granter.cgi') %]" method="post" class="bo_form_with_files" id="add_attorney_granter">
	<fieldset>
		<legend>Add new granter(s) to an attorney</legend>
		<input type="hidden" name="broker" value="[% broker.code %]" />
		<input type="hidden" name="action" value="add_granters" />
		<table border="0">
			<tr>
				<td valign="top" align="right">Attorney: </td>
				<td valign="top">
					<select name="attorney_client_loginid" required>
						<option data-sortkey="0" value="" selected>--- please select ---</option>
					[% FOREACH attorney IN attorneys %]
						<option data-sortkey="[% attorney.sortkey %]" data-approved="[% attorney.approved ? '1' : '0' %]" value="[% attorney.loginid %]">[% attorney.loginid %] - [% attorney.name %]</option>
					[% END %]
					</select>
				</td>
			</tr>
			<tr>
				<td valign="top" align="right">Scanned Granter-Attorney letter(s):</td>
				<td valign="top">
					<div><input type="file" name="letter_of_attorney_pdf" /></div>
				</td>
			</tr>
			<tr class="invisible">
				<td valign="top" align="right">Granter login ID(s):</td>
				<td valign="top"><textarea name="ignore_letter_of_attorney_and_use_granter_loginids_instead"></textarea></td>
			</tr>
			<tr>
				<td></td>
				<td>
					<em>
						Expecting a PDF file.
						<br />
						<strong>The PDF file name has to be Login ID of the granter. i.e. [% broker.code %]12345.pdf</strong>
					</em>
				</td>
			</tr>
			<tr>
				<td></td>
				<td><input type="submit" value="ASSIGN THESE GRANTER(S) TO THAT ATTORNEY" /></td>
			</tr>
		</table>
	</fieldset>
</form>

<script type="text/javascript">

\$('#add_attorney_granter').delegate('button.close_button', 'click', function (){
	var
		added_attorney_id = \$('#added_attorney_id').val(),
		added_attorney_total_granters = \$('#added_attorney_total_granters').val();

	if (added_attorney_id && added_attorney_total_granters)
	{
		\$('#'+added_attorney_id+'_total_granters').html(added_attorney_total_granters);
	}
});

\$(function () {
    var my_style,
    on_success = function (result) {
        var nodes, i, node, sk, tds, link, tr;
        if (result.error) {
            alert(result.error);
        } else if (result.success) {
            // 1) update or insert table row
            nodes = document.getElementById('attorney_table').querySelectorAll('tr[data-sortkey]');
            // the list of rows in the attorney table is expected
            // to be short enough to justify a sequential scan
            for (i = 0; i < nodes.length; i++) {
                sk = nodes[i].getAttribute('data-sortkey');
                if (result.sortkey <= sk) {
                    node = nodes[i];
                    break;
                }
            }
            if (sk === result.sortkey) { // update row
                tds = node.querySelectorAll('td');
            } else {            // insert new row
                if (nodes.length) {
                    tr = nodes[0].cloneNode(true);
                    nodes[0].parentNode.insertBefore(tr,
                                                     (node
                                                      ? node
                                                      : nodes[nodes.length-1].nextElementSibling));
                    tr.setAttribute('data-sortkey', result.sortkey);
                    tr.setAttribute('data-loginid', result.loginid);
                    tds = tr.querySelectorAll('td');
                    tds[0].textContent = result.loginid;
                } else {        // no data row yet => reload page
                    window.location.reload();
                }
            }
            tds[1].textContent = result.name;
            link = tds[2].querySelector('a');
            link.textContent = result.url;
            link.href = result.url;
            link = tds[3].querySelector('a');
            link.id = result.loginid + '_total_granters';
            link.textContent = result.total_granters;
            link.href = link.href.replace(/(attorney_client_loginid)=[^&;]*/, "\$1=" + result.loginid)
                                 .replace(/(broker)=[^&;]*/, "\$1=" + result.broker);
            tds[4].querySelector('button[data-approved]').setAttribute('data-approved',
                                                                       result.approved ? '1' : '0');
            
            // 2) update option list in add-granter form
            nodes = document.getElementById('add_attorney_granter').querySelectorAll('option[data-sortkey]');
            for (i = 0; i < nodes.length; i++) {
                sk = nodes[i].getAttribute('data-sortkey');
                if (result.sortkey <= sk) {
                    node = nodes[i];
                    break;
                }
            }
            if (sk !== result.sortkey) { // insert new row
                // nodes.length must be greater that zero. Otherwise, we'd already
                // have reloaded the page, see above.
                tr = nodes[0].cloneNode(true);
                nodes[0].parentNode.insertBefore(tr, node);
                tr.setAttribute('data-sortkey', result.sortkey);
                tr.setAttribute('data-approved', result.approved ? '1' : '0');
                tr.textContent = result.loginid+' - '+result.name;
                tr.value = result.loginid;
            } else {
                node.setAttribute('data-approved', result.approved ? '1' : '0');
                node.textContent = result.loginid+' - '+result.name;
                node.value = result.loginid;
                if (!result.approved && node.parentNode.value === node.value) node.parentNode.value = '';
            }
        } else {
            alert("The server sent invalid data.");
        }
    },
    on_error = function () {
        alert('An error has occured while trying to add or update the attorney.');
    };

    // here we create a new style sheet and insert a few rules. Thus, we can isolate the
    // js code a bit more from the template code. The approve-button expects its direct
    // children to be span elements. The first span element is shown if the data-approved
    // attribute of the button is 0. If the attribute is 1 the second child is displayed.
    my_style = document.createElement('style');
    my_style.setAttribute('type', 'text/css');
    document.getElementsByTagName('head')[0].appendChild(my_style);
    my_style.sheet.insertRule('button[data-approved="1"] span:nth-child(1) {display: none}', 0);
    my_style.sheet.insertRule('button[data-approved="0"] span:nth-child(2) {display: none}', 0);
    my_style.sheet.insertRule('button[data-approved], button[data-del] {width: 8em}', 0);
    my_style.sheet.insertRule('option[data-approved="0"] {display: none}', 0);

    \$('#add_attorney').ajaxForm({
        type: 'post',
        url: '?ajax_only=1&action=add_attorney',
        resetForm: true,
        success: on_success,
        error: on_error,
        dataType: 'json'
    });

    \$('#attorney_table').on('click', 'button[data-approved]', function () {
        var loginid = \$(this).parents('[data-loginid]').attr('data-loginid'),
            action = this.getAttribute('data-approved') === '0' ? '1' : '0';
        if (confirm("Are you sure to "+(action==='1'?'':'dis')+"approve the attorney "+loginid)) {
            \$.ajax({
                type: 'post',
                url: '?ajax_only=1&action=add_attorney',
                data: {
                    loginid: loginid,
                    approved: action
                },
                success: on_success,
                error: on_error,
                dataType: 'json'
            });
        }
    });

    \$('#attorney_table').on('click', 'button[data-del]', function () {
        var loginid = \$(this).parents('[data-loginid]').attr('data-loginid');
        if (confirm("Are you sure to delete the attorney "+loginid)) {
            \$.ajax({
                type: 'post',
                url: '?ajax_only=1&action=del_attorney',
                data: {
                    loginid: loginid
                },
                success: function (result) {
                    var node;
                    if (result.error) {
                        alert(result.error);
                    } else if (result.success) {
                        // 1) delete table row
                        node = document.getElementById('attorney_table').querySelector('tr[data-sortkey="'+result.sortkey+'"]');
                        node.parentNode.removeChild(node);
                        
                        // 2) update option list in add-granter form
                        node = document.getElementById('add_attorney_granter').querySelector('option[data-sortkey="'+result.sortkey+'"]');
                        node.parentNode.removeChild(node);
                        if (result.gone_granters.length) {
                            alert("The following granters of this attorney were also deleted:\n\n" +
                                  result.gone_granters.join(", "));
                        }
                    } else {
                        alert("The server sent invalid data.");
                    }
                },
                error: on_error,
                dataType: 'json'
            });
        }
    });
});

</script>
