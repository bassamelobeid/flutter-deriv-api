<p><a href="[% request.url_for('backoffice/p2p_order_list.cgi') %]">Back to orders list</a></p>

<form action="[% request.url_for('backoffice/p2p_order_manage.cgi', {broker => broker}) %]" method="get">
Order ID: <input type="text" name="order_id" value="[% order.id %]" size=20 data-lpignore="true" />
<button type="submit">Get order</button>
</form>

[% IF order %]

    <h3>Details for order [% order.id %]</h3>

    <table border="1" class="collapsed">
        <tr>
            <td>Status</td>
            <td><b>[% order.status %]</b></td>
        </tr>
        <tr>
            <td>Type</td>
            <td><b>[% order.type %]</b> (advert type: [% order.advert_type %] Binary [% order.account_currency %] using local [% order.local_currency %])</td>
        </tr>
        <tr>
            <td>Client&nbsp;&nbsp;<span style="color:blue; font-weight:bold;">[% order.client_role %]</span></td>
            <td>[% order.client_loginid %]
                <form action="[% request.url_for('backoffice/f_clientloginid_edit.cgi') %]" method="get" style="display:inline;margin:0px;padding:0px;">
                    <input type="hidden" name="broker" value="[% broker %]"/>
                    <input type="hidden" name="loginID" value="[% order.client_loginid %]"/>
                    <button type="submit">Profile</button>
                </form>
                <form action="[% request.url_for('backoffice/f_manager_history.cgi') %]" method="post" style="display:inline;margin:0px;padding:0px;">
                    <input type="hidden" name="broker" value="[% broker %]"/>
                    <input type="hidden" name="loginID" value="[% order.client_loginid %]"/>
                    <input type="hidden" name="startdate" value="[% order.created_time %]"/>
                    <button type="submit">Statement</button>
                </form>
            </td>
        </tr>
        <tr>
            <td>Client confirmed</td>
            <td><b>[% order.client_confirmed %]</b></td>
        </tr>
        <tr>
            <td>Client P2P advertiser id</td>
            <td>[% order.client_id %]</td>
        </tr>
        <tr>
            <td>Client advertiser name</td>
            <td>[% order.client_name %]</td>
        </tr>
        <tr>
            <td>Advertiser&nbsp;&nbsp;<span style="color:blue; font-weight:bold;">[% order.advertiser_role %]</span></td>
                <td>[% order.advertiser_loginid %]
                <form action="[% request.url_for('backoffice/f_clientloginid_edit.cgi') %]" method="get" style="display:inline;margin:0px;padding:0px;">
                    <input type="hidden" name="broker" value="[% broker %]"/>
                    <input type="hidden" name="loginID" value="[% order.advertiser_loginid %]"/>
                    <button type="submit">Profile</button>
                </form>
                <form action="[% request.url_for('backoffice/f_manager_history.cgi') %]" method="post" style="display:inline;margin:0px;padding:0px;">
                    <input type="hidden" name="broker" value="[% broker %]"/>
                    <input type="hidden" name="loginID" value="[% order.advertiser_loginid %]"/>
                    <input type="hidden" name="startdate" value="[% order.created_time %]"/>
                    <button type="submit">Statement</button>
                </form>
            </td>
        </tr>
        <tr>
            <td>Advertiser id</td>
            <td>[% order.advertiser_id %]</td>
        </tr>
        <tr>
            <td>Advertiser name</td>
            <td>[% order.advertiser_name %]</td>
        </tr>
        <tr>
            <td>Advertiser confirmed</td>
            <td><b>[% order.advertiser_confirmed %]</b></td>
        </tr>
        <tr>
            <td>Amount</td>
            <td>[% order.account_currency %] [% order.amount %]</td>
        </tr>
        <tr>
            <td>Payment due</td>
            <td>[% order.local_currency %] [% order.payment_due %] (advert rate: [% order.advert_rate %])</td>
        </tr>
        <tr>
            <td>Payment method</td>
            <td>[% order.advert_payment_method %]</td>
        </tr>
        <tr>
            <td>Creation time</td>
            <td>[% order.created_time %]</td>
        </tr>
        <tr>
            <td>Expiration time</td>
            <td>[% order.expire_time %]
            [% IF order.is_expired %]&nbsp;&nbsp;<span style="color:red; font-weight:bold;">EXPIRED</span>[% END %]
            </td>
        </tr>
        <tr>
            <td>Advert ID</td>
            <td>[% order.advert_id %]</td>
        </tr>
        <tr>
            <td>Payment info</td>
            <td>[% order.payment_info %]</td>
        </tr>
        <tr>
            <td>Contact info</td>
            <td>[% order.contact_info %]</td>
        </tr>
        <tr>
            <td>Escrow</td>
            <td>[% escrow %]</td>
        </tr>        
    </table>

    <h3>Transactions</h3>
    <table border="1" class="collapsed">
        <thead>
            <tr>
                <th scope="col">Time</th>
                <th scope="col">Type</th>
                <th scope="col"></th>
                <th scope="col">TX ID</th>
                <th scope="col">Loginid</th>
                <th scope="col">Amount</th>
                <th scope="col">TX type</th>
                <th scope="col">Payment ID</th>
                <th scope="col">Staff</th>
            </tr>
        </thead>
        <tbody>
            [% FOREACH t = transactions %]
            <tr>
                <td rowspan=2>[% t.transaction_time %]</td>
                <td rowspan=2>[% t.type %]</td>
                <td>From</td>
                <td>[% t.src_id %]</td>
                <td>[% t.src_loginid %]</td>
                <td>[% t.src_amount %]</td>
                <td>[% t.src_action_type %]</td>
                <td>[% t.src_payment_id %]</td>
                <td>[% t.src_staff %]</td>
            </tr>
            <tr>
                <td>To</td>
                <td>[% t.dest_id %]</td>
                <td>[% t.dest_loginid %]</td>
                <td>[% t.dest_amount %]</td>
                <td>[% t.dest_action_type %]</td>
                <td>[% t.dest_payment_id %]</td>
                <td>[% t.dest_staff %]</td>
            </tr>
            [% END %]
        </tbody>
    </table>

    [% IF p2p_write && order.status == 'Timed-out' %]
    <h3>Blocked order resolution</h3>
    <form action="[% request.url_for('backoffice/p2p_order_manage.cgi', {broker => broker, order_id => order.id }) %]" method="post">
    <table style="background:LightCoral;" cellpadding=5><tr><td>
    <b>Resolve in favour of:</b>
    </td></tr><tr><td>
    <button style="width:150px;" type="submit" name="action" value="refund" onclick="return confirm('Are you sure? [% order.account_currency %] [% order.amount %] will refunded to [% order.seller %] and order status will change to \'refunded\'. This is irreversible.');">SELLER</button>
    This will transfer [% order.account_currency %] [% order.amount %] from escrow [% escrow %] to seller [% order.seller %].
    </td></tr><tr><td>
    <button style="width:150px;" type="submit" name="action" value="complete" onclick="return confirm('Are you sure? [% order.account_currency %] [% order.amount %] will credited to [% order.buyer %] and order status will change to \'completed\'. This is irreversible.');">BUYER</button>
    This will transfer [% order.account_currency %] [% order.amount %] from escrow [% escrow %] to buyer [% order.buyer %].
    </td></tr></tbody></table>
    </form>
    [% END %]

    <h3>Chat Log</h3>

    [% IF chat_messages.size %]
        <table border="1" class="collapsed">
            <thead>
                <tr>
                    <th scope="col">Time</th>
                    <th scope="col">Type</th>
                    <th scope="col">Chat User</th>
                    <th scope="col">Role</th>
                    <th scope="col">Message</th>
                </tr>
            </thead>
            <tbody>
                [% FOREACH chat = chat_messages %]
                    <tr>
                        <td>[% chat.created_time %]</td>
                        <td>[% chat.message_type %]</td>
                        <td>[% chat.chat_user %]</td>
                        <td>[% chat.chat_role %]</td>
                        <td>
                            [% IF chat.message_type == 'FILE' %]
                                <a target="_blank" class="chat_file_url" href="[% chat.file_url %]" onclick="download_handler(event)">DOWNLOAD</a>
                            [% ELSE %]
                                [% chat.message_text %]
                            [% END %]
                        </td>
                    </tr>
                [% END %]
            </tbody>

            <tfoot>
                <tr>
                    <td colspan="2">
                        [% IF chat_messages_prev %]
                            <a href="[% request.url_for('backoffice/p2p_order_manage.cgi', {p => chat_messages_prev, order_id => order.id }) %]">Previous</a>
                        [% END %]
                    </td>
                    <td align="right" colspan="3">
                        [% IF chat_messages_next %]
                            <a href="[% request.url_for('backoffice/p2p_order_manage.cgi', {p => chat_messages_next, order_id => order.id }) %]">Next</a>
                        [% END %]
                    </td>
                </tr>
            </tfoot>
        </table>

        <script>
            // Since file URL needs Api-Token as header an such thing is impossible for regular links,
            // this tiny and rather ugly snippet makes an XHR request to get the file.
            // Caveat: it requires to download the whole file before the UI reacts, so a couple seconds of lags are feasible
            // Caveat: it may expose sendbird api token, a secondary api token is good enough though.

            const download_handler = (event) => {
                event.preventDefault();

                const link = event.target;
                if (link.disabled) return;

                const token = '[% sendbird_token %]';
                const url = event.toElement.href;
                const xhr = new XMLHttpRequest();
                let to = setTimeout(() => { xhr.abort() }, 10000);
                link.innerHTML = 'downloading file...';
                link.disabled = 'disabled';

                xhr.addEventListener('load', (event) => {
                    const current = event.currentTarget;
                    var blob = current.response;
                    var filename = url.split('/').pop();
                    var a = document.createElement('a');
                    a.href = URL.createObjectURL(blob);
                    a.download = filename;
                    a.dispatchEvent(new MouseEvent('click'));
                    link.innerHTML = 'DOWNLOAD';
                    delete link.disabled;
                    clearTimeout(to);
                    to = null;
                });
                
                xhr.addEventListener('abort', (event) => {
                    link.innerHTML = 'RETRY';
                    delete link.disabled;
                    clearTimeout(to);
                    to = null;
                });

                xhr.open('GET', url);
                xhr.responseType = 'blob';
                xhr.setRequestHeader('Api-Token', token);
                xhr.send();
            };
        </script>
    [% ELSE %]
        [% IF chat_messages_prev %]
            <p>
                No messages at this page,                                 
                <a href="[% request.url_for('backoffice/p2p_order_manage.cgi', {p => chat_messages_prev, order_id => order.id }) %]">previous</a>
            </p>
        [% ELSE %]
            <p>No chat was started about this order</p>
        [% END %]
    [% END %]
[% END %]
