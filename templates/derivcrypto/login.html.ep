<% if (!$login_method || stash('error') || stash('social_error')) {
    # doing this because the frontend is sending the chinese language as
    # zh_cn instead of zn-cn
    my $language =   (lc $r->language ne 'en')?lc($r->language).'/':'';
    $language    =~ s/_/-/;
%>
    <div id="container">
        <h1 class="title-text" style="font-size: 2.4rem"><%= l('Welcome back!') %></h1>
        <p class="subtitle-text"><%= l('It\'s good to see you again. Log in to start trading.') %></p>
        <div class="note-container">
            <div class="derivcrypto-logo">
                <svg xmlns="http://www.w3.org/2000/svg" width="43" height="42"><g fill="none" fill-rule="evenodd"><path fill="#FEFEFE" d="M36.03 6.598C27.97-1.48 14.857-1.48 6.795 6.596c-8.06 8.074-8.06 21.216 0 29.29 8.062 8.08 21.179 8.078 29.235 0 8.07-8.074 8.07-21.216 0-29.288"/><path fill="#777" d="M15.652 26.674s.237 1.776 1.73 2.599l-.398-.742s.761-1.999-1.332-1.857"/><path fill="#777" d="M22.255 14.32c1.605.573 2.121 2.287 2.121 2.287-2.042.466-1.612-1.622-1.612-1.622l-.51-.665zM33 32.851c-.21.205-.415.405-.627.598-4.611 3.764-8.162 1.892-8.203 1.892-2.407-.482-3.602-.49-4.277-.942-.17-.114-.715-.407-.84-.336-.491.293-1.168.444-1.863-.11-.061-.05-.12-.107-.173-.158-.766-.765-.506-1.554-.252-1.829.177-.18-.134-.684-.134-.684s-.904-1.345-1.521-2.154c-.68-.889-.773-2.652-.781-2.675l-.01-.025c-.686-.817-.758-1.069-.995-1.467-.138-.236-.351-.456-.532-.646a3.35 3.35 0 01-.32-.353c-.018-.023-.023-.058-.016-.112.064-.382.882-1.224 1.06-1.34.216-.141 1.15-.71 1.15-.71s.525-.827 1.418-.827c.806.005 1.298-.044 2.688.41l.578.183c.969.311 1.823.678 2.502.972.576.248 1.037.45 1.39.542 1.2.316 3.314-.656 3.76-1.066.732-.667 1.048-1.114 1.052-1.48.006-.206-.085-.386-.292-.603-.108-.1-.247-.285-.421-.462-.028-.027-.057-.06-.092-.085-2.03-2.159-1.679-3.513-1.677-3.535.088-.971-.468-1.595-1.066-2.24l-.097-.122a.652.652 0 01-.07-.078c.864.141 1.453.49 3.141.678.959.103.656.094 1.422.076 1.055-.034 1.891-.127 1.948-.367-.102-.087-.569.026-2.81-.832a32.835 32.835 0 00-1.86-.676 27.01 27.01 0 01-1.768-.683c3.656.96 4.852 1.337 6.524 1.36a5.273 5.273 0 001.258-.112c.238-.043.976-.21 1.06-.466.025-.045-.708.12-2.065-.328-4.267-1.413-4.63-2.12-6.995-3.041-.826-.321-1.094-.497-3.586-1.142-1.142-.294-2.868-.125-3.103.023-3.235-.762-3.97-.679-4.919-.474C18.915 3.36 27.463 4.092 33 9.638c.75.754 1.415 1.564 1.997 2.423l.078.118a16.266 16.266 0 012.725 9.065A16.33 16.33 0 0133 32.851zm1.984-25.205c-7.486-7.5-19.657-7.5-27.142-.002-7.483 7.498-7.483 19.699 0 27.198 7.485 7.5 19.66 7.496 27.142-.002 7.493-7.497 7.493-19.698 0-27.194z"/></g></svg>
            </div>
            <div class="note-wrapper">
                <h5 class="note-title"><%== l('If you\'re a [_1] user, log in with your [_2] username and password', '<strong>Binary.com</strong>', '<strong>Binary.com</strong>') %></h5>
            </div>
        </div>
        <form id="frmLogin" method="POST">
            <div class='input-group'>
                <div class="input-wrapper">
                    <input type="email" id="txtEmail" name="email" placeholder="<%= l('example@email.com') %>" required autocomplete="off" <% unless (stash('error')) { %> autofocus="autofocus" <% } %> maxlength="254" />
                    <label for="txtEmail"><%= l('Email') %></label>
                    <span class="bar"></span>
                </div>
                <div class="input-error">
                    <p class='hide error error_invalid'><%= l("That doesn't look like an email address.") %></p>
                    <p class='hide error error_required'><%= l('Email is required.') %></p>
                    <% if (stash('error')) { %>
                        <p class='error'><%= stash('error') %></p>
                    <% } %>
                </div>
            </div>
            <div class="input-group">
                <div class="input-wrapper">
                    <input type="password" id="txtPass" name="password" required autocomplete="off" />
                    <label for="txtPass"><%= l('Password') %></label>
                    <span class="bar"></span>
                    <span id="btnToggle" class="input-button icon_hidden"></span>
                </div>
                <div class="input-error">
                    <p class='hide error error_required'><%= l('Password is required.') %></p>
                </div>
            </div>
            <div id="lost-password-container">
                <% if ($is_reset_password_allowed) { %>
                    <a id="lost-password" href="https://<%= $website_domain %>/<%= lc($language) %>reset-password"><%= l('Forgot password?') %></a>
                <% } %>
                <button type="submit" class="button secondary" name="login" value="<%= l('Log in') %>"><%= l('Log in') %></button>
            </div>
            <input type="hidden" name="csrf_token" value="<%= $csrf_token %>" />
        </form>
        <% if ($use_social_login) { %>
            <div class="separator">
                <p class="center-text social-text">
                    <%= stash('error') ? l('Perhaps you signed up with a social account?') : l('Or log in with') %>
                </p>
            </div>
            <div id="oa_social_login_container"></div>
            <% if (stash('social_error')) { %>
                <p class='error-oneall center-text'><%= stash('social_error') %></p>
            <% } %>
            <p class="account-text">
                <%== l('Donâ€™t have an account yet? [_1]Create a new account[_2]', sprintf("<a class='account-link' href='https://%s/%ssignup/'>", $website_domain, lc($language)), '</a>') %>
            </p>
        <% } %>
    </div>
<% } %>

<script type="text/javascript">
    var frmLogin, txtEmail, txtPass, btnToggle;
    window.onload = function() {
        frmLogin  = document.getElementById('frmLogin');
        txtEmail  = document.getElementById('txtEmail');
        txtPass   = document.getElementById('txtPass');
        btnToggle = document.getElementById('btnToggle');

        btnToggle.addEventListener('click', togglePasswordVisibility);

        if (frmLogin) {
            frmLogin.addEventListener('submit', function(e) {
                if (!validateAll()) {
                    e.preventDefault();
                    return false;
                }
            });
        }

        var fields = [
            { element: txtEmail, validator: validateEmail },
            { element: txtPass,  validator: validatePass },
        ];
        fields.forEach(function(field) {
            if (field.element) {
                ['change', 'blur'].forEach(function(event) {
                    field.element.addEventListener(event, function(e) {
                        field.validator();
                    });
                });
            }
        });
    };

    function validateAll() {
        return validateEmail() && validatePass();
    }

    function validateEmail() {
        return validateField(txtEmail, new RegExp(/^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,63}$/));
    }

    function validatePass() {
        return validateField(txtPass, new RegExp(/^[ -~]{6,25}$/));
    }

    function validateField(element, regex) {
        if (element) {
            hideErrors(element);

            var hasError = true;
            var value = (element.value || '').trim();
            element.value = value;
            if (!value) {
                showError(element, 'required');
            } else if (!regex.test(value)) {
                showError(element, 'invalid');
                raiseLabel(element, 1);
            } else {
                hasError = false;
                raiseLabel(element, 0);
            }

            return !hasError;
        }
    }

    function hideErrors(element) {
        element.parentNode.classList.remove('has_error');
        element.parentNode.parentNode.querySelectorAll('.input-error .error').forEach(function (el) {
            el.classList.add('hide');
        });
    }

    function showError(element, errorType) {
        element.parentNode.classList.add('has_error');
        var el = element.parentNode.parentNode.querySelector('.input-error .error_' + errorType);
        if (el) {
            el.classList.remove('hide');
        }
    }
    function raiseLabel(element, should_raise) {
        element.parentNode.querySelector('label').classList[should_raise ? 'add' : 'remove']('raised-label');
    }

    function togglePasswordVisibility() {
        if (txtPass.type === 'password') {
            txtPass.type = 'text';
            btnToggle.classList.remove('icon_hidden');
            btnToggle.classList.add('icon_visible');
        } else {
            txtPass.type = 'password';
            btnToggle.classList.remove('icon_visible');
            btnToggle.classList.add('icon_hidden');
        }
    }
</script>

<script type="text/javascript">
    var use_social_login = '<%== $use_social_login %>';
    if (use_social_login) {
        var cb = '<%= $oneall_callback %>';
        var login_method = '<%= $login_method %>';
        var providers = <%== Mojo::JSON::encode_json($login_providers) %>;

        /* Embeds the buttons into the container oa_social_login_container */
        var _oneall = _oneall || [];
        _oneall.push(['social_login', 'set_force_re_authentication', true]);
        _oneall.push(['social_login', 'set_providers', providers]);
        _oneall.push(['social_login', 'set_callback_uri', cb]);
        _oneall.push(['social_login', 'set_popup_usage', 'never']);
        /* push all configs before this as once rendered it not possible to hook*/
        _oneall.push(['social_login', 'do_render_ui', 'oa_social_login_container']);

        if (login_method) {
            _oneall.push(['social_login', 'do_login', login_method]);
        }
        if (document.getElementById('frmLogin')) {
            document.getElementById('frmLogin').reset();
        }
    }
</script>
