<% if (!$login_method || stash('error') || stash('social_error')) {
    # doing this because the frontend is sending the chinese language as
    # zh_cn instead of zn-cn
    my $language =   (lc $r->language ne 'en')?lc($r->language).'/':'';
    $language    =~ s/_/-/;
%>
    <div id="container">
        <h1 class="title-text" style="font-size: 2.4rem"><%= l('Welcome!') %></h1>
        <p class="subtitle-text"><%= l('Log in to continue.') %></p>
        <form novalidate id="frmLogin" method="POST">
            <div class='input-group'>
                <div class="input-wrapper <% if (stash('error')) { %>has_error<% } %>">
                    <input type="email" id="txtEmail" name="email" placeholder="<%= l('example@email.com') %>" value="<%= stash('email_entered') %>" required autocomplete="off" <% unless (stash('error')) { %> autofocus="autofocus" <% } %> maxlength="254" <% if (stash('error')) { %>autofocus="autofocus"<% } %> />
                    <label for="txtEmail"><%= l('Email') %></label>
                    <span class="bar"></span>
                </div>
                <div class="input-error">
                    <p class='hide error error_invalid'><%= l("That doesn't look like an email address.") %></p>
                    <p class='hide error error_required'><%= l('Email is required.') %></p>
                    <% if (stash('error')) { %>
                        <p class='error'><%= stash('error') %></p>
                    <% } %>
                </div>
            </div>
            <div class="input-group">
                <div class="input-wrapper">
                    <input type="password" id="txtPass" name="password" required autocomplete="off" />
                    <label for="txtPass"><%= l('Password') %></label>
                    <span class="bar"></span>
                    <span id="btnToggle" class="input-button icon_hidden"></span>
                </div>
                <div class="input-error">
                    <p class='hide error error_required'><%= l('Password is required.') %></p>
                </div>
            </div>
            <div id="lost-password-container">
                <% if ($is_reset_password_allowed) { %>
                    <% if ($app->{id} == 36218) { %>
                        <a target="_blank" rel="noopener noreferrer" id="lost-password" href="https://<%= $website_domain %>/<%= lc($language) %>reset-password"><%= l('Forgot password?') %></a>
                    <%} else {%>
                        <a id="lost-password" href="https://<%= $website_domain %>/<%= lc($language) %>reset-password"><%= l('Forgot password?') %></a>
                    <% } %>
                <% } %>
                <button type="submit" class="button secondary" name="login" value="<%= l('Log in') %>"><%= l('Log in') %></button>
            </div>
            <input type="hidden" name="csrf_token" value="<%= $csrf_token %>" />
        </form>
        <% if ($use_social_login) { %>
            <%if ($use_oneall) {%> 
                <div class="separator">
                    <p class="center-text social-text">
                        <%= stash('error') ? l('Perhaps you signed up with a social account?') : l('Or log in with') %>
                    </p>
                </div>
                <div id="oa_social_login_container"></div>
            <%}else {%>
                %= include 'shared/_social_login'
            <%}%>
            <% if (stash('social_error')) { %>
                <p class='error-oneall center-text'><%= stash('social_error') %></p>
            <% } %>
        <% } %>
        <p id="signup-link" class="account-text"></p>
    </div>
    <script>
        var websiteDomain = '<%= $website_domain %>';
        var app_id = '<%= $app->{id} %>';
        var currentUrl = new URL(location.href);
        var partnerId = currentUrl.searchParams.get('partnerId');
        var signup_url = '';

        if (partnerId && /^[\w\-]{1,32}$/.test(partnerId)) {
            partnerId = encodeURIComponent(partnerId);    
        } else {
            partnerId = '';
        }

        if (app_id == 36218) {
            if (partnerId) {
                signup_url = `<%== l('Don’t have an account yet? [_1]Create a new account[_2]', sprintf("<a class='account-link' href='https://%s/ctrader-signup/?app_id=36218&partnerId=` + partnerId + `'>", $website_domain), '</a>') %>`;
            } else {
                signup_url = `<%== l('Don’t have an account yet? [_1]Create a new account[_2]', sprintf("<a class='account-link' href='https://%s/ctrader-signup/?app_id=36218'>", $website_domain), '</a>') %>`;
            }
        } else {
            signup_url = `<%== l('Don’t have an account yet? [_1]Create a new account[_2]', sprintf("<a class='account-link' href='https://%s/%ssignup/'>", $website_domain, lc($language)), '</a>') %>`;
        }

        document.getElementById("signup-link").innerHTML = signup_url;
    
    </script>
<% } %>

<script type="text/javascript">
    var frmLogin, txtEmail, txtPass, btnToggle;
    window.onload = function() {
        frmLogin  = document.getElementById('frmLogin');
        txtEmail  = document.getElementById('txtEmail');
        txtPass   = document.getElementById('txtPass');
        btnToggle = document.getElementById('btnToggle');

        btnToggle.addEventListener('click', togglePasswordVisibility);

        if (frmLogin) {
            frmLogin.addEventListener('submit', function(e) {
                if (!validateAll()) {
                    e.preventDefault();
                    return false;
                }
            });
        }

        var fields = [
            { element: txtEmail, validator: validateEmail },
            { element: txtPass,  validator: validatePass },
        ];
        fields.forEach(function(field) {
            if (field.element) {
                ['change', 'blur'].forEach(function(event) {
                    field.element.addEventListener(event, function(e) {
                        field.validator();
                    });
                });
            }
        });
    };

    function validateAll() {
        return validateEmail() && validatePass();
    }

    function validateEmail() {
        return validateField(txtEmail, new RegExp(/^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,63}$/));
    }

    function validatePass() {
        return validateField(txtPass, new RegExp(/^[ -~]{6,25}$/));
    }

    function validateField(element, regex) {
        if (element) {
            hideErrors(element);

            var hasError = true;
            var value = (element.value || '').trim();
            element.value = value;
            if (!value) {
                showError(element, 'required');
            } else if (!regex.test(value) || !element.checkValidity()) {
                showError(element, 'invalid');
                raiseLabel(element, 1);
            } else {
                hasError = false;
                raiseLabel(element, !!value)
            }

            return !hasError;
        }
    }

    function hideErrors(element) {
        element.parentNode.classList.remove('has_error');
        element.parentNode.parentNode.querySelectorAll('.input-error .error').forEach(function (el) {
            el.classList.add('hide');
        });
    }

    function showError(element, errorType) {
        element.parentNode.classList.add('has_error');
        var el = element.parentNode.parentNode.querySelector('.input-error .error_' + errorType);
        if (el) {
            el.classList.remove('hide');
        }
    }
    function raiseLabel(element, should_raise) {
        element.parentNode.querySelector('label').classList[should_raise ? 'add' : 'remove']('raised-label');
    }

    function scrollToErrorOneall() {
        const element = document.querySelector('p.error-oneall');
  
        if (element) {
        const offsetTop = element.offsetTop;
        const offsetLeft = element.offsetLeft;
    
        window.scrollTo({
        top: offsetTop,
        left: offsetLeft,
        behavior: 'smooth'
        });
        }
    }

    setTimeout(function() {
	scrollToErrorOneall();
    }, 1000);

    function togglePasswordVisibility() {
        if (txtPass.type === 'password') {
            txtPass.type = 'text';
            btnToggle.classList.remove('icon_hidden');
            btnToggle.classList.add('icon_visible');
        } else {
            txtPass.type = 'password';
            btnToggle.classList.remove('icon_visible');
            btnToggle.classList.add('icon_hidden');
        }
    }
</script>
<% if ($use_oneall) { %>
    <script type="text/javascript">
        var use_social_login = '<%== $use_social_login %>';
        if (use_social_login) {
            var cb = '<%= $oneall_callback %>';
            var login_method = '<%= $login_method %>';
            var providers = <%== Mojo::JSON::encode_json($login_providers) %>;

            /* Embeds the buttons into the container oa_social_login_container */
            var _oneall = _oneall || [];
            _oneall.push(['social_login', 'set_force_re_authentication', true]);
            _oneall.push(['social_login', 'set_providers', providers]);
            _oneall.push(['social_login', 'set_callback_uri', cb]);
            _oneall.push(['social_login', 'set_popup_usage', 'never']);
            /* push all configs before this as once rendered it not possible to hook*/
            _oneall.push(['social_login', 'do_render_ui', 'oa_social_login_container']);
            
            if (login_method) {
                _oneall.push(['social_login', 'do_login', login_method]);
            }
            if (document.getElementById('frmLogin')) {
                document.getElementById('frmLogin').reset();
            }
        }
    </script>
<%}%>
<script src="https://www.datadoghq-browser-agent.com/us1/v4/datadog-rum.js" type="text/javascript"></script>
<script>
    var DD_APP_ID = '<%= $dd_rum_config->{APP_ID} %>';
    var DD_CLIENT_TOKEN = '<%= $dd_rum_config->{CLIENT_TOKEN} %>';

    if(window.DD_RUM && DD_APP_ID && DD_CLIENT_TOKEN) {
        window.DD_RUM.init({
            clientToken: DD_CLIENT_TOKEN,
            applicationId: DD_APP_ID,
            site: 'datadoghq.com',
            service: '<%= $dd_rum_config->{SERVICE_NAME} %>',
            env: '<%= $dd_rum_config->{ENV} %>',
            version: '<%= $dd_rum_config->{VERSION} %>',
            sessionSampleRate: <%= $dd_rum_config->{SESSION_SAMPLE_RATE} %>,
            trackResources: true,
            trackLongTasks: true,
            trackUserInteractions: true,
            trackFrustrations: true,
            defaultPrivacyLevel: 'mask-user-input',
            enableExperimentalFeatures: ['clickmap'],
        })
    }
</script>