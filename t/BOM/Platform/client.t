use strict;
use warnings;
use Test::Most;
use Test::FailWarnings;
use Test::Exception;
use BOM::Database::DataMapper::Client;
use BOM::Database::AutoGenerated::Rose::Client;
use BOM::Test::Data::Utility::UnitTestDatabase qw(:init);

my $client_data_mapper;

subtest 'client lock unlock' => sub {
    lives_ok {
        $client_data_mapper = BOM::Database::DataMapper::Client->new({
            client_loginid => 'CR656232',
        });
    }
    'Expect to initialize the client data mapper';

    ok($client_data_mapper->lock_client_loginid(), "Can lock client when there is no record in lock table initially.");
    cmp_ok(scalar keys %{$client_data_mapper->locked_client_list()}, '==', 1, "There is one locked client");

    ok(!$client_data_mapper->lock_client_loginid(),   "Can not lock client wheb it is already locked.");
    ok($client_data_mapper->unlock_client_loginid(),  "Can unlock client.");
    ok(!$client_data_mapper->unlock_client_loginid(), "Can not lock client if it is not locked.");

    ok($client_data_mapper->lock_client_loginid(),   "Can lock client again when the record exists in lock table.");
    ok($client_data_mapper->unlock_client_loginid(), "Can unlock client.");

    cmp_ok(scalar keys %{$client_data_mapper->locked_client_list()}, '==', 0, "There is no locked client");
};

subtest 'Login to self excluded client' => sub {
    my ($client);
    my $new_email = 'test' . rand . '@binary.com';
    lives_ok {
        $client = BOM::Test::Data::Utility::UnitTestDatabase::create_client({
            broker_code => 'CR',
            email       => $new_email,
        });
        my $exclude_until = Date::Utility->new()->plus_time_interval('365d')->date;
        $client->set_exclusion->exclude_until($exclude_until);
        $client->save;

        my $res = $client->login_error;

        ok $res =~ /Sorry, you have excluded yourself until $exclude_until/, 'It should return until date in message error';
    }
    'create client';
};

subtest 'Login to self timeouted client' => sub {
    my ($client);
    my $new_email = 'test' . rand . '@binary.com';
    lives_ok {
        $client = BOM::Test::Data::Utility::UnitTestDatabase::create_client({
            broker_code => 'CR',
            email       => $new_email,
        });
        my $timeout_until = Date::Utility->new()->plus_time_interval('1d');
        $client->set_exclusion->timeout_until($timeout_until->epoch);
        $client->save;

        my $res                = $client->login_error;
        my $timeout_until_date = $timeout_until->datetime_yyyymmdd_hhmmss_TZ;
        ok $res =~ /Sorry, you have excluded yourself until $timeout_until_date/, 'It should return until date in message error';
    }
    'create client';
};

done_testing;
