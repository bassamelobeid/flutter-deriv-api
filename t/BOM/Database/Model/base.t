#!/etc/rmg/bin/perl
use warnings;
use strict;

use Test::More 'tests' => 12;
use Test::NoWarnings;
use DBI;
use DBD::SQLite;
use Test::Exception;
use BOM::Database::AutoGenerated::Rose::Account;
use BOM::Database::Model::Base;

use lib '../t';
use Common::UnitTestProduct;

BEGIN {
    if (-e '/tmp/unit_test.sqlite') {
        unlink '/tmp/unit_test.sqlite';
    }
}

my $db = Rose::DB->new(
    driver   => 'SQLite',
    database => '/tmp/unit_test.sqlite'
);

$db->dbh->do("

    CREATE TABLE products
    (
      id INTEGER PRIMARY KEY AUTOINCREMENT,
      name    VARCHAR(255) NOT NULL,
      price   DECIMAL(10,2) NOT NULL DEFAULT 0.00,

      UNIQUE(name)
    )
");

my $x = BOM::Database::Model::Base->new({data_object_params => {}});
isa_ok($x, 'BOM::Database::Model::Base');

$x = BOM::Database::Model::Base->new({
    data_object_params => {},
    db                 => $db
});
isa_ok($x, 'BOM::Database::Model::Base');

$x = BOM::Database::Model::Base->new({
        data_object_params => {
            id    => '1',
            name  => 'Cane',
            price => 1.99
        }});
isa_ok($x, 'BOM::Database::Model::Base');

$x = BOM::Database::Model::Base->new({
    data_object_params => {},
    db                 => $db
});
$x->record(
    Common::UnitTestProduct->new(
        db    => $db,
        id    => '1',
        name  => 'Cane',
        price => 1.99
    ));
isa_ok($x->class_orm_record, 'Common::UnitTestProduct');
cmp_ok($x->record->price, '==', 1.99, "Check the price for new object");
$x->save;

$x = BOM::Database::Model::Base->new({
    data_object_params => {},
    db                 => $db
});
$x->record(
    Common::UnitTestProduct->new(
        db => $db,
        id => '1'
    ));
$x->load;
cmp_ok($x->record->price, '==', 1.99, "Check the price for loaded object");
$x->record->price('2');
$x->save;

$x = BOM::Database::Model::Base->new({
    data_object_params => {},
    db                 => $db
});
$x->record(
    Common::UnitTestProduct->new(
        db => $db,
        id => '1'
    ));
$x->load;
cmp_ok($x->record->price, '==', 2, "Check the price for loaded object after save");

$x->delete;
throws_ok { $x->load } qr/No such Common::UnitTestProduct where id = 1/, 'Check if the record has been deleted properly';

throws_ok {
    $x->_initialize_data_access_object('Rose::DB::Object', 'not_valid_hash');
}
qr/Error::WRONG_HASHREF_PARAMETER/, 'check if passing a wrong hash ref will throw error';

lives_ok {
    $x->data_object_params({id => 1});
    $x->_initialize_data_access_object('Rose::DB::Object', {});

    $x->db(undef);

    $x->_initialize_data_access_object('BOM::Database::AutoGenerated::Rose::Account', {id => 1});

}
'expect to execute without error';

cmp_ok($x->_extract_related_attributes_for_class_based_on_table_definition_hashref('BOM::Database::AutoGenerated::Rose::Account')->{id},
    'eq', '1', 'check if returns the column');

END {
    unlink '/tmp/unit_test.sqlite';
}

