#!/etc/rmg/bin/perl
package main;

use strict;
use warnings;

use HTML::Entities;

use f_brokerincludeall;
#use BOM::Database::AutoGenerated::Rose::Users::LoginHistory::Manager;
use BOM::Database::UserDB;
use BOM::Backoffice::PlackHelpers qw( PrintContentType );
use BOM::Backoffice::Sysinit ();
BOM::Backoffice::Sysinit::init();

PrintContentType();

my $ip        = request()->param('ip')        // '';
my $loginid   = request()->param('loginid')   // '';
my $date_from = request()->param('date_from') // '2016-01-01';
my $date_to   = request()->param('date_to')   // '2018-01-01';
Bar("IP Search");
BrokerPresentation("IP SEARCH FOR");
my $broker = request()->broker_code;

my $last_login_age = request()->param('lastndays') || 10;
my $logins;
my $suspected_logins;
# IP search from users.login_history table
if ($ip ne '') {
    my $encoded_ip = encode_entities($ip);
    if ($ip !~ /^\d+\.\d+\.\d+\.\d+$/) {
        print "Invalid IP $encoded_ip";
        code_exit_BO();
    }
    $logins = BOM::Database::UserDB::rose_db()->dbic->run( sub {
        $_->selectall_arrayref(
            'SELECT history_date, action, email FROM users.login_history_by_ip(?, ?)',
            { Slice => {} },
            $ip, DateTime->today()->subtract(days => $last_login_age)
        );
    } );
#    $logins = BOM::Database::AutoGenerated::Rose::Users::LoginHistory::Manager->get_login_history(
#        db              => BOM::Database::UserDB::rose_db(),
#        require_objects => ['binary_user'],
#        query           => [
#            successful   => 1,
#            environment  => {like => '%IP=' . $ip . ' %'},
#            history_date => {gt => DateTime->today()->subtract(days => $last_login_age)},
#        ],
#        sort_by => 't1.history_date DESC'
#    );
    
} elsif ($loginid ne '') {
#    $suspected_logins = get_logins_from_same_ips($loginid, $date_from, $date_to);
    $suspected_logins = BOM::Database::UserDB::rose_db()->dbic->run( sub {
        $_->selectall_arrayref(
            'SELECT history_date, logins FROM users.get_login_similiarities(?, ?, ?)',
            { Slice => {} },
            $loginid, $date_from, $date_to
        );
    } );
}

BOM::Backoffice::Request::template->process(
    'backoffice/ip_search.html.tt',
    {
        logins           => $logins,
        days             => $last_login_age,
        ip               => $ip,
        loginid          => $loginid,
        suspected_logins => $suspected_logins,
        date_from        => $date_from,
        date_to          => $date_to,
    }) || die BOM::Backoffice::Request::template->error();

code_exit_BO();
