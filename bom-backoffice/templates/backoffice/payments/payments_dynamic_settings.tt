[% IF message %]<p class="success">[% message %]</p><hr/>[% END %]
[% IF error %]<p class="error">[% error %]</p><hr/>[% END %]

[% IF roles.payments %]    
    <div class="card">
        <div class="card__label toggle"><a name="_make_dcc"></a>
            MAKE DUAL CONTROL CODE
        </div>
        <div class="card__content">
            <p>To update payments dynamic settings we require 2 staff members to authorize. One staff member needs to generate a 'Dual Control Code' that is then used by the other staff member when changing the settings.</p>

            <form id='generateDCC' 
                action="[% request.url_for('backoffice/payments_dynamic_settings_dcc.cgi') %]"
                method='POST' 
                class='bo_ajax_form' 
                enctype='multipart/form-data'>
                    <input type='hidden' name='l' value='EN'>
                    <label>Transaction type:</label><select name='transtype'>
                        <option value='Payments Settings'>Update payments dynamic settings</option>
                    </select><br><br>
            
                <br><br><input type='submit' class='btn btn--primary' value='Make Dual Control Code (by [% staff %])'>
            </form>
        </div>
    </div>

    <div class="card">
        <div class="card__label toggle"><a name="_payment_methods"></a>
            PAYMENT LIMITS
        </div>
        <div class="card__content">
            <h3>Payments Limit Configuration</h3>

            <form action="[% request.url_for('backoffice/payments_dynamic_settings.cgi?section=limits') %]" method="post">
                <table class="small alternate">
                    <thead>
                        <tr>
                            <th>&nbsp;</th>
                            <th>Name</th>
                            <th>Limit</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        [% FOREACH name IN payment_limits.keys.sort %]
                            <tr>
                                <td>&nbsp;</td>
                                <td><input type="text" name="limit[[% name %]][name]" value="[% name %]" /></td>
                                <td><input type="text" name="limit[[% name %]][limit]" value="[% payment_limits.$name %]" /></td>
                                <td>
                                    <button class="btn btn--secondary" value="[% name %]" name="update" onclick="return request_dcc()">Update</button>
                                    <button class="btn btn--secondary" value="[% name %]" name="delete" onclick="return request_confirm_and_dcc();">Delete</button>
                                </td>
                            </tr>     
                        [% END %]
                    </tbody>
                    <tfoot>
                        <tr>
                            <td>Add a new entry</td>
                            <td><input type="text" name="new_name" /></td>
                            <td><input type="text" name="new_limit" /></td>
                            <td><button class="btn btn--secondary" value="1" name="new" onclick="return request_dcc()">Add</button></td>
                        </tr>
                    </tfoot>
                </table>
                <input type="hidden" name="dcc" id="dcc" />
                <input type="hidden" value="Payments Settings" name="transtype" />
                <input type="hidden" name="revision" value="[% revision %]"/>
            </form>
        </div>
    </div>
[% END %]

<div class="card">
    <div class="card__label toggle"><a name="_payment_methods"></a>
        PAYMENT METHODS
    </div>
    <div class="card__content">
        <h3>High Risk Payment Methods</h3>
        <p>You can specify parameters for high risk payment methods and its optional grouped members. Some payment methods may have slight variations, to specify them we introduced the grouped memebers field. Use comma separated values to specify grouped members.</p>

        <form action="[% request.url_for('backoffice/payments_dynamic_settings.cgi?section=high_risk') %]" method="post">
            <table class="small alternate">
                <thead>
                    <tr>
                        <th>&nbsp;</th>
                        <th>Payment Method</th>
                        <th>Grouped Members</th>
                        <th>Limit per Account</th>
                        <th>Days to Check</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    [% FOREACH pm IN high_risk_payment_methods.keys.sort %]
                        <tr>
                            <td>&nbsp;</td>
                            <td><input type="text" name="high_risk[[% pm %]][pm]" value="[% pm %]" /></td>
                            <td><input type="text" name="high_risk[[% pm %]][siblings]" value="[% high_risk_payment_methods.$pm.siblings.join(',') %]" /></td>
                            <td><input type="number" step="1" name="high_risk[[% pm %]][limit]" value="[% high_risk_payment_methods.$pm.limit %]" /></td>
                            <td><input type="number" step="1" name="high_risk[[% pm %]][days]" value="[% high_risk_payment_methods.$pm.days %]" /></td>
                            <td><button value="[% pm %]" onclick="return confirm('Do you really want to delete [% pm %] from the high risk payment method settings?')" class="btn btn--secondary" name="high_risk_to_delete">Delete</button>
                        </tr>     
                    [% END %]
                </tbody>
                <tfoot>
                    <tr>
                        <td>Add a Payment Method</td>
                        <td><input type="text" name="new" value="[% input_new.pm %]" /></td>
                        <td><input type="text" name="siblings[new]" value="[% input_new.siblings %]" /></td>
                        <td><input type="number" step="1" name="limit[new]" value="[% input_new.limit %]" /></td>
                        <td><input type="number" step="1" name="days[new]" value="[% input_new.days %]" /></td>
                    </tr>
                    <tr>
                        <td colspan="2"><br/><button class="btn btn--primary" value="1" name="save">Save High Risk Payment Methods Settings</button></td>
                    </tr>
                </tfoot>
            </table>
            <input type="hidden" name="revision" value="[% revision %]"/>
        </form>
    </div>
</div>

<div class="card">
    <div class="card__label toggle"><a name="_countries"></a>
        COUNTRIES CONFIG
    </div>
    <div class="card__content">
        <h3>Deposit Limits to trigger POI</h3>

        <form action="[% request.url_for('backoffice/payments_dynamic_settings.cgi?section=poi_deposit_limits_per_payment_type') %]" method="post">
            <table class="small alternate">
                <thead>
                    <tr>
                        <th>&nbsp;</th>
                        <th>Country</th>
                        <th>Payment Type</th>
                        <th>Amount limit(USD)</th>
                        <th>Days to lookback</th>
                        <th>&nbsp;</th>
                    </tr>
                </thead>
                <tbody>
                    [% FOREACH country IN poi_deposit_limits_per_payment_type.keys.sort %]
                        [% FOREACH type IN poi_deposit_limits_per_payment_type.$country.keys.sort %]
                            <tr>
                                <td>&nbsp;</td>
                                <td><input type="text" name="limit[[% country %]][[% type %]][country]" value="[% country %]" /></td>
                                <td><input type="text" name="limit[[% country %]][[% type %]][type]" value="[% type %]" /></td>
                                <td><input type="text" name="limit[[% country %]][[% type %]][limit]" value="[% poi_deposit_limits_per_payment_type.$country.$type.limit %]" /></td>
                                <td><input type="text" name="limit[[% country %]][[% type %]][days]" value="[% poi_deposit_limits_per_payment_type.$country.$type.days %]" /></td>
                                <td>                                   
                                    <button class="btn btn--secondary" value="[% country %]" name="update" onclick="return tether_type('[% type %]');">Update</button>
                                    <button class="btn btn--secondary" value="[% country %]" name="delete" onclick="return tether_type('[% type %]');">Delete</button>
                                </td>
                            </tr>     
                        [% END %]
                    [% END %]
                </tbody>
                <tfoot>
                    <tr>
                        <td>Add a new entry</td>
                        <td><input type="text" name="new_country" /></td>
                        <td><input type="text" name="new_type" /></td>
                        <td><input type="text" name="new_limit" /></td>
                        <td><input type="text" name="new_days" /></td>
                        <input type="hidden" name="update_type" id="update_type" />
                        <input type="hidden" name="delete_type" id="delete_type" />
                        <td><button class="btn btn--secondary" value="1" name="new">Add</button></td>
                    </tr>
                </tfoot>
            </table>
            <input type="hidden" name="revision" value="[% revision %]"/>
        </form>
    </div>
</div>

<script>
    function tether_type(type) {
        document.getElementById('update_type').value = type; 
        document.getElementById('delete_type').value = type; 

        return true;
    }

    function request_dcc() {
        const dcc = prompt('Please introduce the DCC to perform this operation');

        if (dcc) {
            document.getElementById('dcc').value = dcc;
            return true;
        } else {
            alert('A valid DCC is required to continue!');
            return false;
        }
    }

    function request_confirm_and_dcc() {
        const c = confirm('Are you sure you want to delete this limit?');

        if (c) {
            return request_dcc();
        }

        return false;
    }
</script>
