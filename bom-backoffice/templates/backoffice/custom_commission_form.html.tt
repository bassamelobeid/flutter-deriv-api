<h2>README</h2>
<ul>
    <li><b>bias</b> : could be introduced to currency symbol or/and underlying symbol. Accepts value of long or short. If we are <i>long</i> on <i>USD</i>, all USD currency pairs will be affected. For frxUSDXXX pairs, we will apply the commission structure on CALL/CALLE. For frxXXXUSD pairs, we will apply the commission structure to PUT/PUTE. If you are <i>long</i> on <i>frxAUDJPY</i>, the commission structure will be applied to CALL/CALLE on frxAUDJPY.</li>
    <li><b>OTM_max</b> : Barriers over spot + 15 pips for 7 barriers and spot + 10 pips for  5 barriers</li>
    <li><b>OTM_3</b> : Barriers between spot + 10 pips and spot + 15 pips (for 7 barriers only) </li>
    <li><b>OTM_2</b> : Barriers between spot + 5 pips and spot + 10 pips </li>
    <li><b>OTM_1</b> : Barriers between spot and spot + 5 pips</li>
    <li><b>ITM_1</b> : Barriers between spot and spot - 5 pips</li>
    <li><b>ITM_2</b> : Barriers between spot - 5 pips and spot - 10 pips</li>
    <li><b>ITM_3</b> : Barriers between spot - 10 pips and spot - 15 pips (for 7 barriers only)</li>
    <li><b>ITM_max</b> : Barriers over spot - 15 pips for 7 barriers and spot - 10 pips for  5 barriers</li>
</ul>
<p><b>Add new custom commission with the tool below: </b></p>

<fieldset  [% IF disabled %] disabled title='no write access' [% END %]>
<table id='custom_commission_form'>
    <tr><td>Name</td><td> : <input type="text" name="name" data-lpignore="true" /></td><td>Accepts only words and integers (required)</td></tr>
    <tr><td>Start Time</td><td> : <input type="text" name="start_time" id="custom_commission_start_time" data-lpignore="true" /></td><td>Accepts valid date utility format, e.g. epoch or '2017-09-14 10:00:30' (required)</td></tr>
    <tr><td>End Time</td><td> : <input type="text" name="end_time" id="custom_commission_end_time" data-lpignore="true" /></td><td>Accepts valid date utility format, e.g. epoch or '2017-09-14 10:00:30' (required)</td></tr>
    <tr><td>Currency Symbol</td><td> : <input type="text" name="currency_symbol" data-lpignore="true" /></td></tr>
    <tr><td>Underlying Symbol</td><td> : <input type="text" name="underlying_symbol" data-lpignore="true" /></td></tr>
    <tr><td>Bias</td><td> : <input type="text" name="bias" data-lpignore="true" /></td><td>Leave it empty if bias is not intended. Accepts values long or short</td></tr>
    <tr><td>Barriers</td></tr>
    <tr><td>OTM_max </td><td> : <input type="text" name="OTM_max" data-lpignore="true" /></td></tr>
    <tr><td>OTM_3 </td><td> : <input type="text" name="OTM_3" data-lpignore="true" /></td></tr>
    <tr><td>OTM_2 </td><td> : <input type="text" name="OTM_2" data-lpignore="true" /></td></tr>
    <tr><td>OTM_1 </td><td> : <input type="text" name="OTM_1" data-lpignore="true" /></td></tr>
    <tr><td>ATM </td><td> : <input type="text" name="ATM" data-lpignore="true" /></td></tr>
    <tr><td>ITM_1 </td><td> : <input type="text" name="ITM_1" data-lpignore="true" /></td></tr>
    <tr><td>ITM_2 </td><td> : <input type="text" name="ITM_2" data-lpignore="true" /></td></tr>
    <tr><td>ITM_3 </td><td> : <input type="text" name="ITM_3" data-lpignore="true" /></td></tr>
    <tr><td>ITM_max </td><td> : <input type="text" name="ITM_max" data-lpignore="true" /></td><td> The commission to be charged if barriers goes out of the tiered commission as spot moves.</td></tr>
    <tr><td></td><button onclick="saveCustom()" style="margin-left: 4px;" class="btn btn--primary">Save</button></td><td class="result"></td></tr>
</table>
</fieldset>

<br>
<div id='custom_commission_table' class="row scrollable">
</div>

<script>
    function saveCustom() {
        var el = \$('table#custom_commission_form');
        var result = el.find('.result');
        result.text('processing...');
        var start_time = \$('#custom_commission_start_time').val();
        var end_time = \$('#custom_commission_end_time').val();
        var date_re = /^(\d{10}|\d{4}-\d{2}-\d{2}( \d{2}:\d{2}:\d{2})?)\$/;
        if(!date_re.test(start_time) || !date_re.test(end_time)){
            result.text("Invalid DateTime entered").css('color', 'var(--color-red)');
            return true;
        }

        \$.ajax({
                url: "[% upload_url | none %]",
                data: {
                    save_config: "1",
                    name: el.find('input[name="name"]').val(),
                    underlying_symbol: el.find('input[name="underlying_symbol"]').val(),
                    currency_symbol: el.find('input[name="currency_symbol"]').val(),
                    bias: el.find('input[name="bias"]').val(),
                    start_time: el.find('input[name="start_time"]').val(),
                    end_time: el.find('input[name="end_time"]').val(),
                    ITM_3: el.find('input[name="ITM_3"]').val(),
                    ITM_2: el.find('input[name="ITM_2"]').val(),
                    ITM_1: el.find('input[name="ITM_1"]').val(),
                    OTM_1: el.find('input[name="OTM_1"]').val(),
                    OTM_2: el.find('input[name="OTM_2"]').val(),
                    OTM_3: el.find('input[name="OTM_3"]').val(),
                    OTM_max: el.find('input[name="OTM_max"]').val(),
                    ITM_max: el.find('input[name="ITM_max"]').val(),
                    ATM: el.find('input[name="ATM"]').val()
                },
                success: function(data){
                    var config = \$.parseJSON(data);
                    if (config.error) {
                        result.text('Failed: '+ config.error).css('color', 'var(--color-red)').show();
                    } else {
                        appendTable('custom_commission_table',config);
                        result.hide();
                    }
                }
        });
    }
    function appendTable(id, config) {
        var table = \$('table#'+id);
        table.find('tr.none').remove();
        var to_append = '<tr id="'+config.name+'"><td>'+config.staff+'</td><td>'+config.name+'</td><td>'+config.underlying_symbol+'</td><td>'+config.currency_symbol+'</td><td>'+config.bias+'</td><td>'+config.start_time+'</td><td>'+config.end_time+'</td><td>'+JSON.stringify(config.config)+'</td><td><button class="btn btn--secondary" onclick="deleteConfig(\''+config.name+'\')">Delete</button></td><td class="result"></td></tr>';
        table.append(to_append);
    }
    function createTable(id, config) {
        var table = '<table id="'+id+'" class="border nowrap">';
        table += '<thead><tr><th>Updated by</th><th>Name</th><th>Underlying Symbol</th><th>Currency Symbol</th><th>Bias</th><th>Start</th><th>End</th><th>Config</th></tr></thead>';

        if (config.length > 0) {
            for (var i=0; i < config.length; i++) {
                table += '<tr id="'+config[i].name+'"><td>'+config[i].staff+'</td><td>'+config[i].name+'</td><td>'+config[i].underlying_symbol+'</td><td>'+config[i].currency_symbol+'</td><td>'+config[i].bias+'</td><td>'+config[i].start_time+'</td><td>'+config[i].end_time+'</td><td>'+JSON.stringify(config[i].config)+'</td><td><button class="btn btn--secondary" onclick="deleteConfig(\''+config[i].name+'\')">Delete</button></td><td class="result"></td></tr>';
            }
        } else {
            table += '<tr class="none"><td>None</td></tr>';
        }

        table += '</table>';
        \$('div#'+id).html(table);
    }
    function deleteConfig (name) {
        var el = \$('tr#'+name);
        \$.ajax({
                url: "[% upload_url | none %]",
                data: {
                    delete_config: "1",
                    name: name
                },
                success: function(data){
                    var config = \$.parseJSON(data);
                    if (config.error) {
                        el.find('td.result').text('Failed: '+ config.error).css('color','red');
                    } else {
                        el.remove();
                    }
                }
        });
    }
    createTable('custom_commission_table', [% config | none %])
</script>
