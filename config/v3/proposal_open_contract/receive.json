{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "type": "object",
  "title": "Open contract proposal response",
  "description": "Latest price and other details for an open contract in the user's portfolio",
  "properties": {
    "echo_req": {
      "title": "Echo request",
      "description": "Echo of the request made"
    },
    "proposal_open_contract": {
      "type": "object",
      "title": "Open contract response",
      "description": "Latest price and other details for an open contract",
      "properties": {
        "ask_price": {
          "type": "number",
          "description": "Example: 5.14"
        },
        "high_barrier": {
          "type": "number",
          "description": "42.123"
        },
        "low_barrier": {
          "type": "number",
          "description": "40.132"
        },
        "barrier": {
          "type": "number",
          "description": "42.123"
        },
        "bid_price": {
          "type": "number",
          "description": "Example: 5.14"
        },
        "contract_id": {
          "type": "integer",
          "description": "Binary.com internal contract identifier"
        },
        "contract_type": {
          "type": "string",
          "description": "Contract type, for example CALL, PUT"
        },
        "currency": {
          "type": "string",
          "description": "Example: USD"
        },
        "current_spot": {
          "type": "number",
          "description": "Spot value if we have license to stream this symbol. Example: 9874.52"
        },
        "current_spot_time": {
          "type": "integer",
          "description": "Example: 1439999052"
        },
        "entry_spot": {
          "type": [
            "number",
            "null"
          ],
          "description": "Example: 9874.52"
        },
        "date_expiry": {
          "type": "integer",
          "description": "Example: 1446629000. Please note that it is not applicable for spreads and tick trade contracts"
        },
        "date_settlement": {
          "type": "integer",
          "description": "Example: 1446629000"
        },
        "date_start": {
          "type": "integer",
          "description": "Example: 1446629000"
        },
        "id": {
          "type": "string",
          "description": "A stream id that can be used to cancel this stream using the Forget request. Example: 1d6651e7d599bce6c54bd71a8283e579"
        },
        "is_expired": {
          "type": "integer",
          "description": "Boolean value 1 or 0"
        },
        "is_forward_starting": {
          "type": "integer",
          "description": "Boolean value 1 or 0"
        },
        "is_intraday": {
          "type": "integer",
          "description": "Boolean value 1 or 0"
        },
        "is_path_dependent": {
          "type": "integer",
          "description": "Boolean value 1 or 0"
        },
        "is_valid_to_sell": {
          "type": "integer",
          "description": "Boolean value 1 or 0"
        },
        "longcode": {
          "type": "string",
          "description": "Text description of the bet purchased, Example: USD 90.00 payout if Random 100 Index is strictly higher than entry spot at 10 minutes after contract start time."
        },
        "payout": {
          "type": "number",
          "description": "Example: 10.50"
        },
        "shortcode": {
          "type": "string",
          "description": "Coded description of the bet purchased, Example: CALL_R_100_90_1446704187_1446704787_S0P_0"
        },
        "display_value": {
          "type": "number",
          "description": "Example: 5.14, same as ask_price except for spread contracts"
        },
        "underlying": {
          "type": "string",
          "description": "Example: BSESENSEX30"
        },
        "display_name": {
          "type": "string",
          "description": "Display name of underlying"
        },
        "entry_tick": {
          "type": "number",
          "description": "Example: 86.630"
        },
        "entry_tick_time": {
          "type": "integer",
          "description": "Example: 1446629000"
        },
        "exit_tick": {
          "type": "number",
          "description": "Example: 86.810"
        },
        "exit_tick_time": {
          "type": "integer",
          "description": "Example: 1446629000"
        },
        "tick_count": {
          "type": "integer",
          "description": "Only for tick trades, number of ticks"
        },
        "validation_error": {
          "type": "string",
          "description": "error message if validation fails"
        },
        "sell_price": {
          "type": "number",
          "description": "Price at which contract was sold, only available when contract has been sold."
        },
        "buy_price": {
          "type": "number",
          "description": "Price at which contract was purchased"
        },
        "purchase_time": {
          "type": "integer",
          "description": "Epoch of purchase time, will be same as date_start for all contracts except forward starting contracts."
        },
        "sell_time": {
          "type": [
            "integer",
            "null"
          ],
          "description": "sell time of contract, only present for contracts already sold"
        },
        "sell_spot": {
          "type": "number",
          "description": "Example: 86.630, only present for contracts already sold"
        },
        "sell_spot_time": {
          "type": "integer",
          "description": "Example: 1446629000, only present for contracts already sold"
        },
        "transaction_ids": {
          "type": "object",
          "title": "Transaction ids for contract",
          "description": "Every contract has buy and sell transaction ids, i.e. when you purchase a contract we associate it with buy transaction id, when you sell or contract is already sold we associate that with sell transaction id.",
          "properties":{
            "buy": {
              "type": "integer",
              "description": "Buy transaction id for that contract"
            },
            "sell": {
              "type": "integer",
              "description": "Sell transaction id for that contract, only present when contract is already sold."
            }
          }
        }
      }
    },
    "msg_type": {
      "type": "string",
      "description": "proposal_open_contract"
    },
    "req_id": {
      "type": "integer",
      "description": "Optional field send in request to map to response, present only when request contains req_id"
    }
  },
  "required": [
    "echo_req",
    "proposal_open_contract",
    "msg_type"
  ]
}
