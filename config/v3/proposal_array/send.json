{
    "$schema": "http://json-schema.org/draft-04/schema#",
    "type": "object",
    "title": "Get latest prices for a specific contract with different barriers",
    "description": "Get latest prices for a specific contract with different barriers",
    "properties": {
        "proposal_array": {
            "type": "integer",
            "description":"Must be 1",
            "pattern": "^1$",
            "required": "1"
        },
        "subscribe": {
            "type": "integer",
            "description": "1 - to initiate a realtime stream of prices. Note that tick trades, digit trades and less than 24 hours at-the-money contracts for the following underlying symbols are not streamed: R_100 R_50 R_25 R_75 RDBULL RDBEAR (this is because their price is constant).",
            "pattern": "^1$"
        },
        "amount": {
            "type": "number",
            "minimum": 0,
            "description":"Proposed contract payout or stake value"
        },
        "basis": {
            "description":"Indicate whether amount is 'payout' or 'stake'",
            "enum": ["payout", "stake", "multiplier"]
        },
        "contract_type": {
            "type": "array",
            "items": [
                {"enum": ["UPORDOWN", "EXPIRYRANGE", "ONETOUCH", "CALLE", "LBHIGHLOW", "ASIAND", "EXPIRYRANGEE", "DIGITDIFF", "DIGITMATCH", "DIGITOVER", "PUTE", "DIGITUNDER", "NOTOUCH", "CALL", "RANGE", "LBFLOATPUT", "DIGITODD", "PUT", "ASIANU", "LBFLOATCALL", "EXPIRYMISSE", "EXPIRYMISS", "DIGITEVEN"]
                }
            ],
            "description": "One or two valid contract-types",
            "required": "1",
            "uniqueItems": true,
            "minItems": 1,
            "maxItems": 2
        },
        "currency": {
            "type": "string",
            "description":"This can only be the account-holder's currency",
            "pattern": "^[A-Z]{3}$",
            "required": "1"
        },
        "date_start": {
            "type":  "integer",
            "description":"For forward-starting contracts, epoch value of the starting time of the contract."
        },
        "date_expiry": {
            "type":  "integer",
            "description":"Epoch value of the expiry time of the contract. You must either specify date_expiry or duration."
        },
        "duration": {
            "type": "integer",
            "description":"Duration quantity"
        },
        "duration_unit": {
            "description":"Duration unit is s(seconds), m(minutes), h(hours), d(days), t(ticks). If this parameter is not set then duration will be counted as seconds.",
            "enum": ["d", "m", "s", "h", "t"]
        },
        "symbol": {
            "type": "string",
            "description":"Symbol code",
            "pattern": "^\\w{2,30}$",
            "required": "1"
        },
        "barriers": {
            "type": "array",
            "description":"Array of barrier(s) for the contract",
            "required": "1",
            "items": {
                "type": "object",
                "description": "barrier(s) for the contracts to price",
                "properties": {
                    "barrier": {
                        "type": "string",
                        "description":"Barrier for the contract (or last digit prediction for digit contracts). Contracts less than 24 hours in duration would need a relative barrier (barriers which need +/-), meaning that the entry spot would be adjusted accordingly with that amount to define a barrier.",
                        "pattern": "^[+-]?\\d+\\.?\\d*$"
                    },
                    "barrier2": {
                        "type": "string",
                        "pattern": "^[+-]?\\d+\\.?\\d*$",
                        "description":"Low barrier for the contract (for contracts with two barriers). Contracts less than 24 hours in duration would need a relative barrier (barriers which need +/-), meaning that the entry spot would be adjusted accordingly with that amount to define a barrier."
                    }
                }
            }
        },
        "trading_period_start": {
            "type": "integer",
            "description":"An epoch value of a predefined trading period start time"
        },
        "product_type": {
          "type": "string",
          "description": "The product type, either basic or multi_barrier",
          "pattern":"^(multi_barrier|basic)$",
          "default": "basic"
        },
        "passthrough": {
            "type": "object",
            "description": "Optional field, used to pass data through the websocket, which may be retrieved via the echo_req output field."
        },
        "req_id": {
            "type": "integer",
            "description": "Optional field to map request to response"
        }
    },
    "additionalProperties": false
}
