#!/bin/bash

# rose_generation -- generate Rose modules 

# these are the steps that refresh Rose DB Object code.
# The catch is that the existing classes must be out-of-perl's-INC-sight for
# the new ones to be generated correctly.

# Special-case schemas "audit" and "auth" get generated into their own subdirectories.

# EXAMPLE USAGE

# to (re-)generate modules for all BOM tables in the main ("regentmarkets") database:
#               bin/rose_generation  regentmarkets --all

# to (re-)generate modules for all BOM tables in the auth database:
#               PGPORT=5435 bin/rose_generation  auth auth

# to (re-)generate modules for all BOM tables in the users database:
#               PGPORT=5436 bin/rose_generation  users users



dbname=$1; shift
schemas=$*

[ "$schemas" ] || { echo 'usage: bin/rose_generation DBNAME [SCHEMA|--all]'; exit 1; }

if [ "$schemas" = --all ]; then
    schemas='bet betonmarkets data_collection payment transaction'
fi

DIR=BOM/Database/AutoGenerated
TMP=/tmp/BOM_Rose_generation

rm -rf $TMP
mkdir -p $TMP || exit 1

# target location is relative to project root..
if [ ! -d "lib/$DIR" ]; then
    echo "$0: should be run from project root"
    exit 1
fi
root=$PWD

# temporarily hide any existing classes..
( cd "lib/$DIR" && mkdir -p Rose && mv Rose hide_Rose ) || exit 1
# in case we get interrupted..
trap "cd $root/lib/$DIR; [ -d hide_Rose ] && mv hide_Rose Rose" EXIT

failed=
for schema in $schemas; do
    subdir=
    if [ $schema = audit -o $schema = auth -o $schema = users ]; then
        subdir=$schema
        mkdir $TMP/$subdir
    fi

    perl bin/generate_Rose_classes.pl $dbname $schema $TMP $subdir || { failed=1; break; }
done

# now put everything back..
cd "lib/$DIR"
mv hide_Rose Rose

if [ "$failed" ]; then
    echo 'last schema had errors; so no generated code was delivered.'
else
    cp -pr $TMP/$DIR/Rose/* Rose
    rm -rf Rose/DB Rose/*/DB $TMP
fi

echo "Rose::DB::Object will be deprecated. So new tables' modules will not be generated. The following generated modules will be dropped ( if exist ):"
git clean -fd .

exit 0;
