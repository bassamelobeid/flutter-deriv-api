# The Format of this file is as follows:
# [%next if time>1000%]!landing_company_details/test_send.json,landing_company_details/test_receive_costarica.json, 'virtual'
# you can define a test that must fail by adding an exclamation mark at the start of the line:
# !send_file,receive_file,template_function
# if ! is at the start of line test must fail
# To set language just start a line in the following format
# [XX]
# Note: Changing language will create a new websocket session. This means authorization and setup for previous session will be lost.
# To start a new websocket connection (in case rate limit is reached etc) use {reset}
# To start a stream use '{start_stream:any_not_exists_key}balance/test_send_subscribe.json,balance/test_receive.json'
# To test a last stream message use '{test_last_stream_message:any_exists_key}balance/test_stream_message_1.json'

# Reconnect in English
[EN]

# UNAUTHENTICATED TESTS

# contract prices are very sensitive to time. Please avoid having anything before these test.
# invalid duration
proposal/test_send.json,proposal/test_buy_validation_error.json, 'ASIANU', 'R_100', '5', 'm'
# invalid contract type
proposal/test_send.json,proposal/test_receive_contract_error.json, 'INVALID', 'R_100', '5', 'm'
# invalid contract duration
proposal/test_send.json,proposal/test_buy_validation_error.json, 'ASIANU', 'R_100', '0', 't'
# invalid underlying symbol
proposal/test_send.json,proposal/test_receive_symbol_error.json, 'ASIANU', 'INVALID', '5', 't'

# R_100
proposal/test_send.json,proposal/test_receive.json, 'ASIANU', 'R_100', '5', 't',  'Win payout if the last tick of Volatility 100 Index is strictly higher than the average of the 5 ticks.', '51.49', '51.49', '65258.19'
proposal/test_send.json,proposal/test_receive.json, 'CALL', 'R_100', '30', 'd',  'Win payout if Volatility 100 Index is strictly higher than entry spot at close on 2016-09-08.', '45.74', '45.74', '65258.19'
proposal/test_send.json,proposal/test_receive.json, 'CALL', 'R_100', '15', 's',  'Win payout if Volatility 100 Index is strictly higher than entry spot at 15 seconds after contract start time.', '51.49', '51.49', '65258.19'
proposal/test_send_single_barrier.json,proposal/test_receive_single_barrier.json, 'DIGITMATCH', 'R_100', '10', 't', '0',  'Win payout if the last digit of Volatility 100 Index is 0 after 10 ticks.', '11.00', '11.00', '65258.19'
proposal/test_send_single_barrier.json,proposal/test_receive_single_barrier.json, 'CALL', 'R_100', '15', 'm', '+0.1',  'Win payout if Volatility 100 Index is strictly higher than entry spot plus 0.10 at 15 minutes after contract start time.', '51.38', '51.38', '65258.19'
proposal/test_send_single_barrier.json,proposal/test_receive_single_barrier.json, 'CALL', 'R_100', '30', 'd', '65268.19',  'Win payout if Volatility 100 Index is strictly higher than 65268.19 at close on 2016-09-08.', '45.71', '45.71', '65258.19'
proposal/test_send_single_barrier.json,proposal/test_receive_single_barrier.json, 'ONETOUCH', 'R_100', '2', 'm', '+200',  'Win payout if Volatility 100 Index touches entry spot plus 200.00 through 2 minutes after contract start time.', '11.50', '11.50', '65258.19'
proposal/test_send_single_barrier.json,proposal/test_receive_single_barrier.json, 'ONETOUCH', 'R_100', '30', 'd', '69968.19',  'Win payout if Volatility 100 Index touches 69968.19 through close on 2016-09-08.', '79.49', '79.49', '65258.19'
proposal/test_send_double_barrier.json,proposal/test_receive_double_barrier.json, 'EXPIRYMISS', 'R_100', '2', 'm', '+10', '-5',  'Win payout if Volatility 100 Index ends outside entry spot minus 5.00 to entry spot plus 10.00 at 2 minutes after contract start time.', '96.80', '96.80', '65258.19'
proposal/test_send_double_barrier.json,proposal/test_receive_double_barrier.json, 'EXPIRYRANGE', 'R_100', '30', 'd', '65968.19', '65068.19',  'Win payout if Volatility 100 Index ends strictly between 65068.19 to 65968.19 at close on 2016-09-08.', '3.37', '3.37', '65258.19'
proposal/test_send_double_barrier.json,proposal/test_receive_double_barrier.json, 'RANGE', 'R_100', '30', 'd', '65271.19', '65257.19',  'Win payout if Volatility 100 Index stays between 65257.19 to 65271.19 through close on 2016-09-08.', '2.50', '2.50', '65258.19'
proposal/test_send_double_barrier.json,proposal/test_receive_double_barrier.json, 'UPORDOWN', 'R_100', '2', 'm', '+200', '-50',  'Win payout if Volatility 100 Index goes outside entry spot minus 50.00 and entry spot plus 200.00 through 2 minutes after contract start time.', '74.50', '74.50', '65258.19'

# frxUSDJPY
proposal/test_send.json,proposal/test_receive.json, 'CALL', 'frxUSDJPY', '5', 't',  'Win payout if USD/JPY after 5 ticks is strictly higher than entry spot.', '50.6(0|1)', '50.6(0|1)', '97.140'
proposal/test_send.json,proposal/test_receive.json, 'CALL', 'frxUSDJPY', '1', 'm',  'Win payout if USD/JPY is strictly higher than entry spot at 1 minute after contract start time.', '56.31', '56.31', '97.140'
proposal/test_send.json,proposal/test_receive.json, 'CALL', 'frxUSDJPY', '1', 'd',  'Win payout if USD/JPY is strictly higher than entry spot at close on 2016-08-10.', '56.61', '56.61', '97.140'
proposal/test_send_single_barrier.json,proposal/test_receive_single_barrier.json, 'CALL', 'frxUSDJPY', '15', 'm', '+0.01',  'Win payout if USD/JPY is strictly higher than entry spot plus  10 pips at 15 minutes after contract start time.', '41.70', '41.70', '97.140'
proposal/test_send_single_barrier.json,proposal/test_receive_single_barrier.json, 'CALL', 'frxUSDJPY', '1', 'd', '97.150',  'Win payout if USD/JPY is strictly higher than 97.150 at close on 2016-08-10.', '55.78', '55.78', '97.140'
proposal/test_send_single_barrier.json,proposal/test_receive_single_barrier.json, 'ONETOUCH', 'frxUSDJPY', '1', 'd', '97.270',  'Win payout if USD/JPY touches 97.270 through close on 2016-08-10.', '88.83', '88.83', '97.140'
proposal/test_send_double_barrier.json,proposal/test_receive_double_barrier.json, 'EXPIRYMISS', 'frxUSDJPY', '1', 'd', '97.250', '97.100',  'Win payout if USD/JPY ends outside 97.100 to 97.250 at close on 2016-08-10.', '92.52', '92.52', '97.140'
proposal/test_send_double_barrier.json,proposal/test_receive_double_barrier.json, 'RANGE', 'frxUSDJPY', '1', 'd', '98.350', '96.830',  'Win payout if USD/JPY stays between 96.830 to 98.350 through close on 2016-08-10.', '51.22', '51.22', '97.140'
# FCHI
proposal/test_send.json,proposal/test_receive.json, 'CALL', 'FCHI', '15', 'm',  'Win payout if French Index is strictly higher than entry spot at 15 minutes after contract start time.', '54.99', '54.99', '3563.07'
proposal/test_send.json,proposal/test_receive.json, 'CALL', 'FCHI', '1', 'd',  'Win payout if French Index is strictly higher than entry spot at close on 2016-08-10.', '52.96', '52.96', '3563.07'
proposal/test_send_single_barrier.json,proposal/test_receive_single_barrier.json, 'CALL', 'FCHI', '7', 'd', '3564',  'Win payout if French Index is strictly higher than 3564.00 at close on 2016-08-16.', '51.12', '51.12', '3563.07'
proposal/test_send_single_barrier.json,proposal/test_receive_single_barrier.json, 'ONETOUCH', 'FCHI', '7', 'd', '3624',  'Win payout if French Index touches 3624.00 through close on 2016-08-16.', '40.86', '40.86', '3563.07'
proposal/test_send_double_barrier.json,proposal/test_receive_double_barrier.json, 'EXPIRYMISS', 'FCHI', '7', 'd', '3600', '3490',  'Win payout if French Index ends outside 3490.00 to 3600.00 at close on 2016-08-16.', '45.24', '45.24', '3563.07'
proposal/test_send_double_barrier.json,proposal/test_receive_double_barrier.json, 'RANGE', 'FCHI', '7', 'd', '3600', '3490',  'Win payout if French Index stays between 3490.00 to 3600.00 through close on 2016-08-16.', '37.52', '37.52', '3563.07'

# frxXAUUSD
proposal/test_send.json,proposal/test_receive.json, 'CALL', 'frxXAUUSD', '15', 'm',  'Win payout if Gold/USD is strictly higher than entry spot at 15 minutes after contract start time.', '57.63', '57.63', '111.00'
proposal/test_send.json,proposal/test_receive.json, 'CALL', 'frxXAUUSD', '1', 'd',  'Win payout if Gold/USD is strictly higher than entry spot at close on 2016-08-10.', '54.28', '54.28', '111.00'
proposal/test_send_single_barrier.json,proposal/test_receive_single_barrier.json, 'ONETOUCH', 'frxXAUUSD', '7', 'd', '112',  'Win payout if Gold/USD touches 112.00 through close on 2016-08-16.', '76.19', '76.19', '111.00'
proposal/test_send_double_barrier.json,proposal/test_receive_double_barrier.json, 'EXPIRYMISS', 'frxXAUUSD', '7', 'd', '113', '108',  'Win payout if Gold/USD ends outside 108.00 to 113.00 at close on 2016-08-16.', '41.73', '41.73', '111.00'
proposal/test_send_double_barrier.json,proposal/test_receive_double_barrier.json, 'RANGE', 'frxXAUUSD', '7', 'd', '113', '108',  'Win payout if Gold/USD stays between 108.00 to 113.00 through close on 2016-08-16.', '56.49', '56.49', '111.00'

# Connect in French
[FR]
# Doing a test that must fail
!payout_currencies/test_send.json,payout_currencies/test_receive_no_login_to_be_failed.json
!active_symbols/test_send_lc.json,active_symbols/test_receive_lc.json, 'costarica', 'forex', 'major_pairs'
!asset_index/test_send.json,asset_index/test_receive_to_fail.json
!landing_company/test_send.json,landing_company/test_receive_de.json, 'id'
!landing_company_details/test_send.json,landing_company_details/test_receive_costarica.json, 'virtual'

# Reconnect in English
[EN]

ping/test_send.json,ping/test_receive.json
time/test_send.json,time/test_receive.json
landing_company/test_send.json,landing_company/test_receive_de.json, 'de'
landing_company/test_send.json,landing_company/test_receive_id.json, 'id'
landing_company/test_send.json,landing_company/test_receive_jp.json, 'jp'
landing_company_details/test_send.json,landing_company_details/test_receive_costarica.json, 'costarica'
landing_company_details/test_send.json,landing_company_details/test_receive_virtual.json, 'virtual'
landing_company_details/test_send.json,landing_company_details/test_receive_iom.json, 'iom'
landing_company_details/test_send.json,landing_company_details/test_receive_japan.json, 'japan'
landing_company_details/test_send.json,landing_company_details/test_receive_japan_virtual.json, 'japan-virtual'
landing_company_details/test_send.json,landing_company_details/test_receive_malta.json, 'malta'
landing_company_details/test_send.json,landing_company_details/test_receive_maltainvest.json, 'maltainvest'
landing_company_details/test_send.json,landing_company_details/test_receive_error.json, 'unknown'
website_status/test_send.json,website_status/test_receive.json
payout_currencies/test_send.json,payout_currencies/test_receive_no_login.json
ticks_history/test_send_r50.json,ticks_history/test_receive_r50.json
active_symbols/test_send.json,active_symbols/test_receive_brief.json,'brief'
# active_symbols/test_send.json,active_symbols/test_receive_full.json,'full'
active_symbols/test_send_lc.json,active_symbols/test_receive_lc.json,'japan', 'forex', 'major_pairs'
active_symbols/test_send_lc.json,active_symbols/test_receive_lc.json,'malta', 'volidx', '.*'
active_symbols/test_send_lc.json,active_symbols/test_receive_lc.json,'maltainvest', '(?!^volidx$)(^.*$)', '.*'
asset_index/test_send.json,asset_index/test_receive.json
trading_times/test_send.json,trading_times/test_receive.json
# paymentagent_list/test_send.json,paymentagent_list/test_receive.json
residence_list/test_send.json,residence_list/test_receive.json
states_list/test_send.json,states_list/test_receive.json

# VIRTUAL ACCOUNT OPENING FOR (CR)
verify_email/test_send.json,verify_email/test_receive.json, 'test@binary.com', 'account_opening'
new_account_virtual/test_send.json,new_account_virtual/test_receive.json,_get_token('test@binary.com'), 'test@binary.com', 'id'
authorize/test_send.json,authorize/test_receive_vrtc.json,_get_stashed('new_account_virtual/new_account_virtual/oauth_token'), 'test@binary.com'
!new_account_virtual/test_send.json,new_account_virtual/test_receive.json,_get_token('test@binary.com'), 'test@binary.com', 'id'

# READ SCOPE CALLS (VRTC)
balance/test_send.json,balance/test_receive.json, '10000\\.00', 'USD', _get_stashed('authorize/authorize/loginid')
payout_currencies/test_send.json,payout_currencies/test_receive_vrt.json, 'USD'
login_history/test_send.json,login_history/test_receive.json
get_settings/test_send.json,get_settings/test_receive_vrtc.json, 'Indonesia', 'id'
get_account_status/test_send.json,get_account_status/test_receive.json

# TRADE SCOPE CALLS (VRTC)
topup_virtual/test_send.json,topup_virtual/test_receive_error.json
{start_stream:1}balance/test_send_subscribe.json,balance/test_receive.json, '10000\\.00', 'USD', _get_stashed('authorize/authorize/loginid')
proposal/test_send_buy.json,proposal/test_receive_buy.json
buy/test_send.json,buy/test_receive.json,_get_stashed('proposal/proposal/id'), '99\\d{2}\\.\\d{2}'
{test_last_stream_message:1}balance/test_receive.json, '99\\d{2}\\.\\d{2}', 'USD', _get_stashed('authorize/authorize/loginid')
buy_contract_for_multiple_accounts/test_send_invalid_token.json,buy_contract_for_multiple_accounts/test_receive_invalid_token.json,_get_stashed('proposal/id'),_get_stashed('new_account_real/new_account_real/oauth_token'),'dummy1234'

# ADMIN SCOPE CALLS (GENERAL)
api_token/test_send_create.json,api_token/test_receive_create.json, 'test'
api_token/test_send.json,api_token/test_receive.json,_get_stashed('api_token/api_token/tokens/0/token')
api_token/test_send_delete.json,api_token/test_receive_delete.json,_get_stashed('api_token/api_token/tokens/0/token')
app_register/test_send.json,app_register/test_receive.json
app_get/test_send.json,app_get/test_receive.json,_get_stashed('app_register/app_register/app_id')
app_update/test_send.json,app_update/test_receive.json,_get_stashed('app_register/app_register/app_id')
!app_list/test_send.json,app_list/test_receive_to_fail.json,_get_stashed('app_register/app_register/app_id')
app_delete/test_send.json,app_delete/test_receive.json,_get_stashed('app_register/app_register/app_id'), '1'
app_list/test_send.json,app_list/test_receive.json,_get_stashed('app_register/app_register/app_id')
oauth_apps/test_send.json,oauth_apps/test_receive.json

# TESTS TO RETURN ERROR (VRTC)
get_limits/test_send.json,get_limits/test_receive_error.json
set_settings/test_send.json,set_settings/test_receive_error.json
get_financial_assessment/test_send.json,get_financial_assessment/test_receive_vrt.json

# TESTS TO RETURN ERROR (GENERAL)
api_token/test_send_create.json,api_token/test_receive_create.json, 'test'
api_token/test_send_create.json,api_token/test_receive_error.json, 'test'
app_delete/test_send.json,app_delete/test_receive.json,_get_stashed('app_register/app_register/app_id'), '0'
app_update/test_send.json,app_update/test_receive_error.json,_get_stashed('app_register/app_register/app_id')
app_get/test_send.json,app_get/test_receive_error.json,_get_stashed('app_register/app_register/app_id')
app_register/test_send.json,app_register/test_receive.json
app_register/test_send.json,app_register/test_receive_error.json
!login_history/test_send.json,login_history/test_receive_to_fail.json

# REAL ACCOUNT OPENING (CR)
!new_account_real/test_send.json,new_account_real/test_receive_cr.json, 'Peter', 'zq'
new_account_real/test_send.json,new_account_real/test_receive_cr.json, 'Peter', 'id'
authorize/test_send.json,authorize/test_receive_cr.json,_get_stashed('new_account_real/new_account_real/oauth_token')
balance/test_send.json,balance/test_receive.json, '0\\.00', '', _get_stashed('authorize/authorize/loginid')

# READ SCOPE CALLS (CR) BEFORE CHANGE
get_limits/test_send.json,get_limits/test_receive_cr.json
get_settings/test_send.json,get_settings/test_receive_cr_before.json

# ADMIN SCOPE CALLS (CR)
set_account_currency/test_send.json,set_account_currency/test_receive.json, 'USD'
set_account_currency/test_send.json,set_account_currency/test_receive_error.json, 'GBP'
balance/test_send.json,balance/test_receive.json, '0\\.00', 'USD', _get_stashed('authorize/authorize/loginid')
set_self_exclusion/test_send.json,set_self_exclusion/test_receive.json
set_settings/test_send.json,set_settings/test_receive.json

# READ SCOPE CALLS (CR) AFTER CHANGE
get_settings/test_send.json,get_settings/test_receive_cr_after.json
get_self_exclusion/test_send.json,get_self_exclusion/test_receive.json

# READ SCOPE TESTS TO FAIL
!get_settings/test_send.json,get_settings/test_receive_cr_before.json
!get_self_exclusion/test_send.json,get_self_exclusion/test_receive_to_fail.json

# TRADE SCOPE CALLS (CR)
topup_virtual/test_send.json,topup_virtual/test_receive_error.json

# PAYMENT SCOPE CALLS (CR)
cashier_password/test_send.json,cashier_password/test_receive.json, '0'
cashier_password/test_send_lock.json,cashier_password/test_receive.json, '1', 'Abc1234'
cashier/test_send_deposit.json,cashier/test_receive_error.json
verify_email/test_send.json,verify_email/test_receive.json, 'test@binary.com', 'payment_withdraw'
cashier/test_send_withdraw.json,cashier/test_receive_error.json,_get_token('test@binary.com')
cashier_password/test_send_lock.json,cashier_password/test_receive_error.json, '', 'Abc1234'
cashier_password/test_send.json,cashier_password/test_receive.json, '1'
cashier_password/test_send_unlock.json,cashier_password/test_receive.json, '0', 'Abc1234'
cashier_password/test_send_unlock.json,cashier_password/test_receive_error.json, '', 'Abc1234'
cashier_password/test_send_lock.json,cashier_password/test_receive_password_error.json, '', 'abc1234'
cashier_password/test_send_lock.json,cashier_password/test_receive_error.json, '', 'Abc123'

change_password/test_send.json,change_password/test_receive_error.json, 'Abc123', 'Abc123'
change_password/test_send.json,change_password/test_receive_error.json, 'Abc123', 'abc123'
change_password/test_send.json,change_password/test_receive_error.json, 'abc123', 'Abcd123'
change_password/test_send.json,change_password/test_receive.json, 'Abc123', 'Abcd1234'

# as we created token for payment_withdraw which returned with error so token was not expired
# so reset password is not allowed with that token
!reset_password/test_send_real.json,reset_password/test_receive.json,_get_token('test@binary.com'), 'Abc123'
verify_email/test_send.json,verify_email/test_receive.json, 'test@binary.com', 'reset_password'
reset_password/test_send_real.json,reset_password/test_receive.json,_get_token('test@binary.com'), 'Abc123'
# same token cannot be used twice
!reset_password/test_send_real.json,reset_password/test_receive.json,_get_token('test@binary.com'), 'Abc123'

# TESTS TO RETURN ERROR (LOGGED OUT)
logout/test_send.json,logout/test_receive.json
authorize/test_send.json,authorize/test_receive_error.json,_get_stashed('new_account_real/new_account_real/oauth_token')
balance/test_send.json,balance/test_receive_error.json
get_account_status/test_send.json,get_account_status/test_receive_error.json

# VIRTUAL ACCOUNT OPENING FOR (MLT)
verify_email/test_send.json,verify_email/test_receive.json, 'test-mlt@binary.com', 'account_opening'
new_account_virtual/test_send.json,new_account_virtual/test_receive.json,_get_token('test-mlt@binary.com'), 'test-mlt@binary.com', 'dk'
authorize/test_send.json,authorize/test_receive_vrtc.json,_get_stashed('new_account_virtual/new_account_virtual/oauth_token'), 'test-mlt@binary.com'

# REAL ACCOUNT OPENING (MLT)
new_account_real/test_send.json,new_account_real/test_receive_mlt.json, 'Jack', 'dk'
authorize/test_send.json,authorize/test_receive_mlt.json,_get_stashed('new_account_real/new_account_real/oauth_token')
balance/test_send.json,balance/test_receive.json, '0\\.00', '', _get_stashed('authorize/authorize/loginid')

# SUB ACCOUNT OPENING
new_sub_account/test_send.json,new_sub_account/test_receive.json,_set_allow_omnibus('new_account_real/client_id')
new_sub_account/test_send_details.json,new_sub_account/test_receive.json

# READ SCOPE CALLS (MLT) BEFORE CHANGE
reality_check/test_send.json,reality_check/test_receive.json, ''

# PAYMENT SCOPE CALLS (MLT)
set_account_currency/test_send.json,set_account_currency/test_receive.json, 'EUR'
set_account_currency/test_send.json,set_account_currency/test_receive_error.json, 'GBP'

# READ SCOPE CALLS (MLT) AFTER CHANGE
!reality_check/test_send.json,reality_check/test_receive.json, 'GBP'
reality_check/test_send.json,reality_check/test_receive.json, 'EUR'

# FINANCIAL ACCOUNT OPENING (MF)
new_account_maltainvest/test_send.json,new_account_maltainvest/test_receive_error.json, '0'
new_account_maltainvest/test_send.json,new_account_maltainvest/test_receive.json, '1'
authorize/test_send.json,authorize/test_receive_mf.json,_get_stashed('new_account_maltainvest/new_account_maltainvest/oauth_token')
balance/test_send.json,balance/test_receive.json, '0\\.00', '', _get_stashed('authorize/authorize/loginid')

# ADMIN SCOPE CALLS (MF)
set_financial_assessment/test_send.json,set_financial_assessment/test_receive.json
get_financial_assessment/test_send.json,get_financial_assessment/test_receive.json,_get_stashed('set_financial_assessment/set_financial_assessment/score')

!logout/test_send_to_fail.json,logout/test_receive.json
logout/test_send.json,logout/test_receive.json

# have to restart the websocket connection because rate limit of verify_email call is reached
{reset}

# VIRTUAL ACCOUNT OPENING (VRTJ TO FAIL KNOWLEDGE TEST)
verify_email/test_send.json,verify_email/test_receive.json, 'test-jp@binary.com', 'account_opening'
new_account_virtual/test_send.json,new_account_virtual/test_receive_vrtj.json,_get_token('test-jp@binary.com'), 'test-jp@binary.com', 'jp'
authorize/test_send.json,authorize/test_receive_vrtj.json,_get_stashed('new_account_virtual/new_account_virtual/oauth_token'), 'test-jp@binary.com'

# READ SCOPE CALLS (VRTJ)
balance/test_send.json,balance/test_receive.json, '1000000\\.00', 'JPY', _get_stashed('authorize/authorize/loginid')
payout_currencies/test_send.json,payout_currencies/test_receive_vrt.json, 'JPY'
get_settings/test_send.json,get_settings/test_receive_vrtj_before.json
get_account_status/test_send.json,get_account_status/test_receive.json

# TESTS TO RETURN ERROR (VRTJ)
get_limits/test_send.json,get_limits/test_receive_error.json
get_financial_assessment/test_send.json,get_financial_assessment/test_receive_vrt.json

# REAL ACCOUNT OPENING (JP)
new_account_japan/test_send.json,new_account_japan/test_receive.json, 'Susan'
get_settings/test_send.json,get_settings/test_receive_vrtj_after.json, 'jp_knowledge_test_pending', 'test-jp@binary.com'
jp_knowledge_test/test_send.json,jp_knowledge_test/test_receive.json, '8', 'fail'
!jp_knowledge_test/test_send.json,jp_knowledge_test/test_receive_error.json, '230', 'succeed'
get_settings/test_send.json,get_settings/test_receive_vrtj_fail.json

# VIRTUAL ACCOUNT OPENING (VRTJ TO PASS KNOWLEDGE TEST)
verify_email/test_send.json,verify_email/test_receive.json, 'test-jp2@binary.com', 'account_opening'
new_account_virtual/test_send.json,new_account_virtual/test_receive_vrtj.json,_get_token('test-jp2@binary.com'), 'test-jp2@binary.com', 'jp'
authorize/test_send.json,authorize/test_receive_vrtj.json,_get_stashed('new_account_virtual/new_account_virtual/oauth_token'), 'test-jp2@binary.com'

# REAL ACCOUNT OPENING (JP)
new_account_japan/test_send.json,new_account_japan/test_receive_error.json, 'Susan'
new_account_japan/test_send.json,new_account_japan/test_receive.json, 'Julie'
jp_knowledge_test/test_send.json,jp_knowledge_test/test_receive.json, '12', 'pass'
get_settings/test_send.json,get_settings/test_receive_vrtj_after.json, 'jp_activation_pending', 'test-jp2@binary.com'

# VIRTUAL ACCOUNT OPENING FOR (MX)
verify_email/test_send.json,verify_email/test_receive.json, 'test-mx@binary.com', 'account_opening'
new_account_virtual/test_send.json,new_account_virtual/test_receive.json,_get_token('test-mx@binary.com'), 'test-mx@binary.com', 'gb'

# REAL ACCOUNT OPENING (MX)
authorize/test_send.json,authorize/test_receive_vrtc.json,_get_stashed('new_account_virtual/new_account_virtual/oauth_token'), 'test-mx@binary.com'
new_account_real/test_send.json,new_account_real/test_receive_mx.json, 'John', 'gb'
authorize/test_send.json,authorize/test_receive_mx.json,_get_stashed('new_account_real/new_account_real/oauth_token')
balance/test_send.json,balance/test_receive.json, '0\\.00', '', _get_stashed('authorize/authorize/loginid')

# PAYMENT SCOPE CALLS (MX)
cashier/test_send_deposit.json,cashier/test_receive_ukgc_error.json
tnc_approval/test_send_ukgc.json,tnc_approval/test_receive.json
cashier/test_send_deposit.json,cashier/test_receive_currency_error.json
set_account_currency/test_send.json,set_account_currency/test_receive.json, 'GBP'
balance/test_send.json,balance/test_receive.json, '0\\.00', 'GBP', _get_stashed('authorize/authorize/loginid')

# VIRTUAL ACCOUNT OPENING (VRTC)
verify_email/test_send.json,verify_email/test_receive.json, 'test2@binary.com', 'account_opening'
new_account_virtual/test_send.json,new_account_virtual/test_receive.json,_get_token('test2@binary.com'), 'test2@binary.com', 'au'
verify_email/test_send.json,verify_email/test_receive.json, 'test2@binary.com', 'reset_password'
reset_password/test_send_vrt.json,reset_password/test_receive.json,_get_token('test2@binary.com'), 'Abc123'
