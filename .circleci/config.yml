---
alias:
- &1
  add_ssh_keys:
    fingerprints:
    - 26:72:b1:08:0f:c1:3b:2b:2d:ea:61:7d:d6:11:63:fb
- &2
  run:
    command: /opt/circle/prepare-test.sh
    name: Update git repositories
- &3
  run:
    background: true
    command: |
      start_services
      touch /tmp/services.ready
    name: Start services
- &4
  run:
    command: |
      count=0
      while [ ! -f /tmp/services.ready ]; do
          echo 'Still waiting for services...'
          (( count++ )) && (( count >= 20 )) && break
          sleep 1
      done
    name: Wait for services to start up
- &5
  environment:
    PERL5LIB: /home/git/regentmarkets/bom/lib:/home/git/regentmarkets/bom-postgres/lib:/home/git/regentmarkets/bom-platform/lib:/home/git/regentmarkets/bom-user/lib:/home/git/regentmarkets/bom-market/lib:/home/git/regentmarkets/bom-marketdataautoupdater/lib:/home/git/regentmarkets/bom-backoffice/lib:/home/git/regentmarkets/bom-myaffiliates/lib:/home/git/regentmarkets/binary-websocket-api/lib:/home/git/regentmarkets/bom-paymentapi/lib:/home/git/regentmarkets/bom-oauth/lib:/home/git/regentmarkets/bom-rpc/lib:/home/git/regentmarkets/bom-populator/lib:/home/git/regentmarkets/bom-feed/lib:/home/git/regentmarkets/bom-test/lib:/home/git/regentmarkets/php-mt5-webapi/lib:/home/git/regentmarkets/bom-transaction/lib:/home/git/regentmarkets/bom-pricing/lib:/home/git/regentmarkets/bom-cryptocurrency/lib:/home/git/regentmarkets/bom-user/lib:/home/git/regentmarkets/bom-config/lib
    PERL_TEST_HARNESS_DUMP_TAP: /var/tmp/test-output
- &check_services
  run:
    command: /opt/circle/check_services
    name: Check services are running
- &debian-ci
  auth:
    password: $DOCKERHUB_PASSWORD
    username: circle4regentmarkets
  image: regentmarkets/debian-ci:stable
  user: nobody
default: &6
  docker:
  - *debian-ci
  shell: /bin/bash -leo pipefail
  working_directory: /home/git/regentmarkets/bom-events
jobs:
  core_syntax_diff:
    <<: *6
    steps:
    - *1
    - *2
    - *3
    - *4
    - *check_services
    - run:
        <<: *5
        command: |
          echo '--formatter TAP::Formatter::JUnit' >> .proverc
          make test
        name: Core tests
    - run:
        command: make unit
        name: unit tests
    - run:
        command: make syntax_diff
        name: Code structure and syntax
    - store_test_results:
        path: /var/tmp/test-output
  syntax_unit:
    <<: *6
    steps:
    - *1
    - *2
    - run:
        <<: *5
        command: |
          echo '--formatter TAP::Formatter::JUnit' >> .proverc
          make syntax
        name: Code structure and syntax
    - run:
        command: make unit
        name: unit tests
    - store_test_results:
        path: /var/tmp/test-output
  core:
    <<: *6
    steps:
    - *1
    - *2
    - *3
    - *4
    - *check_services
    - run:
        <<: *5
        command: |
          echo '--formatter TAP::Formatter::JUnit' >> .proverc
          make test
        name: Core tests
    - store_test_results:
        path: /var/tmp/test-output
  unit:
    <<: *6
    steps:
    - *1
    - *2
    - run:
        <<: *5
        command: |
          echo '--formatter TAP::Formatter::JUnit' >> .proverc
          make unit
        name: Unit tests
    - store_test_results:
        path: /var/tmp/test-output
  code_coverage:
    <<: *6
    steps:
    - *1
    - *2
    - *3
    - *4
    - *check_services
    - run:
        <<: *5
        command: make cover
        name: code coverage tests
version: 2
workflows:
  build-workflow:
    jobs:
    - core_syntax_diff:
        context: perl
  daily:
    jobs:
    - syntax_unit:
        context: perl
    - core:
        context: perl
    triggers:
    - schedule:
        cron: 4 20 * * *
        filters:
          branches:
            only:
            - master
  weekly-code-coverage:
    jobs:
    - code_coverage:
        context: perl
    triggers:
    - schedule:
        cron: 50 3 * * 6
        filters:
          branches:
            only:
            - master
  version: 2
