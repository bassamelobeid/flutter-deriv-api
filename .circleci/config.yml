---
version: 2

default: &default
  docker:
  - image: regentmarkets/debian-ci:stable
    user: nobody
    auth:
      username: circle4regentmarkets
      password: $DOCKERHUB_PASSWORD
  shell: /bin/bash -leo pipefail
  working_directory: /home/git/regentmarkets/bom

alias:
- &ssh_keys
  add_ssh_keys:
    fingerprints:
    - 26:72:b1:08:0f:c1:3b:2b:2d:ea:61:7d:d6:11:63:fb
- &update_git
  run:
    name: Update git repositories
    command: /opt/circle/prepare-test.sh
- &services
  run:
    name: Start services
    command: |
      start_services
      touch /tmp/services.ready
    background: true
- &wait_services
  run:
    name: Wait for services to start up
    command: |
      count=0
      while [ ! -f /tmp/services.ready ]; do
          echo 'Still waiting for services...'
          (( count++ )) && (( count >= 20 )) && break
          sleep 1
      done
- &test_output
  environment:
    PERL_TEST_HARNESS_DUMP_TAP: /var/tmp/test-output

jobs:
  syntax_unit:
    <<: *default
    steps:
    - *ssh_keys
    - *update_git
    - run:
        <<: *test_output
        command: |
          echo '--formatter TAP::Formatter::JUnit' >> .proverc
          make syntax
        name: Code structure and syntax
    - run:
        command: make unit
        name: unit tests
    - store_test_results:
        path: /var/tmp/test-output
  syntax_diff_unit:
    <<: *default
    steps:
    - *ssh_keys
    - *update_git
    - run:
        <<: *test_output
        command: |
          echo '--formatter TAP::Formatter::JUnit' >> .proverc
          make syntax_diff
        name: Code structure and syntax
    - run:
        command: make unit
        name: unit tests
    - store_test_results:
        path: /var/tmp/test-output
  product_contract:
    <<: *default
    steps:
    - *ssh_keys
    - *update_git
    - *services
    - *wait_services
    - run:
        <<: *test_output
        name: Product contract test
        command: |
          echo '--formatter TAP::Formatter::JUnit' >> .proverc
          make unit_test_product_contract
    - store_test_results:
        path: /var/tmp/test-output
  validation:
    <<: *default
    steps:
    - *ssh_keys
    - *update_git
    - *services
    - *wait_services
    - run:
        <<: *test_output
        name: Validation
        command: |
          echo '--formatter TAP::Formatter::JUnit' >> .proverc
          make unit_test_validation
    - store_test_results:
        path: /var/tmp/test-output
  memory_test:
    <<: *default
    steps:
    - *ssh_keys
    - *update_git
    - *services
    - *wait_services
    - run:
        <<: *test_output
        name: MemoryTest
        command: |
          echo '--formatter TAP::Formatter::JUnit' >> .proverc
          make memory_test
    - store_test_results:
        path: /var/tmp/test-output
  pricing:
    <<: *default
    steps:
    - *ssh_keys
    - *update_git
    - *services
    - *wait_services
    - run:
        <<: *test_output
        name: Pricing
        command: |
          echo '--formatter TAP::Formatter::JUnit' >> .proverc
          make unit_test_pricing
    - store_test_results:
        path: /var/tmp/test-output
  product_others:
    <<: *default
    steps:
    - *ssh_keys
    - *update_git
    - *services
    - *wait_services
    - run:
        <<: *test_output
        name: Product extended
        command: |
          echo '--formatter TAP::Formatter::JUnit' >> .proverc
          make unit_test_product_contract_extended
    - run:
        name: Product base
        command: make unit_test_product_base
        when: always
    - run:
        name: Product model
        command: make unit_test_product_model
        when: always
    - run:
        name: Valatility
        command: make unit_test_volatility
        when: always
    - run:
        name: Offerings
        command: make unit_test_offerings
        when: always
    - store_test_results:
        path: /var/tmp/test-output
# bom repo changes frequently so it is important to check the below repo tests here
  benchmark_merlin_ovra:
    <<: *default
    steps:
    - *ssh_keys
    - *update_git
    - *services
    - *wait_services
    - run:
        <<: *test_output
        name: Merlin Benchmark
        command: |
          cd /home/git/regentmarkets/bom-quant-benchmark
          echo '--formatter TAP::Formatter::JUnit' >> .proverc
          make merlin_benchmark
    - run:
        <<: *test_output
        name: OVRA benchmark
        command: |
          cd /home/git/regentmarkets/bom-quant-benchmark
          make OVRA_benchmark
        when: always
    - store_test_results:
        path: /var/tmp/test-output
  benchmark_SD:
    <<: *default
    working_directory: /home/git/regentmarkets/bom-quant-benchmark
    steps:
    - *ssh_keys
    - *update_git
    - *services
    - *wait_services
    - run:
        name: SDFX benchmark major
        command: make SDFX_benchmark_major
        when: always
    - run:
        name: SDFX benchmark minor
        command: make SDFX_benchmark_minor
        when: always
    - run:
        name: SDEQ benchmark OTC_DJI
        command: make SDEQ_benchmark_OTC_DJI
        when: always
    - run:
        name: SDEQ benchmark OTC_FCHI
        command: make SDEQ_benchmark_OTC_FCHI
        when: always
    - run:
        name: SDEQ benchmark OTC_SPC
        command: make SDEQ_benchmark_OTC_SPC
        when: always
    - run:
        name: SDEQ benchmark SSECOMP
        command: make SDEQ_benchmark_SSECOMP
        when: always
    - run:
        name: SDEQ benchmark OTC_FTSE
        command: make SDEQ_benchmark_OTC_FTSE
        when: always
    - store_test_results:
        path: /var/tmp/test-output
  Pricing-Engine-Tests:
    <<: *default
    steps:
    - *ssh_keys
    - *update_git
    - *services
    - *wait_services
    - run:
        <<: *test_output
        name: perl-Pricing-Engine-European-Digital-Slope
        command: |
          cd /home/git/regentmarkets/perl-Pricing-Engine-European-Digital-Slope
          echo '--formatter TAP::Formatter::JUnit' >> .proverc
          make test
    - run:
        <<: *test_output
        name: perl-Pricing-Engine-BlackScholes
        command: |
          cd /home/git/regentmarkets/perl-Pricing-Engine-BlackScholes
          echo '--formatter TAP::Formatter::JUnit' >> .proverc
          make test
        when: always
    - run:
        <<: *test_output
        name: perl-Pricing-Engine-Digits
        command: |
          cd /home/git/regentmarkets/perl-Pricing-Engine-Digits
          echo '--formatter TAP::Formatter::JUnit' >> .proverc
          make test
        when: always
    - run:
        <<: *test_output
        name: perl-Pricing-Engine-HighLow-Ticks
        command: |
          cd /home/git/regentmarkets/perl-Pricing-Engine-HighLow-Ticks
          echo '--formatter TAP::Formatter::JUnit' >> .proverc
          make test
        when: always
    - run:
        <<: *test_output
        name: perl-Pricing-Engine-Intraday-Forex-Base
        command: |
          cd /home/git/regentmarkets/perl-Pricing-Engine-Intraday-Forex-Base
          echo '--formatter TAP::Formatter::JUnit' >> .proverc
          make test
        when: always
    - run:
        <<: *test_output
        name: perl-Pricing-Engine-Lookback
        command: |
          cd /home/git/regentmarkets/perl-Pricing-Engine-Lookback
          echo '--formatter TAP::Formatter::JUnit' >> .proverc
          make test
        when: always
    - run:
        <<: *test_output
        name: perl-Pricing-Engine-Markup
        command: |
          cd /home/git/regentmarkets/perl-Pricing-Engine-Markup
          echo '--formatter TAP::Formatter::JUnit' >> .proverc
          make test
        when: always
    - run:
        <<: *test_output
        name: perl-Pricing-Engine-Reset
        command: |
          cd /home/git/regentmarkets/perl-Pricing-Engine-Reset
          echo '--formatter TAP::Formatter::JUnit' >> .proverc
          make test
        when: always
    - run:
        <<: *test_output
        name: perl-Pricing-Engine-TickExpiry
        command: |
          cd /home/git/regentmarkets/perl-Pricing-Engine-TickExpiry
          echo '--formatter TAP::Formatter::JUnit' >> .proverc
          make test
        when: always
    - store_test_results:
        path: /var/tmp/test-output
  unit:
    <<: *default
    steps:
    - *ssh_keys
    - *update_git
    - run:
        <<: *test_output
        name: Run Unit Tests
        command: |
          echo '--formatter TAP::Formatter::JUnit' >> .proverc
          make unit
    - store_test_results:
        path: /var/tmp/test-output
  code_coverage:
    <<: *default
    steps:
    - *ssh_keys
    - *update_git
    - *services
    - *wait_services
    - run:
        <<: *test_output
        name: code coverage tests
        command: make cover
workflows:
  version: 2
  build-workflow:
    jobs:
    - syntax_diff_unit:
        context: perl
    - product_contract:
        context: perl
    - validation:
        context: perl
    - memory_test:
        context: perl
    - pricing:
        context: perl
    - product_others:
        context: perl
    - benchmark_merlin_ovra:
        context: perl
    - benchmark_SD:
        context: perl
    - Pricing-Engine-Tests:
        context: perl
  daily:
    jobs:
    - syntax_unit:
        context: perl
    - product_contract:
        context: perl
    - validation:
        context: perl
    - memory_test:
        context: perl
    - pricing:
        context: perl
    - product_others:
        context: perl
    - benchmark_merlin_ovra:
        context: perl
    - benchmark_SD:
        context: perl
    - Pricing-Engine-Tests:
        context: perl
    triggers:
    - schedule:
        cron: 30 22 * * *
        filters:
          branches:
            only:
            - master
  weekly-code-coverage:
    jobs:
    - code_coverage:
        context: perl
    triggers:
    - schedule:
        cron: 40 6 * * 6
        filters:
          branches:
            only:
            - master
