version: 2

default: &default
  docker:
    - image: regentmarkets/debian-ci:latest
      user: nobody
      auth:
        username: circle4regentmarkets
        password: $DOCKERHUB_PASSWORD
  shell: /bin/bash -leo pipefail
  working_directory: /home/git/regentmarkets/binary-websocket-api

alias:
  - &ssh_keys
    add_ssh_keys:
      fingerprints:
        - "26:72:b1:08:0f:c1:3b:2b:2d:ea:61:7d:d6:11:63:fb"
  - &git
    run:
      name: Update git repositories
      command: /opt/circle/prepare-test.sh
  - &services
    run:
      name: Start services
      command: |
        start_services
        touch /tmp/services.ready
      background: true
  - &wait_services
    run:
      name: Wait for services to start up
      command: |
        count=0
        while [ ! -f /tmp/services.ready ]; do
            echo 'Still waiting for services...'
            (( count++ )) && (( count >= 20 )) && break
            sleep 1
        done
  - &tests
    environment:
      PERL_TEST_HARNESS_DUMP_TAP: /var/tmp/test-output
      RPC_CONFIG: /home/git/regentmarkets/bom-rpc/rpc.conf.travis
      WEBSOCKET_CONFIG: /home/git/regentmarkets/binary-websocket-api/websocket.conf.example

jobs:
  structure:
    <<: *default
    steps:
      - *ssh_keys
      - checkout
      - *git
      - *services
      - *wait_services
      - run:
          <<: *tests
          name: Code structure and syntax
          command: |
            echo '--formatter TAP::Formatter::JUnit' >> .proverc
            make structure
      - store_test_results:
          path: /var/tmp/test-output
  accounts:
    <<: *default
    steps:
      - *ssh_keys
      - checkout
      - *git
      - *services
      - *wait_services
      - run:
          <<: *tests
          name: Accounts-related functionality
          command: |
            echo '--formatter TAP::Formatter::JUnit' >> .proverc
            make accounts
      - store_test_results:
          path: /var/tmp/test-output
  security:
    <<: *default
    steps:
      - *ssh_keys
      - checkout
      - *git
      - *services
      - *wait_services
      - run:
          <<: *tests
          name: Security handling
          command: |
            echo '--formatter TAP::Formatter::JUnit' >> .proverc
            make security
      - store_test_results:
          path: /var/tmp/test-output
  pricing:
    <<: *default
    steps:
      - *ssh_keys
      - checkout
      - *git
      - *services
      - run:
          name: inotify dæmon
          command: perl /home/git/regentmarkets/bom-platform/bin/notify_pub.pl 2>&1 | grep -Ev '(connection has been closed unexpectedly)|(terminating connection due to administrator)'
          background: true
      - *wait_services
      - run:
          <<: *tests
          name: Pricing
          command: |
            echo '--formatter TAP::Formatter::JUnit' >> .proverc
            make pricing
      - store_test_results:
          path: /var/tmp/test-output
  misc:
    <<: *default
    steps:
      - *ssh_keys
      - checkout
      - *git
      - *services
      - *wait_services
      - run:
          <<: *tests
          name: Uncategorised tests
          command: |
            echo '--formatter TAP::Formatter::JUnit' >> .proverc
            make misc
      - store_test_results:
          path: /var/tmp/test-output
  schema:
    <<: *default
    steps:
      - *ssh_keys
      - checkout
      - *git
      - *services
      - run:
          name: inotify dæmon
          command: perl /home/git/regentmarkets/bom-platform/bin/notify_pub.pl 2>&1 | grep -Ev '(connection has been closed unexpectedly)|(terminating connection due to administrator)'
          background: true
      - *wait_services
      - run:
          <<: *tests
          name: Schema tests
          command: |
            echo '--formatter TAP::Formatter::JUnit' >> .proverc
            make schema
      - store_test_results:
          path: /var/tmp/test-output

workflows:
  version: 2
  build-workflow:
    jobs:
      - structure:
          context: perl
      - accounts:
          context: perl
      - security:
          context: perl
      - pricing:
          context: perl
      - misc:
          context: perl
      - schema:
          context: perl
