---
alias:
- &1
  add_ssh_keys:
    fingerprints:
    - 26:72:b1:08:0f:c1:3b:2b:2d:ea:61:7d:d6:11:63:fb
- &2
  run:
    command: /opt/circle/prepare-test.sh
    name: Update git repositories
- &3
  run:
    background: true
    command: |
      sudo mkdir -p /var/lib/binary && sudo chown nobody:nogroup /var/lib/binary # this line should be dropped when we switch json schema v3 to v4
      start_services
      touch /tmp/services.ready
    name: Start services
- &4
  run:
    command: |
      count=0
      while [ ! -f /tmp/services.ready ]; do
          echo 'Still waiting for services...'
          (( count++ )) && (( count >= 20 )) && break
          sleep 1
      done
    name: Wait for services to start up
- &5
  environment:
    PERL_TEST_HARNESS_DUMP_TAP: /var/tmp/test-output
    RPC_CONFIG: /home/git/regentmarkets/bom-rpc/rpc.conf.travis
    WEBSOCKET_CONFIG: /home/git/regentmarkets/binary-websocket-api/websocket.conf.example
- &check_services
  run:
    command: |
      /opt/circle/check_services
    name: Check services are running
- &redis6
  image: redis:6
  name: redis-v6

- &debian-ci
  auth:
    password: $DOCKERHUB_PASSWORD
    username: circle4regentmarkets
  image: regentmarkets/debian-ci:stable
  user: nobody

default: &6
  docker:
  - *debian-ci
  - *redis6
  shell: /bin/bash -leo pipefail
  working_directory: /home/git/regentmarkets/binary-websocket-api

jobs:
  accounts:
    <<: *6
    steps:
    - *1
    - *2
    - *3
    - *4
    - *check_services
    - run:
        <<: *5
        command: |
          echo '--formatter TAP::Formatter::JUnit' >> .proverc
          make accounts
        name: Accounts-related functionality
    - store_test_results:
        path: /var/tmp/test-output
  misc:
    <<: *6
    steps:
    - *1
    - *2
    - *3
    - *4
    - *check_services
    - run:
        <<: *5
        command: |
          echo '--formatter TAP::Formatter::JUnit' >> .proverc
          make misc
        name: Uncategorised tests
    - store_test_results:
        path: /var/tmp/test-output
  p2p:
    <<: *6
    steps:
    - *1
    - *2
    - *3
    - *4
    - *check_services
    - run:
        <<: *5
        command: |
          echo '--formatter TAP::Formatter::JUnit' >> .proverc
          make p2p
        name: Run P2P tests
    - store_test_results:
        path: /var/tmp/test-output
  pricing:
    <<: *6
    steps:
    - *1
    - *2
    - *3
    - *4
    - *check_services
    - run:
        <<: *5
        command: |
          echo '--formatter TAP::Formatter::JUnit' >> .proverc
          make pricing
        name: Pricing
    - store_test_results:
        path: /var/tmp/test-output
  schema:
    <<: *6
    steps:
    - *1
    - *2
    - *3
    - *4
    - *check_services
    - run:
        <<: *5
        command: |
          echo '--formatter TAP::Formatter::JUnit' >> .proverc
          make schema
        name: Schema tests
    - store_test_results:
        path: /var/tmp/test-output
  security:
    <<: *6
    steps:
    - *1
    - *2
    - *3
    - *4
    - *check_services
    - run:
        <<: *5
        command: |
          echo '--formatter TAP::Formatter::JUnit' >> .proverc
          make security
        name: Security handling
    - store_test_results:
        path: /var/tmp/test-output
  structure:
    <<: *6
    steps:
    - *1
    - *2
    - *3
    - *4
    - *check_services
    - run:
        <<: *5
        command: |
          echo '--formatter TAP::Formatter::JUnit' >> .proverc
          make structure
        name: Code structure and syntax
    - run:
        command: make unit
        name: unit tests
    - store_test_results:
        path: /var/tmp/test-output
  subscriptions:
    <<: *6
    steps:
    - *1
    - *2
    - *3
    - *4
    - *check_services
    - run:
        <<: *5
        command: |
          echo '--formatter TAP::Formatter::JUnit' >> .proverc
          make subscriptions
        name: Run subscription tests
    - store_test_results:
        path: /var/tmp/test-output
  backends:
    <<: *6
    steps:
    - *1
    - *2
    - *3
    - *4
    - *check_services
    - run:
        <<: *5
        command: |
          echo '--formatter TAP::Formatter::JUnit' >> .proverc
          make backends
        name: Run backends tests
    - store_test_results:
        path: /var/tmp/test-output
  update_docs:
    <<: *6
    steps:
    - *1
    - *2
    - run:
        <<: *5
        command: |
          script/websocket_schema_update.sh
        name: Update developer.binary.com schema documentation
  code_coverage:
    <<: *6
    <<: *5
    steps:
    - *1
    - *2
    - *3
    - *4
    - *check_services
    - run:
        command: make cover
        name: code cover tests
    - run:
        command: make cover_websocket_tests sub_test=schema_suite
        name: schema_suite tests
    - run:
        command: make cover_websocket_tests sub_test=security
        name: security tests
    - run:
        command: make cover_websocket_tests sub_test=accounts
        name: accounts tests
    - run:
        command: make cover_websocket_tests sub_test=misc
        name: misc tests
    - run:
        command: make cover_websocket_tests sub_test=p2p
        name: p2p tests
    - run:
        command: make cover_websocket_tests sub_test=pricing
        name: pricing tests
    - run:
        command: make cover_websocket_tests sub_test=backends
        name: backends tests
    - run:
        name: upload coverage report
        command: cover -report coveralls
  unit:
    <<: *6
    steps:
    - *1
    - *2
    - run:
        <<: *5
        command: |
          echo '--formatter TAP::Formatter::JUnit' >> .proverc
          make unit
        name: Run Unit tests
    - store_test_results:
        path: /var/tmp/test-output
version: 2
workflows:
  build-workflow:
    jobs: &all-jobs
    - structure:
        context: perl
    - accounts:
        context: perl
    - security:
        context: perl
    - pricing:
        context: perl
    - misc:
        context: perl
    - p2p:
        context: perl
    - schema:
        context: perl
    - subscriptions:
        context: perl
    - backends:
        context: perl
    - update_docs:
        context: perl
        filters:
          branches:
            only:
            - master
  daily:
    jobs: *all-jobs
    triggers:
    - schedule:
        cron: 36 20 * * *
        filters:
          branches:
            only:
            - master
  weekly-code-coverage:
    jobs:
    - code_coverage:
        context: perl
    triggers:
    - schedule:
        cron: 30 7 * * 6
        filters:
          branches:
            only:
            - master
  version: 2
