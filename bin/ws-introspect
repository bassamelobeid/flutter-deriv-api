#!/usr/bin/env perl
use strict;
use warnings;

use Getopt::Long;
use Data::Dumper;

# load this file to force MOJO::JSON to use JSON::MaybeXS
use MOJO::JSON::MaybeXS;

use JSON::MaybeXS;
use Time::HiRes ();

use Binary::WebSocketAPI::v3::Instance::Redis qw(ws_redis_master);

my $redis = ws_redis_master() or die 'no redis connection';
my ($cmd, @args) = @ARGV;
die 'no command' unless $cmd;

my $json = JSON::MaybeXS->new->pretty(1);

$redis->on(
    message => sub {
        my ($redis, $msg, $channel) = @_;
        warn "response: " . Dumper($msg);
    },
);
$redis->subscribe(
    ['introspection_response'],
    sub {
        warn "subscribed";
	my $id = Time::HiRes::time() . '-' . rand();

	$redis->publish(
	    introspection => Encode::encode_utf8(
		$json->encode({
		    command => $cmd,
		    args    => \@args,
		    id      => $id,
		    channel => 'introspection_response',
		})
	    ),
	    sub {
		warn "published";
	    }
	);
	Mojo::IOLoop->timer(5 => sub { warn "done" });
    }
);

Mojo::IOLoop->start unless Mojo::IOLoop->is_running;

