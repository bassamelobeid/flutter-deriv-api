#!/etc/rmg/bin/perl
use Mojo::Base -strict;
no indirect;

use FindBin qw/$Bin/;
use lib "$Bin/../lib";
# load this file to force Mojo::JSON to use JSON::MaybeXS
use Mojo::JSON::MaybeXS;
use Mojo::JSON 'encode_json';
use YAML::XS;
use Mojo::Redis2;
use Encode;
use Getopt::Long qw(GetOptions :config no_auto_abbrev no_ignore_case);
use Try::Tiny;

use Binary::WebSocketAPI::v3::Instance::Redis 'ws_redis_master';
use BOM::Platform::Context 'localize';

STDOUT->autoflush(1);

my $send_notification = 1;
GetOptions(
    'send-notifications!' => \$send_notification,
    'h|help'              => \my $help,
);
my ($status, $message) = @ARGV;

die <<"EOF" if (!($status || $message) || $status !~ /up|down/i || $help);
usage: $0 [--no-send-notifications] STATUS MESSAGE
These options are available:
      --no-send-notifications    Do not send notifications
  -h, --help                     Show this message.

STATUS is either "up" or "down".

MESSAGE to set can be a keyword from the following: "release_due",
"suspended", "unstable", "feed_issues", "mt5_issues", "cashier_issues".
This will use a preset localized message for the chosen keyword to use
for the site status message.  If the keyword is unrecognized, the
keyword will be used directly in the site status message.
EOF

# Read our preset messages at the end of this script.
# XXX: move off to a module very soon
my %status_codes = do {
    local $/ = "\n\n";
    map { split /\n/ } <DATA>;
};
$message = localize($status_codes{$message}) || $message if $message;

my $channel_name = "NOTIFY::broadcast::channel";
my $state_key    = "NOTIFY::broadcast::state";
my $is_on_key    = "NOTIFY::broadcast::is_on";     ### TODO: to config

my $redis = ws_redis_master() or die 'no redis connection';
try {
    $redis->on(
        error => sub {
            my ($self, $err) = @_;
            warn "ws write redis error: $err";
        });

    $redis->set($is_on_key, $send_notification);

    my $mess_obj = Encode::encode_utf8(
        encode_json({
                site_status => $status,
                ($message ? (message => $message) : ())}));
    $redis->set($state_key, $mess_obj);

    my $count = $redis->publish($channel_name, $mess_obj);
    my $sent = $send_notification ? 'sent' : 'not sent';
    say "Status: $status; notifications $sent to $count subscribers";
    exit;
}
catch {
    say STDERR "Failed setting status and/or notification: $_";
    exit 255;
};

__END__
release_due
We are updating our site in a short while. Some services may be temporarily unavailable.

suspended
Sorry, but trading is unavailable until further notice due to an unexpected error. Please try again later.

feed_issues
We are having an issue with one or more of our data feeds. We are working to resolve the issue but some markets may be unavailable for the time being.

mt5_issues
Sorry, but we are having a technical issue with our MT5 platform. Trading is unavailable for the time being.

cashier_issues
Sorry, but we are experiencing a technical issue with our Cashier. Your funds are safe but deposits and withdrawals are unavailable for the time being.

unstable
We are experiencing an unusually high load on our system. Some features and services may be unstable or temporarily unavailable. We hope to resolve this issue as soon as we can.
