#!/etc/rmg/bin/perl

=encoding utf-8

=head1 NAME

ws-status - set C<website_status>

=head1 SYNOPSIS

    ws-status [--no-send-notifications] STATUS MESSAGE

=head1 OPTIONS

=over 8

=item B<--no-send-notifications>

Set a notification, but do not broadcast it immediately to listeners.

=item B<--help>

Show this help message.

=back

=head1 DESCRIPTION

This script allows setting of the Binary.com WebSocket API's
L<website_status|https://developers.binary.com/api/#website_status>.
Setting the status will by default also send updates to any listening
clients.

I<STATUS> is either C<up> or C<down>.

I<MESSAGE> to set can be a keyword from the following: C<release_due>,
C<suspended>, C<unstable>, C<feed_issues>, C<mt5_issues>, or
C<cashier_issues>.  This will use a preset localized message for the
chosen keyword to use for the site status message.

=cut

use strict;
use warnings;
no indirect;

use Getopt::Long qw(GetOptions :config no_auto_abbrev no_ignore_case);
use Pod::Usage;
use JSON::MaybeUTF8 'encode_json_utf8';
use Syntax::Keyword::Try;

use Binary::WebSocketAPI::v3::Instance::Redis 'ws_redis_master';

my $send_notification = 1;
GetOptions(
    'send-notifications!' => \$send_notification,
    'h|help'              => \my $help,
);
my ($status, $message) = @ARGV;

pod2usage(1) if (!($status || $message) || $status !~ /up|down/i || $help);

my $channel_name = "NOTIFY::broadcast::channel";
my $state_key    = "NOTIFY::broadcast::state";
my $is_on_key    = "NOTIFY::broadcast::is_on";     ### TODO: to config

my $redis = ws_redis_master() or die 'no redis connection';
try {
    $redis->set($is_on_key, $send_notification);

    my $mess_obj = {site_status => $status};
    $mess_obj->{message} = $message if $message;
    $mess_obj = encode_json_utf8($mess_obj);

    $redis->set($state_key, $mess_obj);

    my $count = $redis->publish($channel_name, $mess_obj);
    my $sent = $send_notification ? 'sent' : 'not sent';
    print "Status: $status; notifications $sent to $count subscribers\n";
    exit;
}
catch ($e) {
    warn "Failed setting status and/or notification: $e\n";
    exit 255;
};
