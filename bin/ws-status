#!/etc/rmg/bin/perl
use feature ':5.10';
use strict;
use warnings;
no indirect;

use JSON::MaybeUTF8 'encode_json_utf8';
use Getopt::Long qw(GetOptions :config no_auto_abbrev no_ignore_case);
use Try::Tiny;

use Binary::WebSocketAPI::v3::Instance::Redis 'ws_redis_master';

my $send_notification = 1;
GetOptions(
    'send-notifications!' => \$send_notification,
    'h|help'              => \my $help,
);
my ($status, $message) = @ARGV;

die <<"EOF" if (!($status || $message) || $status !~ /up|down/i || $help);
usage: $0 [--no-send-notifications] STATUS MESSAGE
These options are available:
      --no-send-notifications    Do not send notifications
  -h, --help                     Show this message.

STATUS is either "up" or "down".

MESSAGE to set can be a keyword from the following: "release_due",
"suspended", "unstable", "feed_issues", "mt5_issues", "cashier_issues".
This will use a preset localized message for the chosen keyword to use
for the site status message.
EOF

my $channel_name = "NOTIFY::broadcast::channel";
my $state_key    = "NOTIFY::broadcast::state";
my $is_on_key    = "NOTIFY::broadcast::is_on";     ### TODO: to config

my $redis = ws_redis_master() or die 'no redis connection';
try {
    $redis->set($is_on_key, $send_notification);

    my $mess_obj = {site_status => $status};
    $mess_obj->{message} = $message if $message;

    $redis->set($state_key, encode_json_utf8($mess_obj));

    my $count = $redis->publish($channel_name, $mess_obj);
    my $sent = $send_notification ? 'sent' : 'not sent';
    say "Status: $status; notifications $sent to $count subscribers";
    exit;
}
catch {
    say STDERR "Failed setting status and/or notification: $_";
    exit 255;
};
