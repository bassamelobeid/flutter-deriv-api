package BOM::Platform::Client::PaymentAgent;

use strict;
use warnings;

use BOM::Platform::Context;
use base 'BOM::Database::AutoGenerated::Rose::PaymentAgent';

# By drawing on Client's constructor we first prove the
# client record exists and we also benefit from the
# broker-savvy db connection handling there.
sub new {
    my ($class, @args) = @_;
    my $client = BOM::Platform::Client->new(@args) || return;
    my $self   = $client->payment_agent            || return;
    return bless $self, $class;
}

# Save to default writable place, unless explicitly set by caller..
sub save {
    my ($self, %args) = @_;
    $self->set_db(delete($args{set_db}) || 'write');

    if (my $bo_cookie = BOM::Platform::Context::request()->bo_cookie) {
        $self->{STAFF_INFO}->{STAFF_NAME} = $bo_cookie->clerk;
    } else {
        $self->{STAFF_INFO}->{STAFF_NAME} = BOM::Platform::Context::request()->loginid;
    }
    $self->{STAFF_INFO}->{STAFF_IP} = BOM::Platform::Context::request()->client_ip;

    return $self->SUPER::save(%args);
}

# Promote my client pointer to the smarter version of client..
sub client {
    my $self = shift;
    return bless $self->SUPER::client, 'BOM::Platform::Client';
}

1;
