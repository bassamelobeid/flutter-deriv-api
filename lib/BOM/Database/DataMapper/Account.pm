package BOM::Database::DataMapper::Account;

=head1 NAME

BOM::Database::DataMapper::Account

=head1 DESCRIPTION

This is a class that will collect general account queries.

=head1 VERSION

0.1

=cut

use Moose;
use Date::Utility;

use BOM::Database::AutoGenerated::Rose::Account::Manager;
use BOM::Database::Model::Account;
extends 'BOM::Database::DataMapper::AccountBase';

has '_mapper_model_class' => (
    is       => 'ro',
    isa      => 'Str',
    init_arg => undef,
    default  => 'BOM::Database::Model::Account',
);

=head1 METHODS

=over

=item get_balance

get balance of account

=cut

sub get_balance {
    my $self = shift;

    my $currency       = $self->currency_code;
    my $account_record = BOM::Database::AutoGenerated::Rose::Account::Manager->get_account(
        query => [
            client_loginid => $self->client_loginid,
            currency_code  => $currency
        ],
        db => $self->db,
    );

    return 0 unless @$account_record;
    return $account_record->[0]->balance;
}

=item get_total_trades_income

get account's profit or loss earned from total trades

=cut

sub get_total_trades_income {
    my ($self, $args) = @_;
    my ($from_date, $to_date) = @{$args}{'from', 'to'};

    $from_date //= '1970-01-01 00:00:00';
    $to_date   //= Date::Utility->new()->datetime;

    my $dbic   = $self->db->dbic;
    my $result = $dbic->run(
        fixup => sub {
            $_->selectrow_arrayref('SELECT * FROM get_close_trades_profit_or_loss(?,?,?,?)',
                undef, $self->account->id, $self->currency_code, $from_date, $to_date);
        },
    );

    return $result->[0] // '0.00';
}

no Moose;
__PACKAGE__->meta->make_immutable;

=back

=head1 AUTHOR

RMG Company

=head1 COPYRIGHT

(c) 2010 RMG Technology (Malaysia) Sdn Bhd

=cut

1;
