package BOM::Database::DataMapper::Payment::Epg;

use Moose;
use BOM::Database::AutoGenerated::Rose::Epg::Manager;
extends 'BOM::Database::DataMapper::Payment';

has '_mapper_required_objects' => (
    is       => 'ro',
    isa      => 'ArrayRef[Str]',
    init_arg => undef,
    default  => sub { return ['epg'] },
);

=item is_duplicate_payment

Check the trace_id, transaction_id of payments to find duplicate, used during EPG validation

=cut

sub is_duplicate_payment {
    my $self = shift;
    my $args = shift;

    my $payment = BOM::Database::AutoGenerated::Rose::Epg::Manager->get_epg(
        require_objects => ['payment'],
        query           => [
            transaction_type => $args->{transaction_type},
            or               => [
                trace_id       => $args->{trace_id},
                transaction_id => $args->{transaction_id} // ''
            ]
        ],
        db => $self->db,
    );
    if (scalar @{$payment}) {
        return 1;
    }

    return;
}

no Moose;
__PACKAGE__->meta->make_immutable;

1;

=head1 NAME

BOM::Database::DataMapper::Payment::Epg

=cut
