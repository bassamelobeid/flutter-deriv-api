package BOM::Database::DataMapper::Payment::FreeGift;

use Moose;
use BOM::Database::AutoGenerated::Rose::FreeGift;
use BOM::Database::AutoGenerated::Rose::FreeGift::Manager;
use Try::Tiny;
extends 'BOM::Database::DataMapper::Payment';

=head1 METHODS

=over

=item get_clients_with_only_one_freegift_transaction_and_inactive

    return loginid, currency_code, balance and free_gift and freegift transaction time of clients that haven't used freegift

=back

=cut

sub get_clients_with_only_one_freegift_transaction_and_inactive {
    my $self        = shift;
    my $dbic        = $self->db->dbic;
    my $broker_code = $self->broker_code;
    my $before_than = shift;
    $before_than = $before_than->datetime_yyyymmdd_hhmmss;

    my $sql = q{
        SELECT 
            client_loginid, 
            currency_code,
            balance,
            transaction_time,
            amount
        FROM 
            transaction.account a 
            INNER JOIN transaction.transaction t 
            ON a.id = t.account_id 
        WHERE 
            account_id in ( 
                            -- Be sure that clients have one txn
                            SELECT 
                                account_id 
                            FROM 
                                transaction.transaction 
                            WHERE  
                                account_id in (  
                                    SELECT 
                                        account_id 
                                    FROM 
                                        payment.payment 
                                    WHERE 
                                        payment_gateway_code = 'free_gift' 
                                    GROUP BY 
                                        account_id  
                                    HAVING 
                                        MAX(payment_time) <= ? 
                                    )  
                            GROUP BY 
                                account_id 
                            HAVING 
                                COUNT(*) =1 
                          )  
            AND client_loginid LIKE ? ;
           };

    my @no_used_gift_clients;
    try {
        $dbic->run(
            sub {
                local $_->{'RaiseError'} = 1;

                my $sth = $_->prepare($sql);
                my @bind_value = ($before_than, $broker_code . "%");
                $sth->execute(@bind_value);

                while (my $txn_hashref = $sth->fetchrow_hashref) {
                    push @no_used_gift_clients, $txn_hashref;
                }
            });
    }
    catch {
        Carp::croak("BOM::Database::DataMapper::Payment::FreeGift -  [$_]");
    };

    return \@no_used_gift_clients;
}
no Moose;
__PACKAGE__->meta->make_immutable;

1;

=pod

=head1 NAME

BOM::Database::DataMapper::Payment::FreeGift

=head1 DESCRIPTION

This is a class that collects free gift queries.

=head1 SYNOPSIS

This is a class that will collect free gift . payment subrotines that are not defined in here will return the results by joining them with free gift table so they will become queries about free gift only.

=head1 VERSION

0.1

=head1 AUTHOR

RMG Company

=cut
