package BOM::Database::AutoGenerated::Rose::CryptocurrencyHistory;

use strict;

use base qw(BOM::Database::Rose::DB::Object::AutoBase1);

__PACKAGE__->meta->setup(
    table   => 'cryptocurrency_history',
    schema   => 'payment',

    columns => [
        id     => { type => 'bigint' },
        status => { type => 'enum', check_in => [ 'NEW', 'PENDING', 'CONFIRMED', 'LOCKED', 'VERIFIED', 'REJECTED', 'PROCESSING', 'SENT', 'ERROR', 'RESOLVED', 'PERFORMING_BLOCKCHAIN_TXN', 'MIGRATED', 'APPROVING_BLOCKCHAIN_TXN' ], db_type => 'payment.ctc_status', not_null => 1 },
        tmstmp => { type => 'timestamp', default => 'now()' },
    ],

    primary_key_columns => [ 'status', 'tmstmp', 'id' ],

    allow_inline_column_values => 1,

    foreign_keys => [
        cryptocurrency => {
            class       => 'BOM::Database::AutoGenerated::Rose::Cryptocurrency',
            key_columns => { id => 'id' },
        },
    ],
);

1;

