package BOM::RiskReporting::Client;

=head1 NAME

BOM::RiskReporting::Client

=head1 DESCRIPTION

Generates a client risk report

=cut

use strict;
use warnings;
use Moose;
extends 'BOM::RiskReporting::Base';
use BOM::Platform::User;

use Excel::Writer::XLSX;
use File::Temp qw(tmpnam);

has client => (
    is => 'rw',
);

has workbook => (
    is => 'rw',
    lazy_build => 1,
);

sub _build_workbook {
    my $self = shift;
    return Excel::Writer::XLSX->new($self->_workbook_file);
}

has _workbook_file => (
    is => 'rw',
    default => sub {return tmpnam() . '.xlsx'}
);


sub _client_details {
    my $self = shift;

    my $worksheet = $self->workbook->add_worksheet('client details');

    my $count = 1;
    for my $key (BOM::Database::AutoGenerated::Rose::Client->meta->column_names) {
        next if $key =~ /(client_password|secret_answer)/;
        $worksheet->write( $count, 0, $key );
        $worksheet->write( $count, 1, $self->client->$key );
        $count++;
    }

    return;
}

sub _documents_on_file {
    my $self = shift;

    my $worksheet = $self->workbook->add_worksheet('documents on file');

    my $today = Date::Utility->today;
    my @docs  = $self->client->client_authentication_document or return;
    my $count = 1;
    for my $doc (@docs) {
        $worksheet->write( $count, 0, $doc->document_type || '' );
        $worksheet->write( $count, 1, $doc->document_format || '' );
        $worksheet->write( $count, 2, $doc->document_path || '' );
        $worksheet->write( $count, 3, $doc->expiration_date || 'none' );
        $worksheet->write( $count, 4, $doc->comments || 'none' );
        $count++;
    }

    return;
}

sub _change_of_country {
    my $self = shift;

    my $worksheet = $self->workbook->add_worksheet('change of country');

    my $user = BOM::Platform::User->new({email => $self->client->email});
    my $login_history = $user->find_login_history(
        sort_by => 'history_date',
    );
    my $count = 1;
    my $last_country='';
    for my $h (@$login_history) {
        if ($h->environment =~ /IP=([0-9a-z\.:]+) IP_COUNTRY=([A-Z]{1,3})/ and $last_country ne $2) {
            $last_country = $2;
            $worksheet->write( $count, 0, $h->history_date || '' );
            $worksheet->write( $count, 1, $1 || '' );
            $worksheet->write( $count, 2, $2 || '' );
            $worksheet->write( $count, 3, $h->environment || '' );
            $count++;
        }
    }

    return;
}

sub _change_of_status {
    my $self = shift;

    my $db_data = $self->_db->dbh->selectall_hashref(q{SELECT * FROM audit.client_status where client_loginid=? order by id}, 'id' , {}, $self->client->loginid);

    my $worksheet = $self->workbook->add_worksheet('change of status');

    my $count = 1;
    for my $key (sort keys %$db_data) {
        $worksheet->write( $count, 0, $db_data->{$key}->{last_modified_date} || '' );
        $worksheet->write( $count, 1, $db_data->{$key}->{staff_name} || '' );
        $worksheet->write( $count, 2, $db_data->{$key}->{status_code} || '' );
        $worksheet->write( $count, 3, $db_data->{$key}->{reason} || '' );
        $count++;
    }
    return;
}

sub generate {
    my $self = shift;

    $self->_client_details;
    # $self->_total_deposits_withdrawals;
    # $self->_deposit_withdrawal_systems;
    $self->_documents_on_file;
    #$self->_financial_assessment # not inlcuded based on discussion.
    $self->_change_of_country;
    $self->_change_of_status;
    # $self->_review_of_trades_bets;
    # $self->_comments;

    $self->workbook->close;
    return $self->_workbook_file;
}

no Moose;
__PACKAGE__->meta->make_immutable;
1;
