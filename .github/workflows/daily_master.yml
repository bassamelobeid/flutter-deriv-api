name: Daily master test
run-name: Daily test on master branch
env:
  PERL_TEST_HARNESS_DUMP_TAP: /tmp/test-output
on:
  schedule:
    - cron: '30 22 * * *'
jobs:
  syntax_unit:
    uses: regentmarkets/github-actions/.github/workflows/syntax_unit.yml@master
    secrets: inherit
  product_contract:
    runs-on: ubuntu-latest
    container:
      image: ${{ vars.DEBIAN_CI }}
      credentials:
        username: circle4regentmarkets
        password: ${{ secrets.DOCKER_PASSWORD }}
      options: --user nobody:nogroup
    defaults:
      run:
        shell: bash -le {0}
        working-directory: /home/git/${{ github.repository }}
    env:
      LOG_LEVEL: debug
    steps:
      - name: setup CI step
        uses: regentmarkets/github-actions/ci-setup@master
        with:
          read_github_ssh_key: ${{ secrets.READ_GITHUB_SSH_KEY }}
          repository: ${{ github.repository }}
      - name: Product contract test
        run:  |
          echo '--formatter TAP::Formatter::JUnit' >> .proverc
          make unit_test_product_contract
      - name: Update UID for nobody user
        uses: regentmarkets/github-actions/update-uid@master
      - name: Upload Test Results
        uses: actions/upload-artifact@26f96dfa697d77e81fd5907df203aa23a56210a8 #v4.3.0
        if: success() || failure()
        with:
          name: test-results-product_contract
          path: /tmp/test-output/**/*.xml
          retention-days: 1
  validation:
    runs-on: ubuntu-latest
    container:
      image: ${{ vars.DEBIAN_CI }}
      credentials:
        username: circle4regentmarkets
        password: ${{ secrets.DOCKER_PASSWORD }}
      options: --user nobody:nogroup
    defaults:
      run:
        shell: bash -le {0}
        working-directory: /home/git/${{ github.repository }}
    env:
      LOG_LEVEL: debug
    steps:
      - name: setup CI step
        uses: regentmarkets/github-actions/ci-setup@master
        with:
          read_github_ssh_key: ${{ secrets.READ_GITHUB_SSH_KEY }}
          repository: ${{ github.repository }}
      - name: Validation
        run:  |
          echo '--formatter TAP::Formatter::JUnit' >> .proverc
          make unit_test_validation
      - name: Update UID for nobody user
        uses: regentmarkets/github-actions/update-uid@master
      - name: Upload Test Results
        uses: actions/upload-artifact@26f96dfa697d77e81fd5907df203aa23a56210a8 #v4.3.0
        if: success() || failure()
        with:
          name: test-results-validation
          path: /tmp/test-output/**/*.xml
          retention-days: 1
  memory_test:
    runs-on: ubuntu-latest
    container:
      image: ${{ vars.DEBIAN_CI }}
      credentials:
        username: circle4regentmarkets
        password: ${{ secrets.DOCKER_PASSWORD }}
      options: --user nobody:nogroup
    defaults:
      run:
        shell: bash -le {0}
        working-directory: /home/git/${{ github.repository }}
    env:
      LOG_LEVEL: debug
    steps:
      - name: setup CI step
        uses: regentmarkets/github-actions/ci-setup@master
        with:
          read_github_ssh_key: ${{ secrets.READ_GITHUB_SSH_KEY }}
          repository: ${{ github.repository }}
      - name: MemoryTest
        run: |
          echo '--formatter TAP::Formatter::JUnit' >> .proverc
          make memory_test
      - name: Update UID for nobody user
        uses: regentmarkets/github-actions/update-uid@master
      - name: Upload Test Results
        uses: actions/upload-artifact@26f96dfa697d77e81fd5907df203aa23a56210a8 #v4.3.0
        if: success() || failure()
        with:
          name: test-results-memory_test
          path: /tmp/test-output/**/*.xml
          retention-days: 1
  pricing:
    runs-on: ubuntu-latest
    container:
      image: ${{ vars.DEBIAN_CI }}
      credentials:
        username: circle4regentmarkets
        password: ${{ secrets.DOCKER_PASSWORD }}
      options: --user nobody:nogroup
    defaults:
      run:
        shell: bash -le {0}
        working-directory: /home/git/${{ github.repository }}
    env:
      LOG_LEVEL: debug
    steps:
      - name: setup CI step
        uses: regentmarkets/github-actions/ci-setup@master
        with:
          read_github_ssh_key: ${{ secrets.READ_GITHUB_SSH_KEY }}
          repository: ${{ github.repository }}
      - name: Pricing
        run: |
          echo '--formatter TAP::Formatter::JUnit' >> .proverc
          make unit_test_pricing
      - name: Update UID for nobody user
        uses: regentmarkets/github-actions/update-uid@master
      - name: Upload Test Results
        uses: actions/upload-artifact@26f96dfa697d77e81fd5907df203aa23a56210a8 #v4.3.0
        if: success() || failure()
        with:
          name: test-results-pricing
          path: /tmp/test-output/**/*.xml
          retention-days: 1
  product_others:
    runs-on: ubuntu-latest
    container:
      image: ${{ vars.DEBIAN_CI }}
      credentials:
        username: circle4regentmarkets
        password: ${{ secrets.DOCKER_PASSWORD }}
      options: --user nobody:nogroup
    defaults:
      run:
        shell: bash -le {0}
        working-directory: /home/git/${{ github.repository }}
    env:
      LOG_LEVEL: debug
    steps:
      - name: setup CI step
        uses: regentmarkets/github-actions/ci-setup@master
        with:
          read_github_ssh_key: ${{ secrets.READ_GITHUB_SSH_KEY }}
          repository: ${{ github.repository }}
      - name: Enable Test Report Generation
        run: echo '--formatter TAP::Formatter::JUnit' >> .proverc     
      - name: Product extended
        run: make unit_test_product_contract_extended
      - name: Product base
        run: make unit_test_product_base
        if: always()
      - name: Product model
        run: make unit_test_product_model
        if: always()
      - name: Valatility
        run: make unit_test_volatility
        if: always()
      - name: Offerings
        run: make unit_test_offerings
        if: always()
      - name: Update UID for nobody user
        uses: regentmarkets/github-actions/update-uid@master
      - name: Upload Test Results
        uses: actions/upload-artifact@26f96dfa697d77e81fd5907df203aa23a56210a8 #v4.3.0
        if: always()
        with:
          name: test-results-product_others
          path: /tmp/test-output/**/*.xml
          retention-days: 1
  benchmark_merlin_ovra:
    runs-on: ubuntu-latest
    container:
      image: ${{ vars.DEBIAN_CI }}
      credentials:
        username: circle4regentmarkets
        password: ${{ secrets.DOCKER_PASSWORD }}
      options: --user nobody:nogroup
    defaults:
      run:
        shell: bash -le {0}
        working-directory: /home/git/${{ github.repository }}
    env:
      LOG_LEVEL: debug
    steps:
      - name: setup CI step
        uses: regentmarkets/github-actions/ci-setup@master
        with:
          read_github_ssh_key: ${{ secrets.READ_GITHUB_SSH_KEY }}
          repository: ${{ github.repository }}
      - name: Merlin Benchmark
        run: |
          cd /home/git/regentmarkets/bom-quant-benchmark
          make merlin_benchmark
      - name: OVRA benchmark
        run: |
          cd /home/git/regentmarkets/bom-quant-benchmark
          make OVRA_benchmark
        if: always()
  benchmark_SD:
    runs-on: ubuntu-latest
    container:
      image: ${{ vars.DEBIAN_CI }}
      credentials:
        username: circle4regentmarkets
        password: ${{ secrets.DOCKER_PASSWORD }}
      options: --user nobody:nogroup
    defaults:
      run:
        shell: bash -le {0}
        working-directory: /home/git/regentmarkets/bom-quant-benchmark
    env:
      LOG_LEVEL: debug
    steps:
      - name: setup CI step
        uses: regentmarkets/github-actions/ci-setup@master
        with:
          read_github_ssh_key: ${{ secrets.READ_GITHUB_SSH_KEY }}
          repository: ${{ github.repository }}
      - name: SDFX benchmark major
        run: make SDFX_benchmark_major
        if: always()
      - name: SDFX benchmark minor
        run: make SDFX_benchmark_minor
        if: always()
      - name: SDEQ benchmark OTC_DJI
        run: make SDEQ_benchmark_OTC_DJI
        if: always()
      - name: SDEQ benchmark OTC_FCHI
        run: make SDEQ_benchmark_OTC_FCHI
        if: always()
      - name: SDEQ benchmark OTC_SPC
        run: make SDEQ_benchmark_OTC_SPC
        if: always()
      - name: SDEQ benchmark SSECOMP
        run: make SDEQ_benchmark_SSECOMP
        if: always()
      - name: SDEQ benchmark OTC_FTSE
        run: make SDEQ_benchmark_OTC_FTSE
        if: always()
  Pricing-Engine-Tests:
    runs-on: ubuntu-latest
    container:
      image: ${{ vars.DEBIAN_CI }}
      credentials:
        username: circle4regentmarkets
        password: ${{ secrets.DOCKER_PASSWORD }}
      options: --user nobody:nogroup
    defaults:
      run:
        shell: bash -le {0}
        working-directory: /home/git/${{ github.repository }}
    env:
      LOG_LEVEL: debug
    steps:
      - name: setup CI step
        uses: regentmarkets/github-actions/ci-setup@master
        with:
          read_github_ssh_key: ${{ secrets.READ_GITHUB_SSH_KEY }}
          repository: ${{ github.repository }}
      - name: perl-Pricing-Engine-European-Digital-Slope
        run: |
          cd /home/git/regentmarkets/perl-Pricing-Engine-European-Digital-Slope
          make test
      - name: perl-Pricing-Engine-BlackScholes
        run: |
          cd /home/git/regentmarkets/perl-Pricing-Engine-BlackScholes
          make test
        if: always()
      - name: perl-Pricing-Engine-Digits
        run: |
          cd /home/git/regentmarkets/perl-Pricing-Engine-Digits
          make test
        if: always()
      - name: perl-Pricing-Engine-HighLow-Ticks
        run: |
          cd /home/git/regentmarkets/perl-Pricing-Engine-HighLow-Ticks
          make test
        if: always()
      - name: perl-Pricing-Engine-Intraday-Forex-Base
        run: |
          cd /home/git/regentmarkets/perl-Pricing-Engine-Intraday-Forex-Base
          make test
        if: always()
      - name: perl-Pricing-Engine-Lookback
        run: |
          cd /home/git/regentmarkets/perl-Pricing-Engine-Lookback
          make test
        if: always()
      - name: perl-Pricing-Engine-Markup
        run: |
          cd /home/git/regentmarkets/perl-Pricing-Engine-Markup
          make test
        if: always()
      - name: perl-Pricing-Engine-Reset
        run: |
          cd /home/git/regentmarkets/perl-Pricing-Engine-Reset
          make test
        if: always()
      - name: perl-Pricing-Engine-TickExpiry
        run: |
          cd /home/git/regentmarkets/perl-Pricing-Engine-TickExpiry
          make test
        if: always()
  publish_test_results:
    needs: [ product_others , pricing , memory_test , validation , product_contract ]
    if: success() || failure()
    runs-on: ubuntu-latest
    steps:
      - 
        name: Upload results to DataDog
        uses: regentmarkets/github-actions/datadog-publish@master
        with: 
          datadog-api-key: ${{ secrets.DD_PROD_CI_API_KEY }}
          service-name: bom
