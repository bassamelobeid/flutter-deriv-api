name: Build workflow
run-name: Build workflow
on:
  workflow_dispatch:
  push:
    branches:
      - master
    tags:
      - '*'
  pull_request:
jobs:
  check-git-message:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - run: |
          echo "${{ github.event_name}} ${{ github.ref_name }}"
          if [[ "${{ github.event_name }}" == "pull_request" && "${{ github.ref_name }}" != "master" ]]; then
            git fetch --depth 1 origin ${{ github.event.pull_request.head.sha }}
            GIT_COMMIT_DESC="$(git log --format=oneline -n 1 ${{ github.event.pull_request.head.sha }})";
            echo "commit message: $GIT_COMMIT_DESC";
            if echo $GIT_COMMIT_DESC | grep -E "\[\s*\bci\b.*]"; then exit 0; else echo "need tag [ci] to trigger tests"; exit 1; fi
          else
            echo "This is not a pull request, Branch: $CIRCLE_BRANCH"
            exit 0
          fi
        name: Check git message if it contains the keyword [ci]
        # TODO maybe not work, should check again
  core_syntax_diff:
    needs: check-git-message
    runs-on: ubuntu-latest
    container:
      image: regentmarkets/debian-ci:stable
      credentials:
        username: circle4regentmarkets
        password: ${{ secrets.DOCKER_PASSWORD }}
      options: --user nobody:nogroup
    defaults:
      run:
        shell: bash -le {0}
        working-directory: /home/git/${{github.repository}}
    env:
      LOG_LEVEL: debug
    steps:
      - name: setup CI step
        uses: .github/actions/ci-setup
      - name: create ssh file
        run: |
          mkdir ~/.ssh
          chmod 700 ~/.ssh
          echo "${{ secrets.READ_GITHUB_SSH_KEY }}" >> ~/.ssh/github.com.rsa
          chmod 600 ~/.ssh/github.com.rsa
          cat ~/.ssh/github.com.rsa
          md5sum ~/.ssh/github.com.rsa
      - name: add ssh key
        run: |
          ssh-add ~/.ssh/github.com.rsa
          # TODO set .ssh/config
      - name: prepare-test
        run: |
          /opt/circle/prepare-test.sh
      - name: Start services
        run: |
          start_services
          touch /tmp/services.ready
      - run: |
          count=0
          while [ ! -f /tmp/services.ready ]; do
              echo 'Still waiting for services...'
              (( count++ )) && (( count >= 20 )) && break
              sleep 1
          done
        name: Wait for services to start up
      - name: Core tests
        run: |
          make test
      - name: Code structure and syntax
        run: make syntax_diff
      - name: unit tests
        run: make unit
