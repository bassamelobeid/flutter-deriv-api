name: Build workflow
run-name: Build workflow
on:
  workflow_dispatch:
  push:
    branches:
      - master
    tags:
      - '*'
  pull_request:
  workflow_call:
    inputs:
      repository:
        description: 'Repository name for running tests'
        required: true
        type: string 
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{inputs.repository}}
  cancel-in-progress: true
jobs:
  check-git-message:
    runs-on: ubuntu-latest
    steps:
      - name: check git message
        uses: regentmarkets/github-actions/check-git-message@master
  structure:
    needs: check-git-message
    runs-on: ubuntu-latest
    container:
      image: regentmarkets/debian-ci:nihal
      credentials:
        username: circle4regentmarkets
        password: ${{ secrets.DOCKER_PASSWORD }}
      options: --user nobody:nogroup
    defaults:
      run:
        shell: bash -le {0}
        working-directory: /home/git/${{inputs.repository || github.repository}}
    env:
      LOG_LEVEL: debug
      RPC_CONFIG: /home/git/regentmarkets/bom-rpc/rpc.conf.travis
      WEBSOCKET_CONFIG: /home/git/regentmarkets/binary-websocket-api/websocket.conf.example
    steps:
      - name: setup CI step
        uses: regentmarkets/github-actions/ci-setup@dev
        with:
          read_github_ssh_key: ${{ secrets.READ_GITHUB_SSH_KEY }}
          write_github_ssh_key: ${{ secrets.WRITE_GITHUB_SSH_KEY }}
          repository: ${{inputs.repository || github.repository}}
      - name: Code structure and syntax
        run: make structure
      - name: unit tests
        run: make unit
  accounts:
    needs: check-git-message
    runs-on: ubuntu-latest
    container:
      image: regentmarkets/debian-ci:nihal
      credentials:
        username: circle4regentmarkets
        password: ${{ secrets.DOCKER_PASSWORD }}
      options: --user nobody:nogroup
    defaults:
      run:
        shell: bash -le {0}
        working-directory: /home/git/${{inputs.repository || github.repository}}
    env:
      LOG_LEVEL: debug
      RPC_CONFIG: /home/git/regentmarkets/bom-rpc/rpc.conf.travis
      WEBSOCKET_CONFIG: /home/git/regentmarkets/binary-websocket-api/websocket.conf.example
    steps:
      - name: setup CI step
        uses: regentmarkets/github-actions/ci-setup@dev
        with:
          read_github_ssh_key: ${{ secrets.READ_GITHUB_SSH_KEY }}
          write_github_ssh_key: ${{ secrets.WRITE_GITHUB_SSH_KEY }}
          repository: ${{inputs.repository || github.repository}}
      - name: Accounts-related functionality
        run: make accounts
  security:
    needs: check-git-message
    runs-on: ubuntu-latest
    container:
      image: regentmarkets/debian-ci:nihal
      credentials:
        username: circle4regentmarkets
        password: ${{ secrets.DOCKER_PASSWORD }}
      options: --user nobody:nogroup
    defaults:
      run:
        shell: bash -le {0}
        working-directory: /home/git/${{inputs.repository || github.repository}}
    env:
      LOG_LEVEL: debug
      RPC_CONFIG: /home/git/regentmarkets/bom-rpc/rpc.conf.travis
      WEBSOCKET_CONFIG: /home/git/regentmarkets/binary-websocket-api/websocket.conf.example
    steps:
      - name: setup CI step
        uses: regentmarkets/github-actions/ci-setup@dev
        with:
          read_github_ssh_key: ${{ secrets.READ_GITHUB_SSH_KEY }}
          write_github_ssh_key: ${{ secrets.WRITE_GITHUB_SSH_KEY }}
          repository: ${{inputs.repository || github.repository}}
      - name: Security handling
        run: make security
  pricing:
    needs: check-git-message
    runs-on: ubuntu-latest
    container:
      image: regentmarkets/debian-ci:nihal
      credentials:
        username: circle4regentmarkets
        password: ${{ secrets.DOCKER_PASSWORD }}
      options: --user nobody:nogroup
    defaults:
      run:
        shell: bash -le {0}
        working-directory: /home/git/${{inputs.repository || github.repository}}
    env:
      LOG_LEVEL: debug
      RPC_CONFIG: /home/git/regentmarkets/bom-rpc/rpc.conf.travis
      WEBSOCKET_CONFIG: /home/git/regentmarkets/binary-websocket-api/websocket.conf.example
    steps:
      - name: setup CI step
        uses: regentmarkets/github-actions/ci-setup@dev
        with:
          read_github_ssh_key: ${{ secrets.READ_GITHUB_SSH_KEY }}
          write_github_ssh_key: ${{ secrets.WRITE_GITHUB_SSH_KEY }}
          repository: ${{inputs.repository || github.repository}}
      - name: Pricing
        run: make pricing
  misc:
    needs: check-git-message
    runs-on: ubuntu-latest
    container:
      image: regentmarkets/debian-ci:nihal
      credentials:
        username: circle4regentmarkets
        password: ${{ secrets.DOCKER_PASSWORD }}
      options: --user nobody:nogroup
    defaults:
      run:
        shell: bash -le {0}
        working-directory: /home/git/${{inputs.repository || github.repository}}
    env:
      LOG_LEVEL: debug
      RPC_CONFIG: /home/git/regentmarkets/bom-rpc/rpc.conf.travis
      WEBSOCKET_CONFIG: /home/git/regentmarkets/binary-websocket-api/websocket.conf.example
    steps:
      - name: setup CI step
        uses: regentmarkets/github-actions/ci-setup@dev
        with:
          read_github_ssh_key: ${{ secrets.READ_GITHUB_SSH_KEY }}
          write_github_ssh_key: ${{ secrets.WRITE_GITHUB_SSH_KEY }}
          repository: ${{inputs.repository || github.repository}}
      - name: Uncategorised tests
        run: make misc
  p2p:
    needs: check-git-message
    runs-on: ubuntu-latest
    container:
      image: regentmarkets/debian-ci:nihal
      credentials:
        username: circle4regentmarkets
        password: ${{ secrets.DOCKER_PASSWORD }}
      options: --user nobody:nogroup
    defaults:
      run:
        shell: bash -le {0}
        working-directory: /home/git/${{inputs.repository || github.repository}}
    env:
      LOG_LEVEL: debug
      RPC_CONFIG: /home/git/regentmarkets/bom-rpc/rpc.conf.travis
      WEBSOCKET_CONFIG: /home/git/regentmarkets/binary-websocket-api/websocket.conf.example
    steps:
      - name: setup CI step
        uses: regentmarkets/github-actions/ci-setup@dev
        with:
          read_github_ssh_key: ${{ secrets.READ_GITHUB_SSH_KEY }}
          write_github_ssh_key: ${{ secrets.WRITE_GITHUB_SSH_KEY }}
          repository: ${{inputs.repository || github.repository}}
      - name: Run P2P tests
        run: make p2p
  schema:
    needs: check-git-message
    runs-on: ubuntu-latest
    container:
      image: regentmarkets/debian-ci:nihal
      credentials:
        username: circle4regentmarkets
        password: ${{ secrets.DOCKER_PASSWORD }}
      options: --user nobody:nogroup
    defaults:
      run:
        shell: bash -le {0}
        working-directory: /home/git/${{inputs.repository || github.repository}}
    env:
      LOG_LEVEL: debug
      RPC_CONFIG: /home/git/regentmarkets/bom-rpc/rpc.conf.travis
      WEBSOCKET_CONFIG: /home/git/regentmarkets/binary-websocket-api/websocket.conf.example
    steps:
      - name: setup CI step
        uses: regentmarkets/github-actions/ci-setup@dev
        with:
          read_github_ssh_key: ${{ secrets.READ_GITHUB_SSH_KEY }}
          write_github_ssh_key: ${{ secrets.WRITE_GITHUB_SSH_KEY }}
          repository: ${{inputs.repository || github.repository}}
      - name: Schema tests
        run: make schema
  subscriptions:
    needs: check-git-message
    runs-on: ubuntu-latest
    container:
      image: regentmarkets/debian-ci:nihal
      credentials:
        username: circle4regentmarkets
        password: ${{ secrets.DOCKER_PASSWORD }}
      options: --user nobody:nogroup
    defaults:
      run:
        shell: bash -le {0}
        working-directory: /home/git/${{inputs.repository || github.repository}}
    env:
      LOG_LEVEL: debug
      RPC_CONFIG: /home/git/regentmarkets/bom-rpc/rpc.conf.travis
      WEBSOCKET_CONFIG: /home/git/regentmarkets/binary-websocket-api/websocket.conf.example
    steps:
      - name: setup CI step
        uses: regentmarkets/github-actions/ci-setup@dev
        with:
          read_github_ssh_key: ${{ secrets.READ_GITHUB_SSH_KEY }}
          write_github_ssh_key: ${{ secrets.WRITE_GITHUB_SSH_KEY }}
          repository: ${{inputs.repository || github.repository}}
      - name: Run subscription tests
        run: make subscriptions
  backends:
    needs: check-git-message
    runs-on: ubuntu-latest
    container:
      image: regentmarkets/debian-ci:nihal
      credentials:
        username: circle4regentmarkets
        password: ${{ secrets.DOCKER_PASSWORD }}
      options: --user nobody:nogroup
    defaults:
      run:
        shell: bash -le {0}
        working-directory: /home/git/${{inputs.repository || github.repository}}
    env:
      LOG_LEVEL: debug
      RPC_CONFIG: /home/git/regentmarkets/bom-rpc/rpc.conf.travis
      WEBSOCKET_CONFIG: /home/git/regentmarkets/binary-websocket-api/websocket.conf.example
    steps:
      - name: setup CI step
        uses: regentmarkets/github-actions/ci-setup@dev
        with:
          read_github_ssh_key: ${{ secrets.READ_GITHUB_SSH_KEY }}
          write_github_ssh_key: ${{ secrets.WRITE_GITHUB_SSH_KEY }}
          repository: ${{inputs.repository || github.repository}}
      - name: Run backends tests
        run: make backends
  update_docs:
    needs: check-git-message
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    container:
      image: regentmarkets/debian-ci:nihal
      credentials:
        username: circle4regentmarkets
        password: ${{ secrets.DOCKER_PASSWORD }}
      options: --user nobody:nogroup
    defaults:
      run:
        shell: bash -le {0}
        working-directory: /home/git/${{inputs.repository || github.repository}}
    env:
      LOG_LEVEL: debug
      RPC_CONFIG: /home/git/regentmarkets/bom-rpc/rpc.conf.travis
      WEBSOCKET_CONFIG: /home/git/regentmarkets/binary-websocket-api/websocket.conf.example
    steps:
      - name: setup CI step
        uses: regentmarkets/github-actions/ci-setup@dev
        with:
          read_github_ssh_key: ${{ secrets.READ_GITHUB_SSH_KEY }}
          write_github_ssh_key: ${{ secrets.WRITE_GITHUB_SSH_KEY }}
          need_service: 'false'
          repository: ${{inputs.repository || github.repository}}
      - name: Update developer.binary.com schema documentation
        run: |
          script/websocket_schema_update.sh
  

