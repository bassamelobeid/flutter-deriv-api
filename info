lib/BOM/WebSocketAPI.pm:            $log->("Switched group: RGID=$( EGID=$)");
lib/BOM/WebSocketAPI.pm:            $log->("Switched user: RUID=$< EUID=$>");
lib/BOM/WebSocketAPI.pm:            $app->log->error("EventLoop error: $err");
lib/BOM/WebSocketAPI.pm:    $log->info("$signature: Starting.");
lib/BOM/WebSocketAPI.pm:    $log->info("Mojolicious Mode is " . $app->mode);
lib/BOM/WebSocketAPI.pm:    $log->info("Log Level        is " . $log->level);
lib/BOM/WebSocketAPI.pm:        $log->info(@_);
lib/BOM/WebSocketAPI.pm:            $c->app->log->info("Error: $loginid, $msg_type, $code, $message");
lib/BOM/WebSocketAPI/Websocket_v1.pm:    $log->debug("opening a websocket for " . $c->tx->remote_address);
lib/BOM/WebSocketAPI/Websocket_v1.pm:    $log->debug("websocket got json " . $c->dumper($p1));
lib/BOM/WebSocketAPI/Websocket_v1.pm:    $log->debug("unrecognised request: " . $c->dumper($p1));
lib/BOM/WebSocketAPI/Websocket_v2.pm:    $log->debug("opening a websocket for " . $c->tx->remote_address);
lib/BOM/WebSocketAPI/Websocket_v2.pm:    $log->debug("websocket got json " . $c->dumper($p1));
lib/BOM/WebSocketAPI/Websocket_v2.pm:    $log->debug("unrecognised request: " . $c->dumper($p1));
lib/BOM/WebSocketAPI/Websocket_v3.pm:    $log->debug("opening a websocket for " . $c->tx->remote_address);
lib/BOM/WebSocketAPI/Websocket_v3.pm:                    $c->app->log->info("$$ timeout for " . JSON::to_json($p1));
lib/BOM/WebSocketAPI/Websocket_v3.pm:    $log->debug("websocket got json " . $c->dumper($p1));
lib/BOM/WebSocketAPI/Websocket_v3.pm:                $log->warn("Invalid output parameter for [ " . JSON::to_json($result) . " error: $error ]");
lib/BOM/WebSocketAPI/Websocket_v3.pm:    $log->debug("unrecognised request: " . $c->dumper($p1));
lib/BOM/WebSocketAPI/Websocket_v3.pm:        $c->app->log->warn("Sanity check failed: $failed[0] -> $failed[1]");
lib/BOM/WebSocketAPI/v1/Accounts.pm:    $log->debug("transaction query opts are " . $c->dumper($args));
lib/BOM/WebSocketAPI/v1/BaseController.pm:    $log->error("failing: $message");
lib/BOM/WebSocketAPI/v1/BaseController.pm:    $log->error("details: " . Dumper($logmsgs)) if $logmsgs;
lib/BOM/WebSocketAPI/v1/BaseController.pm:    if ($log->is_debug) {
lib/BOM/WebSocketAPI/v1/BaseController.pm:            $c->app->log->debug('return memo ' . Dumper($logdata));
lib/BOM/WebSocketAPI/v1/BaseController.pm:            $c->app->log->debug('returning ' . Dumper($data));
lib/BOM/WebSocketAPI/v1/MarketDiscovery.pm:    $log->debug("prepare_ask got p1 " . $c->dumper($p1));
lib/BOM/WebSocketAPI/v1/MarketDiscovery.pm:        $log->error("contract invalid but no error!");
lib/BOM/WebSocketAPI/v1/Offerings.pm:    $log->debug($c->dumper(query => $query));
lib/BOM/WebSocketAPI/v1/PortfolioManagement.pm:            $c->app->log->debug("contract creation failure: $err");
lib/BOM/WebSocketAPI/v1/PortfolioManagement.pm:            $c->app->log->error("Contract-Sell Fail: " . $err->get_type . " $err->{-message_to_client}: $err->{-mesg}");
lib/BOM/WebSocketAPI/v1/Symbols.pm:            $c->app->log->debug("Exchange is closed at $end, adjusting start_time");
lib/BOM/WebSocketAPI/v1/Symbols.pm:                $c->app->log->debug("Adjusted time range: $start - " . ($end // 'disconnect'));
lib/BOM/WebSocketAPI/v2/Accounts.pm:    $log->debug("transaction query opts are " . $c->dumper($args));
lib/BOM/WebSocketAPI/v2/BaseController.pm:    $log->error("failing: $message");
lib/BOM/WebSocketAPI/v2/BaseController.pm:    $log->error("details: " . Dumper($logmsgs)) if $logmsgs;
lib/BOM/WebSocketAPI/v2/BaseController.pm:    if ($log->is_debug) {
lib/BOM/WebSocketAPI/v2/BaseController.pm:            $c->app->log->debug('return memo ' . Dumper($logdata));
lib/BOM/WebSocketAPI/v2/BaseController.pm:            $c->app->log->debug('returning ' . Dumper($data));
lib/BOM/WebSocketAPI/v2/MarketDiscovery.pm:    $log->debug("prepare_ask got p1 " . $c->dumper($p1));
lib/BOM/WebSocketAPI/v2/MarketDiscovery.pm:        $log->error("contract invalid but no error!");
lib/BOM/WebSocketAPI/v2/PortfolioManagement.pm:            $c->app->log->debug("contract creation failure: $err");
lib/BOM/WebSocketAPI/v2/PortfolioManagement.pm:            $c->app->log->error("Contract-Sell Fail: " . $err->get_type . " $err->{-message_to_client}: $err->{-mesg}");
lib/BOM/WebSocketAPI/v2/Symbols.pm:                $c->app->log->debug("Due to feed license end_time has been changed to $licensed_epoch");
lib/BOM/WebSocketAPI/v2/Symbols.pm:                $c->app->log->debug("start_time has been changed to $start");
lib/BOM/WebSocketAPI/v2/Symbols.pm:            $c->app->log->debug("Exchange is closed at $end, adjusting start_time");
lib/BOM/WebSocketAPI/v2/Symbols.pm:                $c->app->log->debug("Adjusted time range: $start - " . ($end // 'disconnect'));
lib/BOM/WebSocketAPI/v3/Wrapper/Cashier.pm:                $c->app->log->info($response->{error}->{message}) if (exists $response->{error}->{message});
lib/BOM/WebSocketAPI/v3/Wrapper/Cashier.pm:                $c->app->log->info($response->{error}->{message}) if (exists $response->{error}->{message});
lib/BOM/WebSocketAPI/v3/Wrapper/Cashier.pm:                $c->app->log->info($response->{error}->{message}) if (exists $response->{error}->{message});
lib/BOM/WebSocketAPI/v3/Wrapper/Cashier.pm:                $c->app->log->info($response->{error}->{message}) if (exists $response->{error}->{message});
