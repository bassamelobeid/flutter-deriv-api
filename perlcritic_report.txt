lib/BOM/Event/Utility.pm~|~2~|~1~|~1~|~No package-scoped "$VERSION" variable found~|~See page 404 of PBP~|~Modules::RequireVersionVar~||~
lib/BOM/Event/Utility.pm~|~2~|~5~|~1~|~_perl_5006_pragmas requires 5.006~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
lib/BOM/Event/Utility.pm~|~2~|~8~|~1~|~_any_our_variables requires 5.006~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
lib/BOM/Event/Utility.pm~|~4~|~10~|~1~|~Pragma "constant" used~|~See page 55 of PBP~|~ValuesAndExpressions::ProhibitConstantPragma~||~
lib/BOM/Event/Utility.pm~|~2~|~12~|~1~|~Missing "VERSION" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Utility.pm~|~2~|~12~|~1~|~Missing "SYNOPSIS" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Utility.pm~|~2~|~12~|~1~|~Missing "SUBROUTINES/METHODS" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Utility.pm~|~2~|~12~|~1~|~Missing "DIAGNOSTICS" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Utility.pm~|~2~|~12~|~1~|~Missing "CONFIGURATION AND ENVIRONMENT" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Utility.pm~|~2~|~12~|~1~|~Missing "DEPENDENCIES" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Utility.pm~|~2~|~12~|~1~|~Missing "INCOMPATIBILITIES" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Utility.pm~|~2~|~12~|~1~|~Missing "BUGS AND LIMITATIONS" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Utility.pm~|~2~|~12~|~1~|~Missing "AUTHOR" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Utility.pm~|~2~|~12~|~1~|~Missing "LICENSE AND COPYRIGHT" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Utility.pm~|~2~|~45~|~12~|~Postfix control "while" used~|~See page 96 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Utility.pm~|~2~|~45~|~32~|~3 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
lib/BOM/Event/Utility.pm~|~2~|~45~|~38~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
lib/BOM/Event/Utility.pm~|~3~|~45~|~38~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
lib/BOM/Event/Utility.pm~|~2~|~45~|~38~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
lib/BOM/Event/Utility.pm~|~2~|~47~|~32~|~3 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
lib/BOM/Event/Utility.pm~|~5~|~49~|~5~|~"return" statement with explicit "undef"~|~See page 199 of PBP~|~Subroutines::ProhibitExplicitReturnUndef~||~
lib/BOM/Event/Utility.pm~|~5~|~78~|~5~|~"return" statement with explicit "undef"~|~See page 199 of PBP~|~Subroutines::ProhibitExplicitReturnUndef~||~
lib/BOM/Event/Utility.pm~|~2~|~105~|~25~|~String delimiter used with "split"~|~Express it as a regex instead~|~BuiltinFunctions::ProhibitStringySplit~||~
lib/BOM/Event/Utility.pm~|~2~|~105~|~31~|~Quotes used with a noisy string~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitNoisyQuotes~||~
lib/BOM/Event/Utility.pm~|~2~|~108~|~24~|~Quotes used with a noisy string~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitNoisyQuotes~||~
lib/BOM/Event/Utility.pm~|~2~|~110~|~46~|~Postfix control "if" used~|~See pages 93,94 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Utility.pm~|~2~|~111~|~46~|~Postfix control "if" used~|~See pages 93,94 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/NotificationsService.pm~|~2~|~1~|~1~|~No package-scoped "$VERSION" variable found~|~See page 404 of PBP~|~Modules::RequireVersionVar~||~
lib/BOM/Event/NotificationsService.pm~|~2~|~4~|~1~|~_perl_5006_pragmas requires 5.006~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
lib/BOM/Event/NotificationsService.pm~|~4~|~12~|~1~|~Pragma "constant" used~|~See page 55 of PBP~|~ValuesAndExpressions::ProhibitConstantPragma~||~
lib/BOM/Event/NotificationsService.pm~|~2~|~12~|~32~|~Quotes used with a noisy string~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitNoisyQuotes~||~
lib/BOM/Event/NotificationsService.pm~|~4~|~13~|~1~|~Pragma "constant" used~|~See page 55 of PBP~|~ValuesAndExpressions::ProhibitConstantPragma~||~
lib/BOM/Event/NotificationsService.pm~|~2~|~20~|~1~|~Missing "VERSION" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/NotificationsService.pm~|~2~|~20~|~1~|~Missing "SYNOPSIS" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/NotificationsService.pm~|~2~|~20~|~1~|~Missing "SUBROUTINES/METHODS" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/NotificationsService.pm~|~2~|~20~|~1~|~Missing "DIAGNOSTICS" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/NotificationsService.pm~|~2~|~20~|~1~|~Missing "CONFIGURATION AND ENVIRONMENT" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/NotificationsService.pm~|~2~|~20~|~1~|~Missing "DEPENDENCIES" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/NotificationsService.pm~|~2~|~20~|~1~|~Missing "INCOMPATIBILITIES" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/NotificationsService.pm~|~2~|~20~|~1~|~Missing "BUGS AND LIMITATIONS" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/NotificationsService.pm~|~2~|~20~|~1~|~Missing "AUTHOR" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/NotificationsService.pm~|~2~|~20~|~1~|~Missing "LICENSE AND COPYRIGHT" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/NotificationsService.pm~|~2~|~59~|~31~|~_perl_5010_operators requires 5.010~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
lib/BOM/Event/NotificationsService.pm~|~3~|~59~|~34~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
lib/BOM/Event/NotificationsService.pm~|~4~|~71~|~1~|~Subroutine "dequeue_dc_notifications" does not end with "return"~|~See page 197 of PBP~|~Subroutines::RequireFinalReturn~||~
lib/BOM/Event/NotificationsService.pm~|~2~|~75~|~81~|~60 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
lib/BOM/Event/NotificationsService.pm~|~2~|~77~|~5~|~_Pulp__for_loop_variable_using_my requires 5.004~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
lib/BOM/Event/NotificationsService.pm~|~2~|~81~|~40~|~String delimiter used with "split"~|~Express it as a regex instead~|~BuiltinFunctions::ProhibitStringySplit~||~
lib/BOM/Event/NotificationsService.pm~|~2~|~81~|~46~|~Quotes used with a noisy string~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitNoisyQuotes~||~
lib/BOM/Event/NotificationsService.pm~|~4~|~104~|~1~|~Subroutine "_send_multiplier_dc_notification" does not end with "return"~|~See page 197 of PBP~|~Subroutines::RequireFinalReturn~||~
lib/BOM/Event/NotificationsService.pm~|~4~|~121~|~1~|~Subroutine "dequeue_notifications" does not end with "return"~|~See page 197 of PBP~|~Subroutines::RequireFinalReturn~||~
lib/BOM/Event/NotificationsService.pm~|~2~|~130~|~16~|~String delimiter used with "split"~|~Express it as a regex instead~|~BuiltinFunctions::ProhibitStringySplit~||~
lib/BOM/Event/NotificationsService.pm~|~2~|~130~|~22~|~Quotes used with a noisy string~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitNoisyQuotes~||~
lib/BOM/Event/NotificationsService.pm~|~4~|~151~|~1~|~Subroutine "_send_multiplier_expiry_notification" does not end with "return"~|~See page 197 of PBP~|~Subroutines::RequireFinalReturn~||~
lib/BOM/Event/QueueHandler.pm~|~3~|~1~|~1~|~Main code has high complexity score (41)~|~Consider refactoring~|~Modules::ProhibitExcessMainComplexity~||~
lib/BOM/Event/QueueHandler.pm~|~2~|~1~|~1~|~No package-scoped "$VERSION" variable found~|~See page 404 of PBP~|~Modules::RequireVersionVar~||~
lib/BOM/Event/QueueHandler.pm~|~2~|~4~|~1~|~_perl_5006_pragmas requires 5.006~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
lib/BOM/Event/QueueHandler.pm~|~2~|~8~|~1~|~Missing "VERSION" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/QueueHandler.pm~|~2~|~8~|~1~|~Missing "SYNOPSIS" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/QueueHandler.pm~|~2~|~8~|~1~|~Missing "SUBROUTINES/METHODS" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/QueueHandler.pm~|~2~|~8~|~1~|~Missing "DIAGNOSTICS" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/QueueHandler.pm~|~2~|~8~|~1~|~Missing "CONFIGURATION AND ENVIRONMENT" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/QueueHandler.pm~|~2~|~8~|~1~|~Missing "DEPENDENCIES" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/QueueHandler.pm~|~2~|~8~|~1~|~Missing "INCOMPATIBILITIES" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/QueueHandler.pm~|~2~|~8~|~1~|~Missing "BUGS AND LIMITATIONS" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/QueueHandler.pm~|~2~|~8~|~1~|~Missing "AUTHOR" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/QueueHandler.pm~|~2~|~8~|~1~|~Missing "LICENSE AND COPYRIGHT" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/QueueHandler.pm~|~2~|~17~|~1~|~_perl_5010_pragmas requires 5.010~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
lib/BOM/Event/QueueHandler.pm~|~4~|~36~|~1~|~Pragma "constant" used~|~See page 55 of PBP~|~ValuesAndExpressions::ProhibitConstantPragma~||~
lib/BOM/Event/QueueHandler.pm~|~4~|~44~|~1~|~Pragma "constant" used~|~See page 55 of PBP~|~ValuesAndExpressions::ProhibitConstantPragma~||~
lib/BOM/Event/QueueHandler.pm~|~4~|~52~|~1~|~Pragma "constant" used~|~See page 55 of PBP~|~ValuesAndExpressions::ProhibitConstantPragma~||~
lib/BOM/Event/QueueHandler.pm~|~4~|~60~|~1~|~Pragma "constant" used~|~See page 55 of PBP~|~ValuesAndExpressions::ProhibitConstantPragma~||~
lib/BOM/Event/QueueHandler.pm~|~4~|~68~|~1~|~Pragma "constant" used~|~See page 55 of PBP~|~ValuesAndExpressions::ProhibitConstantPragma~||~
lib/BOM/Event/QueueHandler.pm~|~2~|~101~|~40~|~Postfix control "if" used~|~See pages 93,94 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/QueueHandler.pm~|~2~|~114~|~30~|~_perl_5010_operators requires 5.010~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
lib/BOM/Event/QueueHandler.pm~|~2~|~117~|~6~|~Put semicolon ; on last statement in a block~|~(no explanation)~|~CodeLayout::RequireFinalSemicolon~||~
lib/BOM/Event/QueueHandler.pm~|~3~|~139~|~1~|~Private subroutine/method '_add_to_loop' declared but not used~|~Eliminate dead code~|~Subroutines::ProhibitUnusedPrivateSubroutines~||~
lib/BOM/Event/QueueHandler.pm~|~5~|~145~|~5~|~"return" statement with explicit "undef"~|~See page 199 of PBP~|~Subroutines::ProhibitExplicitReturnUndef~||~
lib/BOM/Event/QueueHandler.pm~|~5~|~154~|~66~|~"return" statement with explicit "undef"~|~See page 199 of PBP~|~Subroutines::ProhibitExplicitReturnUndef~||~
lib/BOM/Event/QueueHandler.pm~|~2~|~201~|~17~|~Quotes used with a noisy string~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitNoisyQuotes~||~
lib/BOM/Event/QueueHandler.pm~|~4~|~243~|~1~|~Module does not end with "1;"~|~Must end with a recognizable true value~|~Modules::RequireEndWithOne~||~
lib/BOM/Event/QueueHandler.pm~|~2~|~247~|~5~|~_Pulp__for_loop_variable_using_my requires 5.004~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
lib/BOM/Event/QueueHandler.pm~|~2~|~252~|~82~|~Quotes used with a noisy string~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitNoisyQuotes~||~
lib/BOM/Event/QueueHandler.pm~|~2~|~255~|~27~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
lib/BOM/Event/QueueHandler.pm~|~2~|~255~|~27~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
lib/BOM/Event/QueueHandler.pm~|~3~|~265~|~17~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
lib/BOM/Event/QueueHandler.pm~|~5~|~270~|~5~|~"return" statement with explicit "undef"~|~See page 199 of PBP~|~Subroutines::ProhibitExplicitReturnUndef~||~
lib/BOM/Event/QueueHandler.pm~|~2~|~323~|~49~|~1000 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
lib/BOM/Event/QueueHandler.pm~|~2~|~329~|~23~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
lib/BOM/Event/QueueHandler.pm~|~3~|~329~|~23~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
lib/BOM/Event/QueueHandler.pm~|~2~|~329~|~23~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
lib/BOM/Event/QueueHandler.pm~|~5~|~338~|~5~|~"return" statement with explicit "undef"~|~See page 199 of PBP~|~Subroutines::ProhibitExplicitReturnUndef~||~
lib/BOM/Event/QueueHandler.pm~|~2~|~338~|~18~|~Postfix control "unless" used~|~See pages 96,97 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/QueueHandler.pm~|~2~|~345~|~103~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
lib/BOM/Event/QueueHandler.pm~|~2~|~372~|~48~|~Postfix control "unless" used~|~See pages 96,97 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/QueueHandler.pm~|~2~|~378~|~23~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
lib/BOM/Event/QueueHandler.pm~|~2~|~379~|~62~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
lib/BOM/Event/QueueHandler.pm~|~2~|~383~|~27~|~Postfix control "unless" used~|~See pages 96,97 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/QueueHandler.pm~|~2~|~413~|~54~|~_Pulp__UNIVERSAL_methods_5004 requires 5.004~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
lib/BOM/Event/QueueHandler.pm~|~3~|~414~|~21~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
lib/BOM/Event/QueueHandler.pm~|~2~|~437~|~14~|~Put semicolon ; on last statement in a block~|~(no explanation)~|~CodeLayout::RequireFinalSemicolon~||~
lib/BOM/Event/QueueHandler.pm~|~2~|~459~|~28~|~Quotes used with a noisy string~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitNoisyQuotes~||~
lib/BOM/Event/QueueHandler.pm~|~2~|~461~|~112~|~Quotes used with a noisy string~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitNoisyQuotes~||~
lib/BOM/Event/QueueHandler.pm~|~2~|~477~|~31~|~Postfix control "unless" used~|~See pages 96,97 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/QueueHandler.pm~|~2~|~477~|~38~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
lib/BOM/Event/QueueHandler.pm~|~2~|~485~|~48~|~3 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
lib/BOM/Event/QueueHandler.pm~|~2~|~527~|~31~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
lib/BOM/Event/QueueHandler.pm~|~2~|~547~|~14~|~Postfix control "unless" used~|~See pages 96,97 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/QueueHandler.pm~|~2~|~548~|~48~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
lib/BOM/Event/QueueHandler.pm~|~2~|~586~|~87~|~Quotes used with a noisy string~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitNoisyQuotes~||~
lib/BOM/Event/QueueHandler.pm~|~2~|~586~|~92~|~Quotes used with a noisy string~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitNoisyQuotes~||~
lib/BOM/Event/QueueHandler.pm~|~3~|~588~|~30~|~Unrestricted '## no critic' annotation~|~Only disable the Policies you really need to disable~|~Miscellanea::ProhibitUnrestrictedNoCritic~||~
lib/BOM/Event/QueueHandler.pm~|~2~|~600~|~10~|~Put semicolon ; on last statement in a block~|~(no explanation)~|~CodeLayout::RequireFinalSemicolon~||~
lib/BOM/Event/QueueHandler.pm~|~5~|~603~|~5~|~"return" statement with explicit "undef"~|~See page 199 of PBP~|~Subroutines::ProhibitExplicitReturnUndef~||~
lib/BOM/Event/QueueHandler.pm~|~2~|~640~|~100~|~Postfix control "if" used~|~See pages 93,94 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/QueueHandler.pm~|~2~|~648~|~19~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
lib/BOM/Event/QueueHandler.pm~|~3~|~648~|~19~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
lib/BOM/Event/QueueHandler.pm~|~2~|~648~|~19~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
lib/BOM/Event/QueueHandler.pm~|~2~|~661~|~6~|~Put semicolon ; on last statement in a block~|~(no explanation)~|~CodeLayout::RequireFinalSemicolon~||~
lib/BOM/Event/QueueHandler.pm~|~5~|~687~|~5~|~"return" statement with explicit "undef"~|~See page 199 of PBP~|~Subroutines::ProhibitExplicitReturnUndef~||~
lib/BOM/Event/QueueHandler.pm~|~2~|~713~|~9~|~"unless" block used~|~See page 97 of PBP~|~ControlStructures::ProhibitUnlessBlocks~||~
lib/BOM/Event/QueueHandler.pm~|~2~|~713~|~30~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
lib/BOM/Event/QueueHandler.pm~|~2~|~724~|~41~|~3 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
lib/BOM/Event/QueueHandler.pm~|~2~|~727~|~9~|~"unless" block used~|~See page 97 of PBP~|~ControlStructures::ProhibitUnlessBlocks~||~
lib/BOM/Event/QueueHandler.pm~|~2~|~738~|~6~|~Put semicolon ; on last statement in a block~|~(no explanation)~|~CodeLayout::RequireFinalSemicolon~||~
lib/BOM/Event/Listener.pm~|~2~|~1~|~1~|~No package-scoped "$VERSION" variable found~|~See page 404 of PBP~|~Modules::RequireVersionVar~||~
lib/BOM/Event/Listener.pm~|~2~|~4~|~1~|~_perl_5006_pragmas requires 5.006~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
lib/BOM/Event/Listener.pm~|~4~|~15~|~1~|~Pragma "constant" used~|~See page 55 of PBP~|~ValuesAndExpressions::ProhibitConstantPragma~||~
lib/BOM/Event/Listener.pm~|~2~|~17~|~1~|~Missing "VERSION" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Listener.pm~|~2~|~17~|~1~|~Missing "SUBROUTINES/METHODS" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Listener.pm~|~2~|~17~|~1~|~Missing "DIAGNOSTICS" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Listener.pm~|~2~|~17~|~1~|~Missing "CONFIGURATION AND ENVIRONMENT" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Listener.pm~|~2~|~17~|~1~|~Missing "DEPENDENCIES" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Listener.pm~|~2~|~17~|~1~|~Missing "INCOMPATIBILITIES" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Listener.pm~|~2~|~17~|~1~|~Missing "BUGS AND LIMITATIONS" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Listener.pm~|~2~|~17~|~1~|~Missing "AUTHOR" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Listener.pm~|~2~|~17~|~1~|~Missing "LICENSE AND COPYRIGHT" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Listener.pm~|~2~|~56~|~54~|~_perl_5010_operators requires 5.010~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
lib/BOM/Event/Listener.pm~|~2~|~56~|~62~|~1000 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
lib/BOM/Event/Listener.pm~|~2~|~97~|~41~|~Postfix control "unless" used~|~See pages 96,97 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Listener.pm~|~2~|~104~|~68~|~Postfix control "unless" used~|~See pages 96,97 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Listener.pm~|~2~|~104~|~81~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
lib/BOM/Event/Listener.pm~|~2~|~104~|~81~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
lib/BOM/Event/Listener.pm~|~2~|~105~|~68~|~Postfix control "unless" used~|~See pages 96,97 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Listener.pm~|~2~|~105~|~81~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
lib/BOM/Event/Listener.pm~|~2~|~105~|~81~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
lib/BOM/Event/Listener.pm~|~2~|~108~|~6~|~Put semicolon ; on last statement in a block~|~(no explanation)~|~CodeLayout::RequireFinalSemicolon~||~
lib/BOM/Event/Services.pm~|~2~|~1~|~1~|~No package-scoped "$VERSION" variable found~|~See page 404 of PBP~|~Modules::RequireVersionVar~||~
lib/BOM/Event/Services.pm~|~2~|~4~|~1~|~_perl_5006_pragmas requires 5.006~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
lib/BOM/Event/Services.pm~|~2~|~8~|~1~|~Missing "VERSION" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Services.pm~|~2~|~8~|~1~|~Missing "SYNOPSIS" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Services.pm~|~2~|~8~|~1~|~Missing "SUBROUTINES/METHODS" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Services.pm~|~2~|~8~|~1~|~Missing "DIAGNOSTICS" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Services.pm~|~2~|~8~|~1~|~Missing "CONFIGURATION AND ENVIRONMENT" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Services.pm~|~2~|~8~|~1~|~Missing "DEPENDENCIES" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Services.pm~|~2~|~8~|~1~|~Missing "INCOMPATIBILITIES" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Services.pm~|~2~|~8~|~1~|~Missing "BUGS AND LIMITATIONS" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Services.pm~|~2~|~8~|~1~|~Missing "AUTHOR" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Services.pm~|~2~|~8~|~1~|~Missing "LICENSE AND COPYRIGHT" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Services.pm~|~2~|~33~|~29~|~_perl_5010_operators requires 5.010~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
lib/BOM/Event/Services.pm~|~2~|~40~|~6~|~Put semicolon ; on last statement in a block~|~(no explanation)~|~CodeLayout::RequireFinalSemicolon~||~
lib/BOM/Event/Services.pm~|~2~|~65~|~6~|~Put semicolon ; on last statement in a block~|~(no explanation)~|~CodeLayout::RequireFinalSemicolon~||~
lib/BOM/Event/Services.pm~|~2~|~82~|~6~|~Put semicolon ; on last statement in a block~|~(no explanation)~|~CodeLayout::RequireFinalSemicolon~||~
lib/BOM/Event/Services.pm~|~2~|~95~|~6~|~Put semicolon ; on last statement in a block~|~(no explanation)~|~CodeLayout::RequireFinalSemicolon~||~
lib/BOM/Event/Services.pm~|~2~|~117~|~6~|~Put semicolon ; on last statement in a block~|~(no explanation)~|~CodeLayout::RequireFinalSemicolon~||~
lib/BOM/Event/Services.pm~|~2~|~133~|~6~|~Put semicolon ; on last statement in a block~|~(no explanation)~|~CodeLayout::RequireFinalSemicolon~||~
lib/BOM/Event/Services.pm~|~2~|~143~|~6~|~Put semicolon ; on last statement in a block~|~(no explanation)~|~CodeLayout::RequireFinalSemicolon~||~
lib/BOM/Event/Services.pm~|~2~|~156~|~6~|~Put semicolon ; on last statement in a block~|~(no explanation)~|~CodeLayout::RequireFinalSemicolon~||~
lib/BOM/Event/Services.pm~|~2~|~169~|~6~|~Put semicolon ; on last statement in a block~|~(no explanation)~|~CodeLayout::RequireFinalSemicolon~||~
lib/BOM/Event/Services.pm~|~2~|~182~|~6~|~Put semicolon ; on last statement in a block~|~(no explanation)~|~CodeLayout::RequireFinalSemicolon~||~
lib/BOM/Event/Services.pm~|~2~|~195~|~6~|~Put semicolon ; on last statement in a block~|~(no explanation)~|~CodeLayout::RequireFinalSemicolon~||~
lib/BOM/Event/Services.pm~|~2~|~208~|~6~|~Put semicolon ; on last statement in a block~|~(no explanation)~|~CodeLayout::RequireFinalSemicolon~||~
lib/BOM/Event/Services.pm~|~2~|~224~|~6~|~Put semicolon ; on last statement in a block~|~(no explanation)~|~CodeLayout::RequireFinalSemicolon~||~
lib/BOM/Event/Process.pm~|~2~|~1~|~1~|~No package-scoped "$VERSION" variable found~|~See page 404 of PBP~|~Modules::RequireVersionVar~||~
lib/BOM/Event/Process.pm~|~2~|~4~|~1~|~_perl_5006_pragmas requires 5.006~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
lib/BOM/Event/Process.pm~|~2~|~35~|~1~|~Missing "VERSION" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Process.pm~|~2~|~35~|~1~|~Missing "SUBROUTINES/METHODS" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Process.pm~|~2~|~35~|~1~|~Missing "DIAGNOSTICS" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Process.pm~|~2~|~35~|~1~|~Missing "CONFIGURATION AND ENVIRONMENT" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Process.pm~|~2~|~35~|~1~|~Missing "DEPENDENCIES" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Process.pm~|~2~|~35~|~1~|~Missing "INCOMPATIBILITIES" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Process.pm~|~2~|~35~|~1~|~Missing "BUGS AND LIMITATIONS" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Process.pm~|~2~|~35~|~1~|~Missing "AUTHOR" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Process.pm~|~2~|~35~|~1~|~Missing "LICENSE AND COPYRIGHT" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Process.pm~|~2~|~256~|~1~|~Pod requires perl 5.008 due to: =head3 command~|~(no explanation)~|~Compatibility::PodMinimumVersion~||~
lib/BOM/Event/Process.pm~|~4~|~268~|~1~|~Subroutine "process" does not end with "return"~|~See page 197 of PBP~|~Subroutines::RequireFinalReturn~||~
lib/BOM/Event/Process.pm~|~2~|~272~|~37~|~_perl_5010_operators requires 5.010~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
lib/BOM/Event/Process.pm~|~2~|~275~|~5~|~"unless" block used~|~See page 97 of PBP~|~ControlStructures::ProhibitUnlessBlocks~||~
lib/BOM/Event/Process.pm~|~5~|~277~|~9~|~"return" statement with explicit "undef"~|~See page 199 of PBP~|~Subroutines::ProhibitExplicitReturnUndef~||~
lib/BOM/Event/Process.pm~|~2~|~280~|~5~|~"unless" block used~|~See page 97 of PBP~|~ControlStructures::ProhibitUnlessBlocks~||~
lib/BOM/Event/Process.pm~|~5~|~282~|~9~|~"return" statement with explicit "undef"~|~See page 199 of PBP~|~Subroutines::ProhibitExplicitReturnUndef~||~
lib/BOM/Event/Process.pm~|~2~|~293~|~50~|~_Pulp__arrow_coderef_call requires 5.004~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
lib/BOM/Event/Process.pm~|~2~|~294~|~27~|~Postfix control "if" used~|~See pages 93,94 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Process.pm~|~2~|~294~|~64~|~_Pulp__UNIVERSAL_methods_5004 requires 5.004~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
lib/BOM/Event/Services/Track.pm~|~3~|~1~|~1~|~Main code has high complexity score (37)~|~Consider refactoring~|~Modules::ProhibitExcessMainComplexity~||~
lib/BOM/Event/Services/Track.pm~|~2~|~1~|~1~|~No package-scoped "$VERSION" variable found~|~See page 404 of PBP~|~Modules::RequireVersionVar~||~
lib/BOM/Event/Services/Track.pm~|~2~|~4~|~1~|~_perl_5006_pragmas requires 5.006~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
lib/BOM/Event/Services/Track.pm~|~2~|~5~|~1~|~_perl_5010_pragmas requires 5.010~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
lib/BOM/Event/Services/Track.pm~|~2~|~6~|~1~|~_pragma_utf8 requires 5.008~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
lib/BOM/Event/Services/Track.pm~|~4~|~27~|~1~|~Pragma "constant" used~|~See page 55 of PBP~|~ValuesAndExpressions::ProhibitConstantPragma~||~
lib/BOM/Event/Services/Track.pm~|~2~|~29~|~1~|~Missing "VERSION" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Services/Track.pm~|~2~|~29~|~1~|~Missing "SYNOPSIS" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Services/Track.pm~|~2~|~29~|~1~|~Missing "SUBROUTINES/METHODS" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Services/Track.pm~|~2~|~29~|~1~|~Missing "DIAGNOSTICS" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Services/Track.pm~|~2~|~29~|~1~|~Missing "CONFIGURATION AND ENVIRONMENT" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Services/Track.pm~|~2~|~29~|~1~|~Missing "DEPENDENCIES" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Services/Track.pm~|~2~|~29~|~1~|~Missing "INCOMPATIBILITIES" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Services/Track.pm~|~2~|~29~|~1~|~Missing "BUGS AND LIMITATIONS" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Services/Track.pm~|~2~|~29~|~1~|~Missing "AUTHOR" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Services/Track.pm~|~2~|~29~|~1~|~Missing "LICENSE AND COPYRIGHT" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Services/Track.pm~|~2~|~46~|~230~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
lib/BOM/Event/Services/Track.pm~|~2~|~52~|~58~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
lib/BOM/Event/Services/Track.pm~|~2~|~63~|~227~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
lib/BOM/Event/Services/Track.pm~|~2~|~76~|~121~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
lib/BOM/Event/Services/Track.pm~|~2~|~81~|~165~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
lib/BOM/Event/Services/Track.pm~|~2~|~84~|~164~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
lib/BOM/Event/Services/Track.pm~|~2~|~87~|~164~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
lib/BOM/Event/Services/Track.pm~|~2~|~90~|~164~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
lib/BOM/Event/Services/Track.pm~|~2~|~93~|~185~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
lib/BOM/Event/Services/Track.pm~|~2~|~97~|~164~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
lib/BOM/Event/Services/Track.pm~|~2~|~100~|~174~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
lib/BOM/Event/Services/Track.pm~|~2~|~103~|~174~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
lib/BOM/Event/Services/Track.pm~|~2~|~106~|~174~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
lib/BOM/Event/Services/Track.pm~|~2~|~109~|~174~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
lib/BOM/Event/Services/Track.pm~|~3~|~248~|~1~|~Private subroutine/method '_api' declared but not used~|~Eliminate dead code~|~Subroutines::ProhibitUnusedPrivateSubroutines~||~
lib/BOM/Event/Services/Track.pm~|~2~|~357~|~28~|~_perl_5010_operators requires 5.010~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
lib/BOM/Event/Services/Track.pm~|~2~|~358~|~47~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
lib/BOM/Event/Services/Track.pm~|~3~|~414~|~12~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
lib/BOM/Event/Services/Track.pm~|~2~|~422~|~53~|~Postfix control "for" used~|~See page 96 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Services/Track.pm~|~2~|~422~|~87~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
lib/BOM/Event/Services/Track.pm~|~2~|~427~|~39~|~Postfix control "for" used~|~See page 96 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Services/Track.pm~|~2~|~429~|~70~|~Postfix control "if" used~|~See pages 93,94 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Services/Track.pm~|~2~|~433~|~90~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
lib/BOM/Event/Services/Track.pm~|~2~|~443~|~34~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
lib/BOM/Event/Services/Track.pm~|~2~|~513~|~78~|~Postfix control "if" used~|~See pages 93,94 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Services/Track.pm~|~2~|~514~|~5~|~_Pulp__for_loop_variable_using_my requires 5.004~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
lib/BOM/Event/Services/Track.pm~|~2~|~516~|~13~|~Postfix control "if" used~|~See pages 93,94 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Services/Track.pm~|~2~|~516~|~108~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
lib/BOM/Event/Services/Track.pm~|~3~|~554~|~63~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
lib/BOM/Event/Services/Track.pm~|~3~|~555~|~63~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
lib/BOM/Event/Services/Track.pm~|~3~|~556~|~63~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
lib/BOM/Event/Services/Track.pm~|~3~|~557~|~72~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
lib/BOM/Event/Services/Track.pm~|~2~|~570~|~34~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
lib/BOM/Event/Services/Track.pm~|~3~|~593~|~82~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
lib/BOM/Event/Services/Track.pm~|~2~|~599~|~34~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
lib/BOM/Event/Services/Track.pm~|~2~|~616~|~34~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
lib/BOM/Event/Services/Track.pm~|~4~|~816~|~1~|~Always unpack @_ first~|~See page 178 of PBP~|~Subroutines::RequireArgUnpacking~||~
lib/BOM/Event/Services/Track.pm~|~4~|~838~|~1~|~Always unpack @_ first~|~See page 178 of PBP~|~Subroutines::RequireArgUnpacking~||~
lib/BOM/Event/Services/Track.pm~|~4~|~860~|~1~|~Always unpack @_ first~|~See page 178 of PBP~|~Subroutines::RequireArgUnpacking~||~
lib/BOM/Event/Services/Track.pm~|~4~|~882~|~1~|~Always unpack @_ first~|~See page 178 of PBP~|~Subroutines::RequireArgUnpacking~||~
lib/BOM/Event/Services/Track.pm~|~2~|~934~|~26~|~Postfix control "if" used~|~See pages 93,94 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Services/Track.pm~|~2~|~940~|~40~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
lib/BOM/Event/Services/Track.pm~|~2~|~975~|~72~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
lib/BOM/Event/Services/Track.pm~|~2~|~980~|~73~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
lib/BOM/Event/Services/Track.pm~|~2~|~1017~|~59~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
lib/BOM/Event/Services/Track.pm~|~2~|~1019~|~60~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
lib/BOM/Event/Services/Track.pm~|~4~|~1054~|~1~|~Module does not end with "1;"~|~Must end with a recognizable true value~|~Modules::RequireEndWithOne~||~
lib/BOM/Event/Services/Track.pm~|~3~|~1058~|~5~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
lib/BOM/Event/Services/Track.pm~|~2~|~1059~|~9~|~Postfix control "unless" used~|~See pages 96,97 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Services/Track.pm~|~2~|~1062~|~12~|~Postfix control "unless" used~|~See pages 96,97 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Services/Track.pm~|~2~|~1065~|~71~|~Postfix control "if" used~|~See pages 93,94 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Services/Track.pm~|~2~|~1079~|~107~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
lib/BOM/Event/Services/Track.pm~|~2~|~1082~|~44~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
lib/BOM/Event/Services/Track.pm~|~3~|~1116~|~5~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
lib/BOM/Event/Services/Track.pm~|~2~|~1116~|~65~|~Postfix control "unless" used~|~See pages 96,97 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Services/Track.pm~|~2~|~1119~|~62~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
lib/BOM/Event/Services/Track.pm~|~2~|~1120~|~102~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
lib/BOM/Event/Services/Track.pm~|~3~|~1160~|~41~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
lib/BOM/Event/Services/Track.pm~|~2~|~1172~|~10~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
lib/BOM/Event/Services/Track.pm~|~2~|~1198~|~20~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
lib/BOM/Event/Services/Track.pm~|~2~|~1227~|~44~|~Quotes used with a noisy string~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitNoisyQuotes~||~
lib/BOM/Event/Services/Track.pm~|~2~|~1243~|~43~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
lib/BOM/Event/Services/Track.pm~|~3~|~1243~|~43~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
lib/BOM/Event/Services/Track.pm~|~2~|~1243~|~43~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
lib/BOM/Event/Services/Track.pm~|~3~|~1244~|~38~|~Capture variable used outside conditional~|~See page 253 of PBP~|~RegularExpressions::ProhibitCaptureWithoutTest~||~
lib/BOM/Event/Services/Track.pm~|~2~|~1244~|~41~|~Postfix control "if" used~|~See pages 93,94 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Services/Track.pm~|~3~|~1244~|~44~|~Capture variable used outside conditional~|~See page 253 of PBP~|~RegularExpressions::ProhibitCaptureWithoutTest~||~
lib/BOM/Event/Services/Track.pm~|~2~|~1258~|~50~|~Postfix control "if" used~|~See pages 93,94 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Services/Track.pm~|~2~|~1265~|~36~|~String delimiter used with "split"~|~Express it as a regex instead~|~BuiltinFunctions::ProhibitStringySplit~||~
lib/BOM/Event/Services/Track.pm~|~2~|~1265~|~42~|~Quotes used with a noisy string~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitNoisyQuotes~||~
lib/BOM/Event/Services/Track.pm~|~2~|~1269~|~26~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
lib/BOM/Event/Services/Track.pm~|~2~|~1282~|~54~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
lib/BOM/Event/Services/Track.pm~|~2~|~1284~|~122~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
lib/BOM/Event/Services/Track.pm~|~2~|~1298~|~46~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
lib/BOM/Event/Services/Track.pm~|~2~|~1313~|~45~|~Quotes used with a noisy string~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitNoisyQuotes~||~
lib/BOM/Event/Services/Track.pm~|~2~|~1314~|~45~|~Quotes used with a noisy string~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitNoisyQuotes~||~
lib/BOM/Event/Services/Track.pm~|~2~|~1315~|~66~|~Quotes used with a noisy string~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitNoisyQuotes~||~
lib/BOM/Event/Services/Track.pm~|~2~|~1346~|~5~|~"unless" block used~|~See page 97 of PBP~|~ControlStructures::ProhibitUnlessBlocks~||~
lib/BOM/Event/Services/Track.pm~|~5~|~1348~|~9~|~"return" statement with explicit "undef"~|~See page 199 of PBP~|~Subroutines::ProhibitExplicitReturnUndef~||~
lib/BOM/Event/Services/Track.pm~|~2~|~1351~|~5~|~"unless" block used~|~See page 97 of PBP~|~ControlStructures::ProhibitUnlessBlocks~||~
lib/BOM/Event/Services/Track.pm~|~2~|~1374~|~42~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
lib/BOM/Event/Services/Track.pm~|~2~|~1375~|~36~|~String delimiter used with "split"~|~Express it as a regex instead~|~BuiltinFunctions::ProhibitStringySplit~||~
lib/BOM/Event/Services/Track.pm~|~2~|~1375~|~42~|~Quotes used with a noisy string~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitNoisyQuotes~||~
lib/BOM/Event/Services/Track.pm~|~3~|~1376~|~5~|~Ambiguously named variable "second"~|~See page 48 of PBP~|~NamingConventions::ProhibitAmbiguousNames~||~
lib/BOM/Event/Services/Track.pm~|~2~|~1376~|~36~|~String delimiter used with "split"~|~Express it as a regex instead~|~BuiltinFunctions::ProhibitStringySplit~||~
lib/BOM/Event/Services/Track.pm~|~2~|~1376~|~42~|~Quotes used with a noisy string~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitNoisyQuotes~||~
lib/BOM/Event/Services/Track.pm~|~2~|~1384~|~30~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
lib/BOM/Event/Services/Track.pm~|~2~|~1385~|~17~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
lib/BOM/Event/Services/Track.pm~|~2~|~1613~|~1~|~Postfix control "for" used~|~See page 96 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Services/Track.pm~|~5~|~1614~|~5~|~Stricture disabled~|~See page 429 of PBP~|~TestingAndDebugging::ProhibitNoStrict~||~
lib/BOM/Event/Services/Track.pm~|~2~|~1615~|~7~|~_Pulp__special_literal__PACKAGE__ requires 5.004~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
lib/BOM/Event/Services/Track.pm~|~2~|~1615~|~21~|~Quotes used with a noisy string~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitNoisyQuotes~||~
lib/BOM/Event/Services/Track.pm~|~2~|~1624~|~9~|~Postfix control "unless" used~|~See pages 96,97 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Services/Track.pm~|~2~|~1624~|~29~|~_Pulp__UNIVERSAL_methods_5004 requires 5.004~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
lib/BOM/Event/Actions/MyAffiliate.pm~|~3~|~1~|~1~|~Main code has high complexity score (56)~|~Consider refactoring~|~Modules::ProhibitExcessMainComplexity~||~
lib/BOM/Event/Actions/MyAffiliate.pm~|~2~|~1~|~1~|~No package-scoped "$VERSION" variable found~|~See page 404 of PBP~|~Modules::RequireVersionVar~||~
lib/BOM/Event/Actions/MyAffiliate.pm~|~2~|~4~|~1~|~_perl_5006_pragmas requires 5.006~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
lib/BOM/Event/Actions/MyAffiliate.pm~|~4~|~22~|~1~|~Pragma "constant" used~|~See page 55 of PBP~|~ValuesAndExpressions::ProhibitConstantPragma~||~
lib/BOM/Event/Actions/MyAffiliate.pm~|~2~|~24~|~1~|~Missing "NAME" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/MyAffiliate.pm~|~2~|~24~|~1~|~Missing "VERSION" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/MyAffiliate.pm~|~2~|~24~|~1~|~Missing "SYNOPSIS" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/MyAffiliate.pm~|~2~|~24~|~1~|~Missing "DESCRIPTION" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/MyAffiliate.pm~|~2~|~24~|~1~|~Missing "SUBROUTINES/METHODS" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/MyAffiliate.pm~|~2~|~24~|~1~|~Missing "DIAGNOSTICS" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/MyAffiliate.pm~|~2~|~24~|~1~|~Missing "CONFIGURATION AND ENVIRONMENT" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/MyAffiliate.pm~|~2~|~24~|~1~|~Missing "DEPENDENCIES" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/MyAffiliate.pm~|~2~|~24~|~1~|~Missing "INCOMPATIBILITIES" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/MyAffiliate.pm~|~2~|~24~|~1~|~Missing "BUGS AND LIMITATIONS" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/MyAffiliate.pm~|~2~|~24~|~1~|~Missing "AUTHOR" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/MyAffiliate.pm~|~2~|~24~|~1~|~Missing "LICENSE AND COPYRIGHT" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/MyAffiliate.pm~|~4~|~47~|~1~|~Module does not end with "1;"~|~Must end with a recognizable true value~|~Modules::RequireEndWithOne~||~
lib/BOM/Event/Actions/MyAffiliate.pm~|~2~|~51~|~56~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
lib/BOM/Event/Actions/MyAffiliate.pm~|~2~|~60~|~45~|~_perl_5010_operators requires 5.010~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
lib/BOM/Event/Actions/MyAffiliate.pm~|~2~|~64~|~53~|~Postfix control "unless" used~|~See pages 96,97 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/MyAffiliate.pm~|~5~|~69~|~5~|~"return" statement with explicit "undef"~|~See page 199 of PBP~|~Subroutines::ProhibitExplicitReturnUndef~||~
lib/BOM/Event/Actions/MyAffiliate.pm~|~2~|~96~|~53~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
lib/BOM/Event/Actions/MyAffiliate.pm~|~2~|~104~|~5~|~_Pulp__for_loop_variable_using_my requires 5.004~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
lib/BOM/Event/Actions/MyAffiliate.pm~|~2~|~104~|~22~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
lib/BOM/Event/Actions/MyAffiliate.pm~|~2~|~107~|~28~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
lib/BOM/Event/Actions/MyAffiliate.pm~|~2~|~115~|~81~|~Postfix control "if" used~|~See pages 93,94 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/MyAffiliate.pm~|~2~|~117~|~23~|~Quotes used with a noisy string~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitNoisyQuotes~||~
lib/BOM/Event/Actions/MyAffiliate.pm~|~2~|~117~|~29~|~20 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
lib/BOM/Event/Actions/MyAffiliate.pm~|~2~|~120~|~9~|~Postfix control "if" used~|~See pages 93,94 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/MyAffiliate.pm~|~2~|~122~|~9~|~Postfix control "if" used~|~See pages 93,94 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/MyAffiliate.pm~|~2~|~126~|~9~|~Postfix control "if" used~|~See pages 93,94 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/MyAffiliate.pm~|~2~|~129~|~9~|~Postfix control "if" used~|~See pages 93,94 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/MyAffiliate.pm~|~2~|~131~|~9~|~Postfix control "if" used~|~See pages 93,94 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/MyAffiliate.pm~|~2~|~135~|~84~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
lib/BOM/Event/Actions/MyAffiliate.pm~|~2~|~136~|~11~|~Postfix control "if" used~|~See pages 93,94 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/MyAffiliate.pm~|~2~|~140~|~29~|~Quotes used with a noisy string~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitNoisyQuotes~||~
lib/BOM/Event/Actions/MyAffiliate.pm~|~5~|~150~|~5~|~"return" statement with explicit "undef"~|~See page 199 of PBP~|~Subroutines::ProhibitExplicitReturnUndef~||~
lib/BOM/Event/Actions/MyAffiliate.pm~|~2~|~186~|~25~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
lib/BOM/Event/Actions/MyAffiliate.pm~|~2~|~186~|~53~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
lib/BOM/Event/Actions/MyAffiliate.pm~|~2~|~205~|~66~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
lib/BOM/Event/Actions/MyAffiliate.pm~|~2~|~220~|~37~|~Postfix control "for" used~|~See page 96 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/MyAffiliate.pm~|~5~|~232~|~5~|~"return" statement with explicit "undef"~|~See page 199 of PBP~|~Subroutines::ProhibitExplicitReturnUndef~||~
lib/BOM/Event/Actions/MyAffiliate.pm~|~2~|~239~|~46~|~Postfix control "unless" used~|~See pages 96,97 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/MyAffiliate.pm~|~2~|~253~|~14~|~Put semicolon ; on last statement in a block~|~(no explanation)~|~CodeLayout::RequireFinalSemicolon~||~
lib/BOM/Event/Actions/MyAffiliate.pm~|~2~|~266~|~29~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
lib/BOM/Event/Actions/MyAffiliate.pm~|~3~|~266~|~29~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
lib/BOM/Event/Actions/MyAffiliate.pm~|~2~|~266~|~29~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
lib/BOM/Event/Actions/MyAffiliate.pm~|~2~|~270~|~41~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
lib/BOM/Event/Actions/MyAffiliate.pm~|~3~|~270~|~41~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
lib/BOM/Event/Actions/MyAffiliate.pm~|~2~|~270~|~41~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
lib/BOM/Event/Actions/MyAffiliate.pm~|~2~|~303~|~21~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
lib/BOM/Event/Actions/MyAffiliate.pm~|~3~|~303~|~21~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
lib/BOM/Event/Actions/MyAffiliate.pm~|~2~|~303~|~21~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
lib/BOM/Event/Actions/MyAffiliate.pm~|~2~|~304~|~20~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
lib/BOM/Event/Actions/MyAffiliate.pm~|~3~|~304~|~20~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
lib/BOM/Event/Actions/MyAffiliate.pm~|~2~|~304~|~20~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
lib/BOM/Event/Actions/MyAffiliate.pm~|~2~|~305~|~44~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
lib/BOM/Event/Actions/MyAffiliate.pm~|~2~|~305~|~55~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
lib/BOM/Event/Actions/MyAffiliate.pm~|~2~|~316~|~28~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
lib/BOM/Event/Actions/MyAffiliate.pm~|~2~|~331~|~27~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
lib/BOM/Event/Actions/MyAffiliate.pm~|~2~|~333~|~35~|~Quotes used with a noisy string~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitNoisyQuotes~||~
lib/BOM/Event/Actions/MyAffiliate.pm~|~2~|~333~|~40~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
lib/BOM/Event/Actions/MyAffiliate.pm~|~2~|~353~|~77~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
lib/BOM/Event/Actions/MyAffiliate.pm~|~2~|~373~|~30~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
lib/BOM/Event/Actions/MyAffiliate.pm~|~2~|~374~|~46~|~Postfix control "if" used~|~See pages 93,94 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/MyAffiliate.pm~|~2~|~376~|~10~|~Put semicolon ; on last statement in a block~|~(no explanation)~|~CodeLayout::RequireFinalSemicolon~||~
lib/BOM/Event/Actions/MyAffiliate.pm~|~2~|~386~|~38~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
lib/BOM/Event/Actions/MyAffiliate.pm~|~2~|~387~|~54~|~Postfix control "if" used~|~See pages 93,94 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/MyAffiliate.pm~|~2~|~389~|~18~|~Put semicolon ; on last statement in a block~|~(no explanation)~|~CodeLayout::RequireFinalSemicolon~||~
lib/BOM/Event/Actions/MyAffiliate.pm~|~2~|~393~|~47~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
lib/BOM/Event/Actions/MyAffiliate.pm~|~2~|~401~|~38~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
lib/BOM/Event/Actions/MyAffiliate.pm~|~2~|~402~|~54~|~Postfix control "if" used~|~See pages 93,94 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/MyAffiliate.pm~|~2~|~404~|~18~|~Put semicolon ; on last statement in a block~|~(no explanation)~|~CodeLayout::RequireFinalSemicolon~||~
lib/BOM/Event/Actions/Authentication.pm~|~2~|~1~|~1~|~No package-scoped "$VERSION" variable found~|~See page 404 of PBP~|~Modules::RequireVersionVar~||~
lib/BOM/Event/Actions/Authentication.pm~|~2~|~4~|~1~|~_perl_5006_pragmas requires 5.006~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
lib/BOM/Event/Actions/Authentication.pm~|~4~|~20~|~1~|~Pragma "constant" used~|~See page 55 of PBP~|~ValuesAndExpressions::ProhibitConstantPragma~||~
lib/BOM/Event/Actions/Authentication.pm~|~4~|~21~|~1~|~Pragma "constant" used~|~See page 55 of PBP~|~ValuesAndExpressions::ProhibitConstantPragma~||~
lib/BOM/Event/Actions/Authentication.pm~|~4~|~23~|~1~|~Pragma "constant" used~|~See page 55 of PBP~|~ValuesAndExpressions::ProhibitConstantPragma~||~
lib/BOM/Event/Actions/Authentication.pm~|~2~|~36~|~1~|~Missing "NAME" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/Authentication.pm~|~2~|~36~|~1~|~Missing "VERSION" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/Authentication.pm~|~2~|~36~|~1~|~Missing "SYNOPSIS" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/Authentication.pm~|~2~|~36~|~1~|~Missing "DESCRIPTION" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/Authentication.pm~|~2~|~36~|~1~|~Missing "SUBROUTINES/METHODS" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/Authentication.pm~|~2~|~36~|~1~|~Missing "DIAGNOSTICS" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/Authentication.pm~|~2~|~36~|~1~|~Missing "CONFIGURATION AND ENVIRONMENT" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/Authentication.pm~|~2~|~36~|~1~|~Missing "DEPENDENCIES" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/Authentication.pm~|~2~|~36~|~1~|~Missing "INCOMPATIBILITIES" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/Authentication.pm~|~2~|~36~|~1~|~Missing "BUGS AND LIMITATIONS" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/Authentication.pm~|~2~|~36~|~1~|~Missing "AUTHOR" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/Authentication.pm~|~2~|~36~|~1~|~Missing "LICENSE AND COPYRIGHT" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/Authentication.pm~|~3~|~64~|~5~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
lib/BOM/Event/Actions/Authentication.pm~|~2~|~64~|~72~|~Postfix control "unless" used~|~See pages 96,97 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/Authentication.pm~|~3~|~65~|~5~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
lib/BOM/Event/Actions/Authentication.pm~|~2~|~65~|~72~|~Postfix control "unless" used~|~See pages 96,97 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/Authentication.pm~|~3~|~66~|~5~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
lib/BOM/Event/Actions/Authentication.pm~|~2~|~66~|~72~|~Postfix control "unless" used~|~See pages 96,97 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/Authentication.pm~|~2~|~70~|~95~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
lib/BOM/Event/Actions/Authentication.pm~|~2~|~71~|~5~|~_Pulp__for_loop_variable_using_my requires 5.004~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
lib/BOM/Event/Actions/Authentication.pm~|~3~|~109~|~1~|~Too many arguments~|~See page 182 of PBP~|~Subroutines::ProhibitManyArgs~||~
lib/BOM/Event/Actions/Authentication.pm~|~2~|~121~|~137~|~_perl_5010_operators requires 5.010~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
lib/BOM/Event/Actions/Authentication.pm~|~2~|~121~|~140~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
lib/BOM/Event/Actions/Authentication.pm~|~2~|~123~|~72~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
lib/BOM/Event/Actions/Authentication.pm~|~2~|~147~|~5~|~"unless" block used~|~See page 97 of PBP~|~ControlStructures::ProhibitUnlessBlocks~||~
lib/BOM/Event/Actions/Authentication.pm~|~5~|~151~|~5~|~"return" statement with explicit "undef"~|~See page 199 of PBP~|~Subroutines::ProhibitExplicitReturnUndef~||~
lib/BOM/Event/Actions/Authentication.pm~|~3~|~179~|~1~|~Too many arguments~|~See page 182 of PBP~|~Subroutines::ProhibitManyArgs~||~
lib/BOM/Event/Actions/Authentication.pm~|~4~|~179~|~1~|~Subroutine "_authentication" does not end with "return"~|~See page 197 of PBP~|~Subroutines::RequireFinalReturn~||~
lib/BOM/Event/Actions/Authentication.pm~|~2~|~185~|~70~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
lib/BOM/Event/Actions/Authentication.pm~|~3~|~185~|~70~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
lib/BOM/Event/Actions/Authentication.pm~|~2~|~185~|~70~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
lib/BOM/Event/Actions/Authentication.pm~|~2~|~187~|~100~|~Postfix control "unless" used~|~See pages 96,97 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/Authentication.pm~|~2~|~189~|~88~|~Postfix control "unless" used~|~See pages 96,97 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/Authentication.pm~|~2~|~207~|~118~|~-1 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
lib/BOM/Event/Actions/MT5.pm~|~3~|~1~|~1~|~Main code has high complexity score (210)~|~Consider refactoring~|~Modules::ProhibitExcessMainComplexity~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~1~|~1~|~No package-scoped "$VERSION" variable found~|~See page 404 of PBP~|~Modules::RequireVersionVar~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~4~|~1~|~_perl_5006_pragmas requires 5.006~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
lib/BOM/Event/Actions/MT5.pm~|~4~|~52~|~1~|~Pragma "constant" used~|~See page 55 of PBP~|~ValuesAndExpressions::ProhibitConstantPragma~||~
lib/BOM/Event/Actions/MT5.pm~|~4~|~53~|~1~|~Pragma "constant" used~|~See page 55 of PBP~|~ValuesAndExpressions::ProhibitConstantPragma~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~53~|~43~|~Long number not separated with underscores~|~See page 59 of PBP~|~ValuesAndExpressions::RequireNumberSeparators~||~
lib/BOM/Event/Actions/MT5.pm~|~4~|~54~|~1~|~Pragma "constant" used~|~See page 55 of PBP~|~ValuesAndExpressions::ProhibitConstantPragma~||~
lib/BOM/Event/Actions/MT5.pm~|~4~|~55~|~1~|~Pragma "constant" used~|~See page 55 of PBP~|~ValuesAndExpressions::ProhibitConstantPragma~||~
lib/BOM/Event/Actions/MT5.pm~|~4~|~56~|~1~|~Pragma "constant" used~|~See page 55 of PBP~|~ValuesAndExpressions::ProhibitConstantPragma~||~
lib/BOM/Event/Actions/MT5.pm~|~4~|~57~|~1~|~Pragma "constant" used~|~See page 55 of PBP~|~ValuesAndExpressions::ProhibitConstantPragma~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~59~|~1~|~Missing "NAME" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~59~|~1~|~Missing "VERSION" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~59~|~1~|~Missing "SYNOPSIS" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~59~|~1~|~Missing "DESCRIPTION" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~59~|~1~|~Missing "SUBROUTINES/METHODS" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~59~|~1~|~Missing "DIAGNOSTICS" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~59~|~1~|~Missing "CONFIGURATION AND ENVIRONMENT" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~59~|~1~|~Missing "DEPENDENCIES" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~59~|~1~|~Missing "INCOMPATIBILITIES" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~59~|~1~|~Missing "BUGS AND LIMITATIONS" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~59~|~1~|~Missing "AUTHOR" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~59~|~1~|~Missing "LICENSE AND COPYRIGHT" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/MT5.pm~|~5~|~77~|~5~|~"return" statement with explicit "undef"~|~See page 199 of PBP~|~Subroutines::ProhibitExplicitReturnUndef~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~77~|~18~|~Postfix control "unless" used~|~See pages 96,97 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~86~|~5~|~_Pulp__for_loop_variable_using_my requires 5.004~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~96~|~14~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~109~|~52~|~_perl_5010_operators requires 5.010~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~112~|~27~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~112~|~27~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~114~|~37~|~5 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~119~|~52~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~136~|~69~|~Quotes used with a noisy string~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitNoisyQuotes~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~149~|~26~|~8000 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~185~|~5~|~Found method-call chain of length 5~|~Long chains of method calls indicate code that is too tightly coupled~|~ValuesAndExpressions::ProhibitLongChainsOfMethodCalls~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~186~|~5~|~"unless" block used~|~See page 97 of PBP~|~ControlStructures::ProhibitUnlessBlocks~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~205~|~12~|~Postfix control "unless" used~|~See pages 96,97 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/MT5.pm~|~3~|~207~|~39~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~213~|~65~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~223~|~25~|~Postfix control "for" used~|~See page 96 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~229~|~90~|~Quotes used with a noisy string~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitNoisyQuotes~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~238~|~47~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~259~|~27~|~Postfix control "if" used~|~See pages 93,94 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~261~|~38~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
lib/BOM/Event/Actions/MT5.pm~|~3~|~261~|~38~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~261~|~38~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~265~|~9~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
lib/BOM/Event/Actions/MT5.pm~|~4~|~287~|~1~|~Module does not end with "1;"~|~Must end with a recognizable true value~|~Modules::RequireEndWithOne~||~
lib/BOM/Event/Actions/MT5.pm~|~3~|~292~|~5~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~292~|~31~|~Postfix control "unless" used~|~See pages 96,97 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/MT5.pm~|~3~|~293~|~5~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~293~|~31~|~Postfix control "unless" used~|~See pages 96,97 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/MT5.pm~|~3~|~299~|~5~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~299~|~100~|~-1 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~299~|~105~|~4294967295 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~299~|~105~|~Long number not separated with underscores~|~See page 59 of PBP~|~ValuesAndExpressions::RequireNumberSeparators~||~
lib/BOM/Event/Actions/MT5.pm~|~3~|~300~|~5~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~308~|~30~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
lib/BOM/Event/Actions/MT5.pm~|~3~|~328~|~5~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~328~|~35~|~Postfix control "unless" used~|~See pages 96,97 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/MT5.pm~|~3~|~368~|~71~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
lib/BOM/Event/Actions/MT5.pm~|~3~|~369~|~71~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~375~|~36~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
lib/BOM/Event/Actions/MT5.pm~|~3~|~412~|~71~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
lib/BOM/Event/Actions/MT5.pm~|~3~|~413~|~71~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~440~|~12~|~Postfix control "unless" used~|~See pages 96,97 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~440~|~58~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~444~|~18~|~Postfix control "if" used~|~See pages 93,94 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~448~|~25~|~Quotes used with a noisy string~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitNoisyQuotes~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~508~|~32~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~508~|~32~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
lib/BOM/Event/Actions/MT5.pm~|~3~|~513~|~13~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
lib/BOM/Event/Actions/MT5.pm~|~3~|~516~|~9~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~516~|~110~|~Postfix control "unless" used~|~See pages 96,97 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~525~|~31~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
lib/BOM/Event/Actions/MT5.pm~|~3~|~528~|~9~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~528~|~81~|~Postfix control "unless" used~|~See pages 96,97 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/MT5.pm~|~3~|~529~|~9~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~559~|~22~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
lib/BOM/Event/Actions/MT5.pm~|~3~|~562~|~5~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~562~|~69~|~Postfix control "unless" used~|~See pages 96,97 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/MT5.pm~|~3~|~566~|~5~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~566~|~52~|~Postfix control "unless" used~|~See pages 96,97 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/MT5.pm~|~3~|~568~|~5~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~568~|~94~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
lib/BOM/Event/Actions/MT5.pm~|~3~|~568~|~94~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~568~|~94~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
lib/BOM/Event/Actions/MT5.pm~|~3~|~572~|~5~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~572~|~76~|~Postfix control "unless" used~|~See pages 96,97 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/MT5.pm~|~3~|~575~|~9~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~579~|~30~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
lib/BOM/Event/Actions/MT5.pm~|~3~|~579~|~30~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~579~|~30~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~579~|~63~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
lib/BOM/Event/Actions/MT5.pm~|~3~|~579~|~63~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~579~|~63~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~579~|~136~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~580~|~40~|~Postfix control "if" used~|~See pages 93,94 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~583~|~5~|~"unless" block used~|~See page 97 of PBP~|~ControlStructures::ProhibitUnlessBlocks~||~
lib/BOM/Event/Actions/MT5.pm~|~3~|~588~|~5~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~633~|~5~|~"unless" block used~|~See page 97 of PBP~|~ControlStructures::ProhibitUnlessBlocks~||~
lib/BOM/Event/Actions/MT5.pm~|~3~|~635~|~9~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
lib/BOM/Event/Actions/MT5.pm~|~3~|~668~|~68~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~680~|~77~|~Postfix control "if" used~|~See pages 93,94 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~701~|~6~|~Put semicolon ; on last statement in a block~|~(no explanation)~|~CodeLayout::RequireFinalSemicolon~||~
lib/BOM/Event/Actions/MT5.pm~|~3~|~719~|~1~|~Duplicate sibling =head "Comment", previously seen at line 11~|~(no explanation)~|~Documentation::ProhibitDuplicateHeadings~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~735~|~14~|~Postfix control "unless" used~|~See pages 96,97 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~741~|~13~|~"unless" block used~|~See page 97 of PBP~|~ControlStructures::ProhibitUnlessBlocks~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~748~|~17~|~"unless" block used~|~See page 97 of PBP~|~ControlStructures::ProhibitUnlessBlocks~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~754~|~17~|~"unless" block used~|~See page 97 of PBP~|~ControlStructures::ProhibitUnlessBlocks~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~762~|~52~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~766~|~69~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~782~|~65~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
lib/BOM/Event/Actions/MT5.pm~|~3~|~782~|~65~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~782~|~65~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~811~|~29~|~Postfix control "if" used~|~See pages 93,94 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/MT5.pm~|~3~|~813~|~25~|~Code structure is deeply nested~|~Consider refactoring~|~ControlStructures::ProhibitDeepNests~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~821~|~86~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~824~|~78~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~826~|~70~|~Postfix control "if" used~|~See pages 93,94 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/MT5.pm~|~3~|~832~|~25~|~Code structure is deeply nested~|~Consider refactoring~|~ControlStructures::ProhibitDeepNests~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~853~|~48~|~Postfix control "unless" used~|~See pages 96,97 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~889~|~113~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~895~|~34~|~Postfix control "unless" used~|~See pages 96,97 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~906~|~5~|~Postfix control "unless" used~|~See pages 96,97 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~911~|~5~|~Postfix control "unless" used~|~See pages 96,97 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~921~|~49~|~Postfix control "if" used~|~See pages 93,94 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~925~|~5~|~"unless" block used~|~See page 97 of PBP~|~ControlStructures::ProhibitUnlessBlocks~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~940~|~5~|~"unless" block used~|~See page 97 of PBP~|~ControlStructures::ProhibitUnlessBlocks~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~945~|~44~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~955~|~10~|~Put semicolon ; on last statement in a block~|~(no explanation)~|~CodeLayout::RequireFinalSemicolon~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~973~|~5~|~Postfix control "if" used~|~See pages 93,94 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~974~|~9~|~"unless" block used~|~See page 97 of PBP~|~ControlStructures::ProhibitUnlessBlocks~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~980~|~13~|~Postfix control "if" used~|~See pages 93,94 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~982~|~18~|~Postfix control "unless" used~|~See pages 96,97 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~986~|~110~|~Postfix control "if" used~|~See pages 93,94 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~989~|~104~|~Postfix control "if" used~|~See pages 93,94 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~1004~|~14~|~Postfix control "unless" used~|~See pages 96,97 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~1008~|~9~|~Postfix control "if" used~|~See pages 93,94 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~1014~|~18~|~Postfix control "unless" used~|~See pages 96,97 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~1025~|~9~|~Postfix control "unless" used~|~See pages 96,97 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~1028~|~10~|~Put semicolon ; on last statement in a block~|~(no explanation)~|~CodeLayout::RequireFinalSemicolon~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~1086~|~42~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~1106~|~32~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~1111~|~17~|~"unless" block used~|~See page 97 of PBP~|~ControlStructures::ProhibitUnlessBlocks~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~1133~|~50~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~1143~|~17~|~Postfix control "if" used~|~See pages 93,94 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~1146~|~10~|~Put semicolon ; on last statement in a block~|~(no explanation)~|~CodeLayout::RequireFinalSemicolon~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~1153~|~58~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~1225~|~44~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~1254~|~33~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~1263~|~31~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~1264~|~52~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~1278~|~44~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~1310~|~29~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~1317~|~14~|~Postfix control "unless" used~|~See pages 96,97 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~1319~|~26~|~Postfix control "if" used~|~See pages 93,94 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~1320~|~26~|~Postfix control "if" used~|~See pages 93,94 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~1325~|~58~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~1328~|~33~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~1335~|~21~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~1342~|~85~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~1345~|~34~|~Quotes used with a noisy string~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitNoisyQuotes~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~1349~|~146~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~1356~|~26~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~1369~|~46~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~1375~|~21~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~1380~|~29~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~1381~|~56~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~1384~|~34~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~1387~|~34~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~1391~|~33~|~Quotes used with a noisy string~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitNoisyQuotes~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~1394~|~33~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~1394~|~67~|~Quotes used with a noisy string~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitNoisyQuotes~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~1403~|~45~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~1408~|~10~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~1408~|~46~|~Postfix control "if" used~|~See pages 93,94 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~1409~|~10~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~1409~|~46~|~Postfix control "if" used~|~See pages 93,94 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~1409~|~61~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
lib/BOM/Event/Actions/MT5.pm~|~3~|~1465~|~5~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~1465~|~39~|~Postfix control "unless" used~|~See pages 96,97 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/MT5.pm~|~3~|~1466~|~5~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~1466~|~39~|~Postfix control "unless" used~|~See pages 96,97 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~1478~|~6~|~Put semicolon ; on last statement in a block~|~(no explanation)~|~CodeLayout::RequireFinalSemicolon~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~1499~|~76~|~Postfix control "if" used~|~See pages 93,94 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~1500~|~31~|~Postfix control "unless" used~|~See pages 96,97 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~1501~|~69~|~Postfix control "unless" used~|~See pages 96,97 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/MT5.pm~|~3~|~1503~|~5~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~1503~|~39~|~Postfix control "unless" used~|~See pages 96,97 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/MT5.pm~|~3~|~1504~|~5~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~1504~|~39~|~Postfix control "unless" used~|~See pages 96,97 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/MT5.pm~|~3~|~1505~|~5~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~1505~|~39~|~Postfix control "unless" used~|~See pages 96,97 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~1512~|~14~|~Postfix control "unless" used~|~See pages 96,97 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~1512~|~51~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~1515~|~75~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
lib/BOM/Event/Actions/MT5.pm~|~3~|~1515~|~75~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~1515~|~75~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~1521~|~13~|~Postfix control "unless" used~|~See pages 96,97 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~1522~|~13~|~List of quoted literal words~|~Use 'qw()' instead~|~CodeLayout::ProhibitQuotedWordLists~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~1524~|~61~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~1541~|~72~|~Postfix control "if" used~|~See pages 93,94 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~1545~|~9~|~Postfix control "if" used~|~See pages 93,94 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~1553~|~29~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~1554~|~75~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~1558~|~38~|~Postfix control "if" used~|~See pages 93,94 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~1558~|~71~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~1559~|~38~|~Postfix control "if" used~|~See pages 93,94 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~1578~|~48~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
lib/BOM/Event/Actions/MT5.pm~|~3~|~1598~|~5~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~1598~|~45~|~Postfix control "unless" used~|~See pages 96,97 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/MT5.pm~|~3~|~1607~|~13~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~1607~|~17~|~Postfix control "unless" used~|~See pages 96,97 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~1614~|~14~|~Put semicolon ; on last statement in a block~|~(no explanation)~|~CodeLayout::RequireFinalSemicolon~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~1617~|~9~|~Postfix control "unless" used~|~See pages 96,97 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~1626~|~9~|~"unless" block used~|~See page 97 of PBP~|~ControlStructures::ProhibitUnlessBlocks~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~1636~|~18~|~Postfix control "unless" used~|~See pages 96,97 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~1641~|~9~|~"unless" block used~|~See page 97 of PBP~|~ControlStructures::ProhibitUnlessBlocks~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~1652~|~41~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~1659~|~14~|~Put semicolon ; on last statement in a block~|~(no explanation)~|~CodeLayout::RequireFinalSemicolon~||~
lib/BOM/Event/Actions/MT5.pm~|~3~|~1666~|~17~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~1666~|~21~|~Postfix control "unless" used~|~See pages 96,97 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~1678~|~49~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~1683~|~14~|~Put semicolon ; on last statement in a block~|~(no explanation)~|~CodeLayout::RequireFinalSemicolon~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~1688~|~27~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~1690~|~68~|~Postfix control "if" used~|~See pages 93,94 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~1691~|~68~|~Postfix control "if" used~|~See pages 93,94 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~1695~|~27~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~1701~|~23~|~Quotes used with a noisy string~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitNoisyQuotes~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~1701~|~29~|~20 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~1702~|~96~|~Postfix control "if" used~|~See pages 93,94 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~1703~|~96~|~Postfix control "if" used~|~See pages 93,94 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~1705~|~66~|~Postfix control "unless" used~|~See pages 96,97 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/MT5.pm~|~3~|~1737~|~26~|~Literal line breaks in a string~|~See pages 60,61 of PBP~|~ValuesAndExpressions::ProhibitImplicitNewlines~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~1740~|~26~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
lib/BOM/Event/Actions/MT5.pm~|~3~|~1749~|~25~|~Literal line breaks in a string~|~See pages 60,61 of PBP~|~ValuesAndExpressions::ProhibitImplicitNewlines~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~1755~|~40~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~1759~|~13~|~"unless" block used~|~See page 97 of PBP~|~ControlStructures::ProhibitUnlessBlocks~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~1759~|~21~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~1786~|~64~|~Postfix control "if" used~|~See pages 93,94 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~1792~|~9~|~Postfix control "if" used~|~See pages 93,94 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~1802~|~23~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
lib/BOM/Event/Actions/MT5.pm~|~3~|~1835~|~9~|~Found "<" in condition for an "unless"~|~See page 99 of PBP~|~ControlStructures::ProhibitNegativeExpressionsInUnlessAndUntilConditions~||~
lib/BOM/Event/Actions/MT5.pm~|~3~|~1835~|~9~|~Found ">" in condition for an "unless"~|~See page 99 of PBP~|~ControlStructures::ProhibitNegativeExpressionsInUnlessAndUntilConditions~||~
lib/BOM/Event/Actions/MT5.pm~|~3~|~1835~|~9~|~Found "ne" in condition for an "unless"~|~See page 99 of PBP~|~ControlStructures::ProhibitNegativeExpressionsInUnlessAndUntilConditions~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~1835~|~9~|~Postfix control "unless" used~|~See pages 96,97 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~1853~|~17~|~"unless" block used~|~See page 97 of PBP~|~ControlStructures::ProhibitUnlessBlocks~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~1882~|~46~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~1889~|~36~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
lib/BOM/Event/Actions/MT5.pm~|~3~|~1895~|~33~|~Literal line breaks in a string~|~See pages 60,61 of PBP~|~ValuesAndExpressions::ProhibitImplicitNewlines~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~1897~|~50~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~1919~|~9~|~"unless" block used~|~See page 97 of PBP~|~ControlStructures::ProhibitUnlessBlocks~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~1983~|~79~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~1984~|~121~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
lib/BOM/Event/Actions/MT5.pm~|~5~|~1987~|~5~|~"return" statement with explicit "undef"~|~See page 199 of PBP~|~Subroutines::ProhibitExplicitReturnUndef~||~
lib/BOM/Event/Actions/MT5.pm~|~3~|~2019~|~5~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
lib/BOM/Event/Actions/MT5.pm~|~3~|~2020~|~5~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~2020~|~75~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
lib/BOM/Event/Actions/MT5.pm~|~3~|~2020~|~75~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~2020~|~75~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
lib/BOM/Event/Actions/MT5.pm~|~3~|~2021~|~5~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~2033~|~34~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
lib/BOM/Event/Actions/MT5.pm~|~3~|~2033~|~34~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~2033~|~34~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~2049~|~10~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
lib/BOM/Event/Actions/MT5.pm~|~2~|~2058~|~10~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
lib/BOM/Event/Actions/MT5.pm~|~5~|~2118~|~5~|~"return" statement with explicit "undef"~|~See page 199 of PBP~|~Subroutines::ProhibitExplicitReturnUndef~||~
lib/BOM/Event/Actions/Email.pm~|~2~|~1~|~1~|~No package-scoped "$VERSION" variable found~|~See page 404 of PBP~|~Modules::RequireVersionVar~||~
lib/BOM/Event/Actions/Email.pm~|~2~|~4~|~1~|~_perl_5006_pragmas requires 5.006~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
lib/BOM/Event/Actions/Email.pm~|~2~|~15~|~1~|~Missing "NAME" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/Email.pm~|~2~|~15~|~1~|~Missing "VERSION" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/Email.pm~|~2~|~15~|~1~|~Missing "SYNOPSIS" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/Email.pm~|~2~|~15~|~1~|~Missing "DESCRIPTION" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/Email.pm~|~2~|~15~|~1~|~Missing "SUBROUTINES/METHODS" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/Email.pm~|~2~|~15~|~1~|~Missing "DIAGNOSTICS" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/Email.pm~|~2~|~15~|~1~|~Missing "CONFIGURATION AND ENVIRONMENT" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/Email.pm~|~2~|~15~|~1~|~Missing "DEPENDENCIES" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/Email.pm~|~2~|~15~|~1~|~Missing "INCOMPATIBILITIES" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/Email.pm~|~2~|~15~|~1~|~Missing "BUGS AND LIMITATIONS" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/Email.pm~|~2~|~15~|~1~|~Missing "AUTHOR" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/Email.pm~|~2~|~15~|~1~|~Missing "LICENSE AND COPYRIGHT" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/Email.pm~|~2~|~26~|~1~|~Pod requires perl 5.008 due to: =head3 command~|~(no explanation)~|~Compatibility::PodMinimumVersion~||~
lib/BOM/Event/Actions/Email.pm~|~2~|~73~|~31~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
lib/BOM/Event/Actions/Email.pm~|~2~|~74~|~7~|~Postfix control "unless" used~|~See pages 96,97 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/Email.pm~|~3~|~103~|~11~|~Package variable declared or used~|~See pages 73,75 of PBP~|~Variables::ProhibitPackageVars~||~
lib/BOM/Event/Actions/Email.pm~|~3~|~105~|~9~|~Package variable declared or used~|~See pages 73,75 of PBP~|~Variables::ProhibitPackageVars~||~
lib/BOM/Event/Actions/Email.pm~|~2~|~106~|~22~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
lib/BOM/Event/Actions/P2P.pm~|~3~|~1~|~1~|~Main code has high complexity score (70)~|~Consider refactoring~|~Modules::ProhibitExcessMainComplexity~||~
lib/BOM/Event/Actions/P2P.pm~|~2~|~1~|~1~|~No package-scoped "$VERSION" variable found~|~See page 404 of PBP~|~Modules::RequireVersionVar~||~
lib/BOM/Event/Actions/P2P.pm~|~2~|~4~|~1~|~_perl_5006_pragmas requires 5.006~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
lib/BOM/Event/Actions/P2P.pm~|~2~|~8~|~1~|~_perl_5010_pragmas requires 5.010~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
lib/BOM/Event/Actions/P2P.pm~|~2~|~10~|~1~|~Missing "VERSION" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/P2P.pm~|~2~|~10~|~1~|~Missing "SYNOPSIS" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/P2P.pm~|~2~|~10~|~1~|~Missing "SUBROUTINES/METHODS" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/P2P.pm~|~2~|~10~|~1~|~Missing "DIAGNOSTICS" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/P2P.pm~|~2~|~10~|~1~|~Missing "CONFIGURATION AND ENVIRONMENT" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/P2P.pm~|~2~|~10~|~1~|~Missing "DEPENDENCIES" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/P2P.pm~|~2~|~10~|~1~|~Missing "INCOMPATIBILITIES" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/P2P.pm~|~2~|~10~|~1~|~Missing "BUGS AND LIMITATIONS" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/P2P.pm~|~2~|~10~|~1~|~Missing "AUTHOR" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/P2P.pm~|~2~|~10~|~1~|~Missing "LICENSE AND COPYRIGHT" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/P2P.pm~|~3~|~48~|~1~|~'use constant' with multi-constant hash requires perl 5.8 or constant 1.03 (at this point have no perl version, no constant version)~|~(no explanation)~|~Compatibility::ConstantPragmaHash~||~
lib/BOM/Event/Actions/P2P.pm~|~4~|~48~|~1~|~Pragma "constant" used~|~See page 55 of PBP~|~ValuesAndExpressions::ProhibitConstantPragma~||~
lib/BOM/Event/Actions/P2P.pm~|~2~|~90~|~5~|~"unless" block used~|~See page 97 of PBP~|~ControlStructures::ProhibitUnlessBlocks~||~
lib/BOM/Event/Actions/P2P.pm~|~2~|~99~|~5~|~_Pulp__for_loop_variable_using_my requires 5.004~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
lib/BOM/Event/Actions/P2P.pm~|~2~|~99~|~22~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
lib/BOM/Event/Actions/P2P.pm~|~2~|~100~|~48~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
lib/BOM/Event/Actions/P2P.pm~|~3~|~100~|~48~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
lib/BOM/Event/Actions/P2P.pm~|~2~|~100~|~48~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
lib/BOM/Event/Actions/P2P.pm~|~2~|~110~|~100~|~_perl_5010_operators requires 5.010~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
lib/BOM/Event/Actions/P2P.pm~|~2~|~138~|~14~|~Postfix control "unless" used~|~See pages 96,97 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/P2P.pm~|~2~|~146~|~44~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
lib/BOM/Event/Actions/P2P.pm~|~2~|~189~|~9~|~"grep" used in boolean context~|~See pages 71,72 of PBP~|~BuiltinFunctions::ProhibitBooleanGrep~||~
lib/BOM/Event/Actions/P2P.pm~|~4~|~209~|~1~|~Module does not end with "1;"~|~Must end with a recognizable true value~|~Modules::RequireEndWithOne~||~
lib/BOM/Event/Actions/P2P.pm~|~2~|~213~|~9~|~"grep" used in boolean context~|~See pages 71,72 of PBP~|~BuiltinFunctions::ProhibitBooleanGrep~||~
lib/BOM/Event/Actions/P2P.pm~|~2~|~248~|~9~|~Postfix control "if" used~|~See pages 93,94 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/P2P.pm~|~2~|~288~|~11~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
lib/BOM/Event/Actions/P2P.pm~|~2~|~300~|~39~|~Postfix control "if" used~|~See pages 93,94 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/P2P.pm~|~2~|~301~|~39~|~Postfix control "if" used~|~See pages 93,94 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/P2P.pm~|~2~|~352~|~49~|~1000 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
lib/BOM/Event/Actions/P2P.pm~|~3~|~356~|~24~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
lib/BOM/Event/Actions/P2P.pm~|~2~|~356~|~60~|~Postfix control "for" used~|~See page 96 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/P2P.pm~|~3~|~455~|~68~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
lib/BOM/Event/Actions/P2P.pm~|~3~|~456~|~68~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
lib/BOM/Event/Actions/P2P.pm~|~3~|~459~|~5~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
lib/BOM/Event/Actions/P2P.pm~|~2~|~459~|~21~|~Postfix control "unless" used~|~See pages 96,97 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/P2P.pm~|~2~|~459~|~41~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
lib/BOM/Event/Actions/P2P.pm~|~2~|~483~|~38~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
lib/BOM/Event/Actions/P2P.pm~|~2~|~487~|~12~|~Postfix control "unless" used~|~See pages 96,97 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/P2P.pm~|~2~|~487~|~33~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
lib/BOM/Event/Actions/P2P.pm~|~2~|~490~|~22~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
lib/BOM/Event/Actions/P2P.pm~|~2~|~491~|~49~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
lib/BOM/Event/Actions/P2P.pm~|~3~|~491~|~49~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
lib/BOM/Event/Actions/P2P.pm~|~2~|~491~|~49~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
lib/BOM/Event/Actions/P2P.pm~|~2~|~499~|~33~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
lib/BOM/Event/Actions/P2P.pm~|~2~|~506~|~14~|~Postfix control "unless" used~|~See pages 96,97 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/P2P.pm~|~2~|~508~|~27~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
lib/BOM/Event/Actions/P2P.pm~|~2~|~540~|~12~|~Postfix control "unless" used~|~See pages 96,97 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/P2P.pm~|~2~|~540~|~72~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
lib/BOM/Event/Actions/P2P.pm~|~2~|~541~|~12~|~Postfix control "unless" used~|~See pages 96,97 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/P2P.pm~|~3~|~554~|~9~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
lib/BOM/Event/Actions/P2P.pm~|~2~|~599~|~34~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
lib/BOM/Event/Actions/P2P.pm~|~2~|~617~|~9~|~"grep" used in boolean context~|~See pages 71,72 of PBP~|~BuiltinFunctions::ProhibitBooleanGrep~||~
lib/BOM/Event/Actions/P2P.pm~|~2~|~671~|~9~|~Found method-call chain of length 4~|~Long chains of method calls indicate code that is too tightly coupled~|~ValuesAndExpressions::ProhibitLongChainsOfMethodCalls~||~
lib/BOM/Event/Actions/P2P.pm~|~2~|~674~|~17~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
lib/BOM/Event/Actions/P2P.pm~|~2~|~677~|~76~|~Quotes used with a noisy string~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitNoisyQuotes~||~
lib/BOM/Event/Actions/P2P.pm~|~2~|~705~|~76~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
lib/BOM/Event/Actions/P2P.pm~|~2~|~720~|~47~|~_Pulp__UNIVERSAL_methods_5004 requires 5.004~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
lib/BOM/Event/Actions/P2P.pm~|~2~|~723~|~28~|~Postfix control "unless" used~|~See pages 96,97 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/P2P.pm~|~2~|~725~|~19~|~_Pulp__arrow_coderef_call requires 5.004~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
lib/BOM/Event/Actions/P2P.pm~|~2~|~734~|~32~|~Useless use of $_~|~$_ should be omitted when calling "uc"~|~BuiltinFunctions::ProhibitUselessTopic~||~
lib/BOM/Event/Actions/P2P.pm~|~2~|~774~|~47~|~-1 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
lib/BOM/Event/Actions/P2P.pm~|~2~|~776~|~90~|~-1 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
lib/BOM/Event/Actions/P2P.pm~|~2~|~777~|~89~|~-1 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
lib/BOM/Event/Actions/P2P.pm~|~2~|~780~|~41~|~-1 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
lib/BOM/Event/Actions/P2P.pm~|~2~|~824~|~22~|~String delimiter used with "split"~|~Express it as a regex instead~|~BuiltinFunctions::ProhibitStringySplit~||~
lib/BOM/Event/Actions/P2P.pm~|~2~|~824~|~28~|~Quotes used with a noisy string~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitNoisyQuotes~||~
lib/BOM/Event/Actions/P2P.pm~|~2~|~825~|~14~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
lib/BOM/Event/Actions/P2P.pm~|~2~|~827~|~43~|~3 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
lib/BOM/Event/Actions/P2P.pm~|~2~|~828~|~43~|~4 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
lib/BOM/Event/Actions/P2P.pm~|~2~|~829~|~43~|~5 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
lib/BOM/Event/Actions/P2P.pm~|~2~|~829~|~49~|~-1 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
lib/BOM/Event/Actions/P2P.pm~|~2~|~830~|~43~|~6 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
lib/BOM/Event/Actions/P2P.pm~|~2~|~832~|~51~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
lib/BOM/Event/Actions/P2P.pm~|~2~|~836~|~67~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
lib/BOM/Event/Actions/P2P.pm~|~3~|~837~|~12~|~Found "!" in condition for an "unless"~|~See page 99 of PBP~|~ControlStructures::ProhibitNegativeExpressionsInUnlessAndUntilConditions~||~
lib/BOM/Event/Actions/P2P.pm~|~2~|~837~|~12~|~Postfix control "unless" used~|~See pages 96,97 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/P2P.pm~|~2~|~837~|~91~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
lib/BOM/Event/Actions/P2P.pm~|~2~|~845~|~26~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
lib/BOM/Event/Actions/P2P.pm~|~3~|~849~|~14~|~Found "not" in condition for an "unless"~|~See page 99 of PBP~|~ControlStructures::ProhibitNegativeExpressionsInUnlessAndUntilConditions~||~
lib/BOM/Event/Actions/P2P.pm~|~2~|~849~|~14~|~Postfix control "unless" used~|~See pages 96,97 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/P2P.pm~|~2~|~849~|~94~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
lib/BOM/Event/Actions/P2P.pm~|~3~|~853~|~13~|~Reused variable name in lexical scope: $loginid~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
lib/BOM/Event/Actions/Common.pm~|~3~|~1~|~1~|~Main code has high complexity score (29)~|~Consider refactoring~|~Modules::ProhibitExcessMainComplexity~||~
lib/BOM/Event/Actions/Common.pm~|~2~|~1~|~1~|~No package-scoped "$VERSION" variable found~|~See page 404 of PBP~|~Modules::RequireVersionVar~||~
lib/BOM/Event/Actions/Common.pm~|~2~|~3~|~1~|~Missing "VERSION" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/Common.pm~|~2~|~3~|~1~|~Missing "SYNOPSIS" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/Common.pm~|~2~|~3~|~1~|~Missing "SUBROUTINES/METHODS" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/Common.pm~|~2~|~3~|~1~|~Missing "DIAGNOSTICS" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/Common.pm~|~2~|~3~|~1~|~Missing "CONFIGURATION AND ENVIRONMENT" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/Common.pm~|~2~|~3~|~1~|~Missing "DEPENDENCIES" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/Common.pm~|~2~|~3~|~1~|~Missing "INCOMPATIBILITIES" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/Common.pm~|~2~|~3~|~1~|~Missing "BUGS AND LIMITATIONS" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/Common.pm~|~2~|~3~|~1~|~Missing "AUTHOR" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/Common.pm~|~2~|~3~|~1~|~Missing "LICENSE AND COPYRIGHT" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/Common.pm~|~2~|~14~|~1~|~_perl_5006_pragmas requires 5.006~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
lib/BOM/Event/Actions/Common.pm~|~4~|~37~|~1~|~Pragma "constant" used~|~See page 55 of PBP~|~ValuesAndExpressions::ProhibitConstantPragma~||~
lib/BOM/Event/Actions/Common.pm~|~4~|~39~|~1~|~Pragma "constant" used~|~See page 55 of PBP~|~ValuesAndExpressions::ProhibitConstantPragma~||~
lib/BOM/Event/Actions/Common.pm~|~4~|~41~|~1~|~Pragma "constant" used~|~See page 55 of PBP~|~ValuesAndExpressions::ProhibitConstantPragma~||~
lib/BOM/Event/Actions/Common.pm~|~4~|~43~|~1~|~Pragma "constant" used~|~See page 55 of PBP~|~ValuesAndExpressions::ProhibitConstantPragma~||~
lib/BOM/Event/Actions/Common.pm~|~2~|~43~|~44~|~Long number not separated with underscores~|~See page 59 of PBP~|~ValuesAndExpressions::RequireNumberSeparators~||~
lib/BOM/Event/Actions/Common.pm~|~4~|~65~|~1~|~Module does not end with "1;"~|~Must end with a recognizable true value~|~Modules::RequireEndWithOne~||~
lib/BOM/Event/Actions/Common.pm~|~2~|~68~|~35~|~Postfix control "unless" used~|~See pages 96,97 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/Common.pm~|~5~|~75~|~5~|~"return" statement with explicit "undef"~|~See page 199 of PBP~|~Subroutines::ProhibitExplicitReturnUndef~||~
lib/BOM/Event/Actions/Common.pm~|~5~|~76~|~5~|~"return" statement with explicit "undef"~|~See page 199 of PBP~|~Subroutines::ProhibitExplicitReturnUndef~||~
lib/BOM/Event/Actions/Common.pm~|~2~|~92~|~12~|~_Pulp__arrow_coderef_call requires 5.004~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
lib/BOM/Event/Actions/Common.pm~|~2~|~95~|~5~|~Found method-call chain of length 4~|~Long chains of method calls indicate code that is too tightly coupled~|~ValuesAndExpressions::ProhibitLongChainsOfMethodCalls~||~
lib/BOM/Event/Actions/Common.pm~|~2~|~106~|~5~|~_Pulp__for_loop_variable_using_my requires 5.004~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
lib/BOM/Event/Actions/Common.pm~|~2~|~108~|~14~|~Postfix control "unless" used~|~See pages 96,97 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/Common.pm~|~2~|~108~|~84~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
lib/BOM/Event/Actions/Common.pm~|~2~|~115~|~61~|~_perl_5010_operators requires 5.010~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
lib/BOM/Event/Actions/Common.pm~|~5~|~144~|~5~|~"return" statement with explicit "undef"~|~See page 199 of PBP~|~Subroutines::ProhibitExplicitReturnUndef~||~
lib/BOM/Event/Actions/Common.pm~|~2~|~144~|~18~|~Postfix control "unless" used~|~See pages 96,97 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/Common.pm~|~5~|~145~|~5~|~"return" statement with explicit "undef"~|~See page 199 of PBP~|~Subroutines::ProhibitExplicitReturnUndef~||~
lib/BOM/Event/Actions/Common.pm~|~5~|~146~|~5~|~"return" statement with explicit "undef"~|~See page 199 of PBP~|~Subroutines::ProhibitExplicitReturnUndef~||~
lib/BOM/Event/Actions/Common.pm~|~2~|~146~|~18~|~Postfix control "unless" used~|~See pages 96,97 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/Common.pm~|~2~|~152~|~5~|~Found method-call chain of length 5~|~Long chains of method calls indicate code that is too tightly coupled~|~ValuesAndExpressions::ProhibitLongChainsOfMethodCalls~||~
lib/BOM/Event/Actions/Common.pm~|~2~|~183~|~80~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
lib/BOM/Event/Actions/Common.pm~|~2~|~196~|~27~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
lib/BOM/Event/Actions/Common.pm~|~3~|~217~|~13~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
lib/BOM/Event/Actions/Common.pm~|~3~|~219~|~13~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
lib/BOM/Event/Actions/Common.pm~|~2~|~219~|~13~|~Found method-call chain of length 5~|~Long chains of method calls indicate code that is too tightly coupled~|~ValuesAndExpressions::ProhibitLongChainsOfMethodCalls~||~
lib/BOM/Event/Actions/Common.pm~|~2~|~220~|~17~|~Postfix control "unless" used~|~See pages 96,97 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/Common.pm~|~2~|~224~|~10~|~Put semicolon ; on last statement in a block~|~(no explanation)~|~CodeLayout::RequireFinalSemicolon~||~
lib/BOM/Event/Actions/Common.pm~|~2~|~227~|~65~|~Postfix control "if" used~|~See pages 93,94 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/Common.pm~|~2~|~234~|~115~|~Postfix control "if" used~|~See pages 93,94 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/Common.pm~|~3~|~240~|~9~|~Reused variable name in lexical scope: $brand~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
lib/BOM/Event/Actions/Common.pm~|~5~|~253~|~5~|~"return" statement with explicit "undef"~|~See page 199 of PBP~|~Subroutines::ProhibitExplicitReturnUndef~||~
lib/BOM/Event/Actions/Common.pm~|~2~|~276~|~12~|~Postfix control "unless" used~|~See pages 96,97 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/Common.pm~|~2~|~281~|~68~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
lib/BOM/Event/Actions/Common.pm~|~5~|~302~|~5~|~"return" statement with explicit "undef"~|~See page 199 of PBP~|~Subroutines::ProhibitExplicitReturnUndef~||~
lib/BOM/Event/Actions/Common.pm~|~2~|~316~|~5~|~"unless" block used~|~See page 97 of PBP~|~ControlStructures::ProhibitUnlessBlocks~||~
lib/BOM/Event/Actions/CryptoCashier.pm~|~2~|~1~|~1~|~No package-scoped "$VERSION" variable found~|~See page 404 of PBP~|~Modules::RequireVersionVar~||~
lib/BOM/Event/Actions/CryptoCashier.pm~|~2~|~4~|~1~|~_perl_5006_pragmas requires 5.006~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
lib/BOM/Event/Actions/CryptoCashier.pm~|~2~|~6~|~1~|~Missing "VERSION" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/CryptoCashier.pm~|~2~|~6~|~1~|~Missing "SYNOPSIS" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/CryptoCashier.pm~|~2~|~6~|~1~|~Missing "SUBROUTINES/METHODS" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/CryptoCashier.pm~|~2~|~6~|~1~|~Missing "DIAGNOSTICS" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/CryptoCashier.pm~|~2~|~6~|~1~|~Missing "CONFIGURATION AND ENVIRONMENT" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/CryptoCashier.pm~|~2~|~6~|~1~|~Missing "DEPENDENCIES" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/CryptoCashier.pm~|~2~|~6~|~1~|~Missing "INCOMPATIBILITIES" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/CryptoCashier.pm~|~2~|~6~|~1~|~Missing "BUGS AND LIMITATIONS" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/CryptoCashier.pm~|~2~|~6~|~1~|~Missing "AUTHOR" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/CryptoCashier.pm~|~2~|~6~|~1~|~Missing "LICENSE AND COPYRIGHT" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/CryptoCashier.pm~|~3~|~23~|~1~|~'use constant' with multi-constant hash requires perl 5.8 or constant 1.03 (at this point have no perl version, no constant version)~|~(no explanation)~|~Compatibility::ConstantPragmaHash~||~
lib/BOM/Event/Actions/CryptoCashier.pm~|~4~|~23~|~1~|~Pragma "constant" used~|~See page 55 of PBP~|~ValuesAndExpressions::ProhibitConstantPragma~||~
lib/BOM/Event/Actions/CryptoCashier.pm~|~4~|~27~|~1~|~Pragma "constant" used~|~See page 55 of PBP~|~ValuesAndExpressions::ProhibitConstantPragma~||~
lib/BOM/Event/Actions/CryptoCashier.pm~|~4~|~92~|~1~|~Subroutine "crypto_cashier_transaction_updated" does not end with "return"~|~See page 197 of PBP~|~Subroutines::RequireFinalReturn~||~
lib/BOM/Event/Actions/CryptoCashier.pm~|~2~|~110~|~23~|~_Pulp__arrow_coderef_call requires 5.004~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
lib/BOM/Event/Actions/CryptoCashier.pm~|~2~|~110~|~51~|~Postfix control "if" used~|~See pages 93,94 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/CryptoCashier.pm~|~4~|~127~|~1~|~Subroutine "withdrawal_handler" does not end with "return"~|~See page 197 of PBP~|~Subroutines::RequireFinalReturn~||~
lib/BOM/Event/Actions/CryptoCashier.pm~|~2~|~140~|~10~|~Put semicolon ; on last statement in a block~|~(no explanation)~|~CodeLayout::RequireFinalSemicolon~||~
lib/BOM/Event/Actions/CryptoCashier.pm~|~2~|~149~|~93~|~_perl_5010_operators requires 5.010~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
lib/BOM/Event/Actions/CryptoCashier.pm~|~3~|~157~|~21~|~Unknown or unnecessary backslash \_~|~(no explanation)~|~ValuesAndExpressions::ProhibitUnknownBackslash~||~
lib/BOM/Event/Actions/CryptoCashier.pm~|~2~|~158~|~6~|~Put semicolon ; on last statement in a block~|~(no explanation)~|~CodeLayout::RequireFinalSemicolon~||~
lib/BOM/Event/Actions/CryptoCashier.pm~|~4~|~175~|~1~|~Subroutine "deposit_handler" does not end with "return"~|~See page 197 of PBP~|~Subroutines::RequireFinalReturn~||~
lib/BOM/Event/Actions/CryptoCashier.pm~|~3~|~191~|~21~|~Unknown or unnecessary backslash \_~|~(no explanation)~|~ValuesAndExpressions::ProhibitUnknownBackslash~||~
lib/BOM/Event/Actions/CryptoCashier.pm~|~2~|~192~|~6~|~Put semicolon ; on last statement in a block~|~(no explanation)~|~CodeLayout::RequireFinalSemicolon~||~
lib/BOM/Event/Actions/CryptoCashier.pm~|~4~|~209~|~1~|~Subroutine "withdrawal_rejected_handler" does not end with "return"~|~See page 197 of PBP~|~Subroutines::RequireFinalReturn~||~
lib/BOM/Event/Actions/CryptoCashier.pm~|~2~|~221~|~133~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
lib/BOM/Event/Actions/CryptoCashier.pm~|~2~|~226~|~6~|~Put semicolon ; on last statement in a block~|~(no explanation)~|~CodeLayout::RequireFinalSemicolon~||~
lib/BOM/Event/Actions/Contract.pm~|~2~|~1~|~1~|~No package-scoped "$VERSION" variable found~|~See page 404 of PBP~|~Modules::RequireVersionVar~||~
lib/BOM/Event/Actions/Contract.pm~|~2~|~4~|~1~|~_perl_5006_pragmas requires 5.006~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
lib/BOM/Event/Actions/Contract.pm~|~2~|~12~|~1~|~Missing "VERSION" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/Contract.pm~|~2~|~12~|~1~|~Missing "SYNOPSIS" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/Contract.pm~|~2~|~12~|~1~|~Missing "SUBROUTINES/METHODS" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/Contract.pm~|~2~|~12~|~1~|~Missing "DIAGNOSTICS" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/Contract.pm~|~2~|~12~|~1~|~Missing "CONFIGURATION AND ENVIRONMENT" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/Contract.pm~|~2~|~12~|~1~|~Missing "DEPENDENCIES" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/Contract.pm~|~2~|~12~|~1~|~Missing "INCOMPATIBILITIES" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/Contract.pm~|~2~|~12~|~1~|~Missing "BUGS AND LIMITATIONS" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/Contract.pm~|~2~|~12~|~1~|~Missing "AUTHOR" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/Contract.pm~|~2~|~12~|~1~|~Missing "LICENSE AND COPYRIGHT" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/App.pm~|~2~|~1~|~1~|~No package-scoped "$VERSION" variable found~|~See page 404 of PBP~|~Modules::RequireVersionVar~||~
lib/BOM/Event/Actions/App.pm~|~2~|~4~|~1~|~_perl_5006_pragmas requires 5.006~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
lib/BOM/Event/Actions/App.pm~|~2~|~8~|~1~|~Missing "VERSION" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/App.pm~|~2~|~8~|~1~|~Missing "SYNOPSIS" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/App.pm~|~2~|~8~|~1~|~Missing "SUBROUTINES/METHODS" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/App.pm~|~2~|~8~|~1~|~Missing "DIAGNOSTICS" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/App.pm~|~2~|~8~|~1~|~Missing "CONFIGURATION AND ENVIRONMENT" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/App.pm~|~2~|~8~|~1~|~Missing "DEPENDENCIES" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/App.pm~|~2~|~8~|~1~|~Missing "INCOMPATIBILITIES" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/App.pm~|~2~|~8~|~1~|~Missing "BUGS AND LIMITATIONS" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/App.pm~|~2~|~8~|~1~|~Missing "AUTHOR" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/App.pm~|~2~|~8~|~1~|~Missing "LICENSE AND COPYRIGHT" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/Anonymization.pm~|~3~|~1~|~1~|~Main code has high complexity score (53)~|~Consider refactoring~|~Modules::ProhibitExcessMainComplexity~||~
lib/BOM/Event/Actions/Anonymization.pm~|~2~|~1~|~1~|~No package-scoped "$VERSION" variable found~|~See page 404 of PBP~|~Modules::RequireVersionVar~||~
lib/BOM/Event/Actions/Anonymization.pm~|~2~|~4~|~1~|~_perl_5006_pragmas requires 5.006~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
lib/BOM/Event/Actions/Anonymization.pm~|~4~|~38~|~1~|~Pragma "constant" used~|~See page 55 of PBP~|~ValuesAndExpressions::ProhibitConstantPragma~||~
lib/BOM/Event/Actions/Anonymization.pm~|~2~|~47~|~96~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
lib/BOM/Event/Actions/Anonymization.pm~|~4~|~50~|~1~|~Pragma "constant" used~|~See page 55 of PBP~|~ValuesAndExpressions::ProhibitConstantPragma~||~
lib/BOM/Event/Actions/Anonymization.pm~|~4~|~51~|~1~|~Pragma "constant" used~|~See page 55 of PBP~|~ValuesAndExpressions::ProhibitConstantPragma~||~
lib/BOM/Event/Actions/Anonymization.pm~|~4~|~52~|~1~|~Pragma "constant" used~|~See page 55 of PBP~|~ValuesAndExpressions::ProhibitConstantPragma~||~
lib/BOM/Event/Actions/Anonymization.pm~|~4~|~53~|~1~|~Pragma "constant" used~|~See page 55 of PBP~|~ValuesAndExpressions::ProhibitConstantPragma~||~
lib/BOM/Event/Actions/Anonymization.pm~|~2~|~65~|~1~|~Missing "NAME" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/Anonymization.pm~|~2~|~65~|~1~|~Missing "VERSION" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/Anonymization.pm~|~2~|~65~|~1~|~Missing "SYNOPSIS" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/Anonymization.pm~|~2~|~65~|~1~|~Missing "DESCRIPTION" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/Anonymization.pm~|~2~|~65~|~1~|~Missing "SUBROUTINES/METHODS" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/Anonymization.pm~|~2~|~65~|~1~|~Missing "DIAGNOSTICS" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/Anonymization.pm~|~2~|~65~|~1~|~Missing "CONFIGURATION AND ENVIRONMENT" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/Anonymization.pm~|~2~|~65~|~1~|~Missing "DEPENDENCIES" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/Anonymization.pm~|~2~|~65~|~1~|~Missing "INCOMPATIBILITIES" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/Anonymization.pm~|~2~|~65~|~1~|~Missing "BUGS AND LIMITATIONS" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/Anonymization.pm~|~2~|~65~|~1~|~Missing "AUTHOR" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/Anonymization.pm~|~2~|~65~|~1~|~Missing "LICENSE AND COPYRIGHT" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/Anonymization.pm~|~4~|~79~|~1~|~Module does not end with "1;"~|~Must end with a recognizable true value~|~Modules::RequireEndWithOne~||~
lib/BOM/Event/Actions/Anonymization.pm~|~5~|~83~|~5~|~"return" statement with explicit "undef"~|~See page 199 of PBP~|~Subroutines::ProhibitExplicitReturnUndef~||~
lib/BOM/Event/Actions/Anonymization.pm~|~2~|~83~|~18~|~Postfix control "unless" used~|~See pages 96,97 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/Anonymization.pm~|~5~|~112~|~5~|~"return" statement with explicit "undef"~|~See page 199 of PBP~|~Subroutines::ProhibitExplicitReturnUndef~||~
lib/BOM/Event/Actions/Anonymization.pm~|~2~|~112~|~18~|~Postfix control "unless" used~|~See pages 96,97 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/Anonymization.pm~|~2~|~116~|~46~|~Useless use of $_~|~$_ should be omitted when calling "uc"~|~BuiltinFunctions::ProhibitUselessTopic~||~
lib/BOM/Event/Actions/Anonymization.pm~|~2~|~116~|~60~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
lib/BOM/Event/Actions/Anonymization.pm~|~3~|~116~|~60~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
lib/BOM/Event/Actions/Anonymization.pm~|~2~|~116~|~60~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
lib/BOM/Event/Actions/Anonymization.pm~|~2~|~116~|~129~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
lib/BOM/Event/Actions/Anonymization.pm~|~2~|~117~|~85~|~Postfix control "unless" used~|~See pages 96,97 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/Anonymization.pm~|~2~|~120~|~5~|~_Pulp__for_loop_variable_using_my requires 5.004~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
lib/BOM/Event/Actions/Anonymization.pm~|~2~|~126~|~67~|~_perl_5010_operators requires 5.010~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
lib/BOM/Event/Actions/Anonymization.pm~|~2~|~154~|~55~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
lib/BOM/Event/Actions/Anonymization.pm~|~2~|~166~|~87~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
lib/BOM/Event/Actions/Anonymization.pm~|~2~|~171~|~57~|~Postfix control "if" used~|~See pages 93,94 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/Anonymization.pm~|~2~|~173~|~5~|~Found method-call chain of length 4~|~Long chains of method calls indicate code that is too tightly coupled~|~ValuesAndExpressions::ProhibitLongChainsOfMethodCalls~||~
lib/BOM/Event/Actions/Anonymization.pm~|~2~|~178~|~60~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
lib/BOM/Event/Actions/Anonymization.pm~|~2~|~184~|~13~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
lib/BOM/Event/Actions/Anonymization.pm~|~2~|~187~|~20~|~Useless use of $_~|~$_ should be omitted when calling "split" with two arguments~|~BuiltinFunctions::ProhibitUselessTopic~||~
lib/BOM/Event/Actions/Anonymization.pm~|~2~|~187~|~26~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
lib/BOM/Event/Actions/Anonymization.pm~|~2~|~191~|~42~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
lib/BOM/Event/Actions/Anonymization.pm~|~5~|~224~|~9~|~"return" statement with explicit "undef"~|~See page 199 of PBP~|~Subroutines::ProhibitExplicitReturnUndef~||~
lib/BOM/Event/Actions/Anonymization.pm~|~2~|~227~|~5~|~Found method-call chain of length 5~|~Long chains of method calls indicate code that is too tightly coupled~|~ValuesAndExpressions::ProhibitLongChainsOfMethodCalls~||~
lib/BOM/Event/Actions/Anonymization.pm~|~3~|~228~|~12~|~"warn" used instead of "carp"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
lib/BOM/Event/Actions/Anonymization.pm~|~5~|~230~|~5~|~"return" statement with explicit "undef"~|~See page 199 of PBP~|~Subroutines::ProhibitExplicitReturnUndef~||~
lib/BOM/Event/Actions/Anonymization.pm~|~2~|~251~|~43~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
lib/BOM/Event/Actions/Anonymization.pm~|~2~|~252~|~43~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
lib/BOM/Event/Actions/Anonymization.pm~|~2~|~258~|~29~|~Quotes used with a noisy string~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitNoisyQuotes~||~
lib/BOM/Event/Actions/Anonymization.pm~|~2~|~258~|~44~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
lib/BOM/Event/Actions/Anonymization.pm~|~2~|~258~|~57~|~Postfix control "if" used~|~See pages 93,94 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/Anonymization.pm~|~5~|~273~|~9~|~"return" statement with explicit "undef"~|~See page 199 of PBP~|~Subroutines::ProhibitExplicitReturnUndef~||~
lib/BOM/Event/Actions/Anonymization.pm~|~2~|~276~|~9~|~Found method-call chain of length 6~|~Long chains of method calls indicate code that is too tightly coupled~|~ValuesAndExpressions::ProhibitLongChainsOfMethodCalls~||~
lib/BOM/Event/Actions/Anonymization.pm~|~2~|~281~|~36~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
lib/BOM/Event/Actions/Anonymization.pm~|~3~|~283~|~16~|~"warn" used instead of "carp"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
lib/BOM/Event/Actions/Anonymization.pm~|~2~|~285~|~9~|~Found method-call chain of length 5~|~Long chains of method calls indicate code that is too tightly coupled~|~ValuesAndExpressions::ProhibitLongChainsOfMethodCalls~||~
lib/BOM/Event/Actions/Anonymization.pm~|~3~|~286~|~16~|~"warn" used instead of "carp"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
lib/BOM/Event/Actions/Anonymization.pm~|~5~|~289~|~5~|~"return" statement with explicit "undef"~|~See page 199 of PBP~|~Subroutines::ProhibitExplicitReturnUndef~||~
lib/BOM/Event/Actions/Anonymization.pm~|~2~|~342~|~33~|~Postfix control "unless" used~|~See pages 96,97 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/Anonymization.pm~|~2~|~344~|~31~|~Postfix control "unless" used~|~See pages 96,97 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/Anonymization.pm~|~2~|~345~|~59~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
lib/BOM/Event/Actions/Anonymization.pm~|~3~|~345~|~59~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
lib/BOM/Event/Actions/Anonymization.pm~|~2~|~345~|~59~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
lib/BOM/Event/Actions/Anonymization.pm~|~2~|~355~|~40~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
lib/BOM/Event/Actions/Anonymization.pm~|~2~|~355~|~40~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
lib/BOM/Event/Actions/Anonymization.pm~|~2~|~359~|~65~|~Postfix control "if" used~|~See pages 93,94 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/Anonymization.pm~|~2~|~362~|~26~|~Put semicolon ; on last statement in a block~|~(no explanation)~|~CodeLayout::RequireFinalSemicolon~||~
lib/BOM/Event/Actions/Anonymization.pm~|~2~|~370~|~31~|~Postfix control "unless" used~|~See pages 96,97 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/Anonymization.pm~|~2~|~374~|~30~|~Postfix control "unless" used~|~See pages 96,97 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/Anonymization.pm~|~2~|~377~|~31~|~Postfix control "unless" used~|~See pages 96,97 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/Anonymization.pm~|~2~|~383~|~28~|~Postfix control "unless" used~|~See pages 96,97 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/Anonymization.pm~|~2~|~407~|~95~|~Postfix control "if" used~|~See pages 93,94 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/Anonymization.pm~|~3~|~408~|~25~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
lib/BOM/Event/Actions/Anonymization.pm~|~2~|~408~|~62~|~Postfix control "unless" used~|~See pages 96,97 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/Anonymization.pm~|~2~|~413~|~22~|~Put semicolon ; on last statement in a block~|~(no explanation)~|~CodeLayout::RequireFinalSemicolon~||~
lib/BOM/Event/Actions/Anonymization.pm~|~2~|~414~|~18~|~Put semicolon ; on last statement in a block~|~(no explanation)~|~CodeLayout::RequireFinalSemicolon~||~
lib/BOM/Event/Actions/Anonymization.pm~|~2~|~423~|~36~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
lib/BOM/Event/Actions/Anonymization.pm~|~3~|~423~|~36~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
lib/BOM/Event/Actions/Anonymization.pm~|~2~|~423~|~36~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
lib/BOM/Event/Actions/Anonymization.pm~|~2~|~440~|~31~|~Postfix control "unless" used~|~See pages 96,97 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/Anonymization.pm~|~2~|~474~|~12~|~Postfix control "unless" used~|~See pages 96,97 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/Anonymization.pm~|~2~|~476~|~12~|~Postfix control "unless" used~|~See pages 96,97 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/Anonymization.pm~|~2~|~479~|~14~|~Quotes used with a noisy string~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitNoisyQuotes~||~
lib/BOM/Event/Actions/Anonymization.pm~|~2~|~502~|~14~|~Postfix control "unless" used~|~See pages 96,97 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/Anonymization.pm~|~2~|~507~|~22~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
lib/BOM/Event/Actions/Anonymization.pm~|~3~|~507~|~22~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
lib/BOM/Event/Actions/Anonymization.pm~|~2~|~507~|~22~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
lib/BOM/Event/Actions/Anonymization.pm~|~2~|~525~|~25~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
lib/BOM/Event/Actions/Anonymization.pm~|~2~|~548~|~28~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
lib/BOM/Event/Actions/Anonymization.pm~|~2~|~548~|~42~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
lib/BOM/Event/Actions/Anonymization.pm~|~2~|~567~|~21~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
lib/BOM/Event/Actions/Anonymization.pm~|~3~|~567~|~21~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
lib/BOM/Event/Actions/Anonymization.pm~|~2~|~567~|~21~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
lib/BOM/Event/Actions/User.pm~|~2~|~1~|~1~|~No package-scoped "$VERSION" variable found~|~See page 404 of PBP~|~Modules::RequireVersionVar~||~
lib/BOM/Event/Actions/User.pm~|~2~|~4~|~1~|~_perl_5006_pragmas requires 5.006~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
lib/BOM/Event/Actions/User.pm~|~2~|~20~|~1~|~Missing "VERSION" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/User.pm~|~2~|~20~|~1~|~Missing "SYNOPSIS" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/User.pm~|~2~|~20~|~1~|~Missing "SUBROUTINES/METHODS" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/User.pm~|~2~|~20~|~1~|~Missing "DIAGNOSTICS" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/User.pm~|~2~|~20~|~1~|~Missing "CONFIGURATION AND ENVIRONMENT" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/User.pm~|~2~|~20~|~1~|~Missing "DEPENDENCIES" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/User.pm~|~2~|~20~|~1~|~Missing "INCOMPATIBILITIES" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/User.pm~|~2~|~20~|~1~|~Missing "BUGS AND LIMITATIONS" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/User.pm~|~2~|~20~|~1~|~Missing "AUTHOR" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/User.pm~|~2~|~20~|~1~|~Missing "LICENSE AND COPYRIGHT" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/User.pm~|~3~|~80~|~5~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
lib/BOM/Event/Actions/User.pm~|~2~|~80~|~65~|~Postfix control "unless" used~|~See pages 96,97 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/User.pm~|~2~|~89~|~112~|~Postfix control "if" used~|~See pages 93,94 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/User.pm~|~2~|~90~|~25~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
lib/BOM/Event/Actions/User.pm~|~2~|~90~|~28~|~Postfix control "if" used~|~See pages 93,94 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/User.pm~|~2~|~96~|~14~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
lib/BOM/Event/Actions/User.pm~|~2~|~108~|~62~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
lib/BOM/Event/Actions/User.pm~|~2~|~118~|~9~|~Postfix control "if" used~|~See pages 93,94 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/User.pm~|~3~|~154~|~1~|~Subroutine "verify_false_profile_info" with high complexity score (24)~|~Consider refactoring~|~Subroutines::ProhibitExcessComplexity~||~
lib/BOM/Event/Actions/User.pm~|~3~|~158~|~68~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
lib/BOM/Event/Actions/User.pm~|~2~|~161~|~24~|~_any_qr_tokens requires 5.005.03~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
lib/BOM/Event/Actions/User.pm~|~2~|~161~|~24~|~_any_quotelike_regexp requires 5.005~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
lib/BOM/Event/Actions/User.pm~|~2~|~161~|~24~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
lib/BOM/Event/Actions/User.pm~|~3~|~161~|~24~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
lib/BOM/Event/Actions/User.pm~|~2~|~161~|~24~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
lib/BOM/Event/Actions/User.pm~|~2~|~164~|~5~|~_Pulp__for_loop_variable_using_my requires 5.004~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
lib/BOM/Event/Actions/User.pm~|~2~|~165~|~9~|~Found method-call chain of length 6~|~Long chains of method calls indicate code that is too tightly coupled~|~ValuesAndExpressions::ProhibitLongChainsOfMethodCalls~||~
lib/BOM/Event/Actions/User.pm~|~2~|~165~|~116~|~_Pulp__var_method_without_parens requires 5.006~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
lib/BOM/Event/Actions/User.pm~|~2~|~165~|~125~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
lib/BOM/Event/Actions/User.pm~|~2~|~167~|~42~|~Useless use of $_~|~$_ should be omitted when matching a regular expression~|~RegularExpressions::ProhibitUselessTopic~||~
lib/BOM/Event/Actions/User.pm~|~2~|~167~|~48~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
lib/BOM/Event/Actions/User.pm~|~3~|~167~|~48~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
lib/BOM/Event/Actions/User.pm~|~2~|~167~|~48~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
lib/BOM/Event/Actions/User.pm~|~2~|~168~|~42~|~Useless use of $_~|~$_ should be omitted when matching a regular expression~|~RegularExpressions::ProhibitUselessTopic~||~
lib/BOM/Event/Actions/User.pm~|~2~|~168~|~48~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
lib/BOM/Event/Actions/User.pm~|~3~|~168~|~48~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
lib/BOM/Event/Actions/User.pm~|~2~|~168~|~48~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
lib/BOM/Event/Actions/User.pm~|~2~|~171~|~34~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
lib/BOM/Event/Actions/User.pm~|~3~|~171~|~34~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
lib/BOM/Event/Actions/User.pm~|~2~|~171~|~34~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
lib/BOM/Event/Actions/User.pm~|~2~|~175~|~33~|~Quotes used with a noisy string~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitNoisyQuotes~||~
lib/BOM/Event/Actions/User.pm~|~2~|~175~|~58~|~Postfix control "if" used~|~See pages 93,94 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/User.pm~|~2~|~176~|~53~|~Quotes used with a noisy string~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitNoisyQuotes~||~
lib/BOM/Event/Actions/User.pm~|~2~|~176~|~58~|~Postfix control "if" used~|~See pages 93,94 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/User.pm~|~2~|~178~|~32~|~Quotes used with a noisy string~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitNoisyQuotes~||~
lib/BOM/Event/Actions/User.pm~|~2~|~188~|~88~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
lib/BOM/Event/Actions/User.pm~|~3~|~188~|~88~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
lib/BOM/Event/Actions/User.pm~|~2~|~188~|~88~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
lib/BOM/Event/Actions/User.pm~|~2~|~190~|~39~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
lib/BOM/Event/Actions/User.pm~|~3~|~190~|~39~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
lib/BOM/Event/Actions/User.pm~|~2~|~190~|~39~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
lib/BOM/Event/Actions/User.pm~|~2~|~190~|~78~|~Postfix control "if" used~|~See pages 93,94 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/User.pm~|~5~|~192~|~5~|~"return" statement with explicit "undef"~|~See page 199 of PBP~|~Subroutines::ProhibitExplicitReturnUndef~||~
lib/BOM/Event/Actions/User.pm~|~2~|~192~|~18~|~Postfix control "unless" used~|~See pages 96,97 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/User.pm~|~2~|~198~|~44~|~Postfix control "if" used~|~See pages 93,94 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/User.pm~|~2~|~214~|~17~|~Postfix control "if" used~|~See pages 93,94 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/User.pm~|~5~|~216~|~5~|~"return" statement with explicit "undef"~|~See page 199 of PBP~|~Subroutines::ProhibitExplicitReturnUndef~||~
lib/BOM/Event/Actions/CustomerStatement.pm~|~2~|~1~|~1~|~No package-scoped "$VERSION" variable found~|~See page 404 of PBP~|~Modules::RequireVersionVar~||~
lib/BOM/Event/Actions/CustomerStatement.pm~|~2~|~4~|~1~|~_perl_5006_pragmas requires 5.006~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
lib/BOM/Event/Actions/CustomerStatement.pm~|~4~|~28~|~1~|~Pragma "constant" used~|~See page 55 of PBP~|~ValuesAndExpressions::ProhibitConstantPragma~||~
lib/BOM/Event/Actions/CustomerStatement.pm~|~4~|~29~|~1~|~Pragma "constant" used~|~See page 55 of PBP~|~ValuesAndExpressions::ProhibitConstantPragma~||~
lib/BOM/Event/Actions/CustomerStatement.pm~|~4~|~30~|~1~|~Pragma "constant" used~|~See page 55 of PBP~|~ValuesAndExpressions::ProhibitConstantPragma~||~
lib/BOM/Event/Actions/CustomerStatement.pm~|~2~|~32~|~1~|~Missing "NAME" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/CustomerStatement.pm~|~2~|~32~|~1~|~Missing "VERSION" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/CustomerStatement.pm~|~2~|~32~|~1~|~Missing "SYNOPSIS" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/CustomerStatement.pm~|~2~|~32~|~1~|~Missing "DESCRIPTION" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/CustomerStatement.pm~|~2~|~32~|~1~|~Missing "SUBROUTINES/METHODS" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/CustomerStatement.pm~|~2~|~32~|~1~|~Missing "DIAGNOSTICS" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/CustomerStatement.pm~|~2~|~32~|~1~|~Missing "CONFIGURATION AND ENVIRONMENT" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/CustomerStatement.pm~|~2~|~32~|~1~|~Missing "DEPENDENCIES" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/CustomerStatement.pm~|~2~|~32~|~1~|~Missing "INCOMPATIBILITIES" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/CustomerStatement.pm~|~2~|~32~|~1~|~Missing "BUGS AND LIMITATIONS" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/CustomerStatement.pm~|~2~|~32~|~1~|~Missing "AUTHOR" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/CustomerStatement.pm~|~2~|~32~|~1~|~Missing "LICENSE AND COPYRIGHT" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/CustomerStatement.pm~|~2~|~62~|~5~|~"unless" block used~|~See page 97 of PBP~|~ControlStructures::ProhibitUnlessBlocks~||~
lib/BOM/Event/Actions/CustomerStatement.pm~|~2~|~76~|~59~|~_perl_5010_operators requires 5.010~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
lib/BOM/Event/Actions/CustomerStatement.pm~|~2~|~98~|~46~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
lib/BOM/Event/Actions/CustomerStatement.pm~|~2~|~103~|~13~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
lib/BOM/Event/Actions/CustomerStatement.pm~|~2~|~110~|~136~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
lib/BOM/Event/Actions/CustomerStatement.pm~|~2~|~111~|~54~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
lib/BOM/Event/Actions/CustomerStatement.pm~|~2~|~135~|~5~|~Found method-call chain of length 5~|~Long chains of method calls indicate code that is too tightly coupled~|~ValuesAndExpressions::ProhibitLongChainsOfMethodCalls~||~
lib/BOM/Event/Actions/CustomerStatement.pm~|~2~|~136~|~5~|~"unless" block used~|~See page 97 of PBP~|~ControlStructures::ProhibitUnlessBlocks~||~
lib/BOM/Event/Actions/CustomerStatement.pm~|~2~|~142~|~9~|~Found method-call chain of length 5~|~Long chains of method calls indicate code that is too tightly coupled~|~ValuesAndExpressions::ProhibitLongChainsOfMethodCalls~||~
lib/BOM/Event/Actions/CustomerStatement.pm~|~2~|~143~|~64~|~Postfix control "unless" used~|~See pages 96,97 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/CustomerStatement.pm~|~3~|~151~|~1~|~Subroutine "_retrieve_transaction_history" with high complexity score (22)~|~Consider refactoring~|~Subroutines::ProhibitExcessComplexity~||~
lib/BOM/Event/Actions/CustomerStatement.pm~|~2~|~171~|~26~|~Postfix control "unless" used~|~See pages 96,97 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/CustomerStatement.pm~|~2~|~176~|~5~|~_Pulp__for_loop_variable_using_my requires 5.004~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
lib/BOM/Event/Actions/CustomerStatement.pm~|~2~|~176~|~18~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
lib/BOM/Event/Actions/CustomerStatement.pm~|~3~|~182~|~9~|~Cascading if-elsif chain~|~See pages 117,118 of PBP~|~ControlStructures::ProhibitCascadingIfElse~||~
lib/BOM/Event/Actions/CustomerStatement.pm~|~2~|~182~|~46~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
lib/BOM/Event/Actions/CustomerStatement.pm~|~2~|~183~|~50~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
lib/BOM/Event/Actions/CustomerStatement.pm~|~2~|~185~|~45~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
lib/BOM/Event/Actions/CustomerStatement.pm~|~2~|~187~|~43~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
lib/BOM/Event/Actions/CustomerStatement.pm~|~2~|~195~|~42~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
lib/BOM/Event/Actions/CustomerStatement.pm~|~2~|~195~|~42~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
lib/BOM/Event/Actions/CustomerStatement.pm~|~2~|~200~|~18~|~Put semicolon ; on last statement in a block~|~(no explanation)~|~CodeLayout::RequireFinalSemicolon~||~
lib/BOM/Event/Actions/CustomerStatement.pm~|~2~|~202~|~74~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
lib/BOM/Event/Actions/CustomerStatement.pm~|~2~|~206~|~54~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
lib/BOM/Event/Actions/CustomerStatement.pm~|~3~|~217~|~17~|~Ambiguously named variable "contract"~|~See page 48 of PBP~|~NamingConventions::ProhibitAmbiguousNames~||~
lib/BOM/Event/Actions/CustomerStatement.pm~|~2~|~242~|~52~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
lib/BOM/Event/Actions/Client.pm~|~3~|~1~|~1~|~Main code has high complexity score (377)~|~Consider refactoring~|~Modules::ProhibitExcessMainComplexity~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~1~|~1~|~No package-scoped "$VERSION" variable found~|~See page 404 of PBP~|~Modules::RequireVersionVar~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~4~|~1~|~_perl_5006_pragmas requires 5.006~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~6~|~1~|~Missing "VERSION" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~6~|~1~|~Missing "SYNOPSIS" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~6~|~1~|~Missing "SUBROUTINES/METHODS" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~6~|~1~|~Missing "DIAGNOSTICS" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~6~|~1~|~Missing "CONFIGURATION AND ENVIRONMENT" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~6~|~1~|~Missing "DEPENDENCIES" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~6~|~1~|~Missing "INCOMPATIBILITIES" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~6~|~1~|~Missing "BUGS AND LIMITATIONS" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~6~|~1~|~Missing "AUTHOR" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~6~|~1~|~Missing "LICENSE AND COPYRIGHT" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/Client.pm~|~4~|~82~|~1~|~Pragma "constant" used~|~See page 55 of PBP~|~ValuesAndExpressions::ProhibitConstantPragma~||~
lib/BOM/Event/Actions/Client.pm~|~4~|~85~|~1~|~Pragma "constant" used~|~See page 55 of PBP~|~ValuesAndExpressions::ProhibitConstantPragma~||~
lib/BOM/Event/Actions/Client.pm~|~4~|~86~|~1~|~Pragma "constant" used~|~See page 55 of PBP~|~ValuesAndExpressions::ProhibitConstantPragma~||~
lib/BOM/Event/Actions/Client.pm~|~4~|~87~|~1~|~Pragma "constant" used~|~See page 55 of PBP~|~ValuesAndExpressions::ProhibitConstantPragma~||~
lib/BOM/Event/Actions/Client.pm~|~4~|~88~|~1~|~Pragma "constant" used~|~See page 55 of PBP~|~ValuesAndExpressions::ProhibitConstantPragma~||~
lib/BOM/Event/Actions/Client.pm~|~4~|~91~|~1~|~Pragma "constant" used~|~See page 55 of PBP~|~ValuesAndExpressions::ProhibitConstantPragma~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~91~|~83~|~_perl_5010_operators requires 5.010~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
lib/BOM/Event/Actions/Client.pm~|~4~|~92~|~1~|~Pragma "constant" used~|~See page 55 of PBP~|~ValuesAndExpressions::ProhibitConstantPragma~||~
lib/BOM/Event/Actions/Client.pm~|~4~|~93~|~1~|~Pragma "constant" used~|~See page 55 of PBP~|~ValuesAndExpressions::ProhibitConstantPragma~||~
lib/BOM/Event/Actions/Client.pm~|~4~|~94~|~1~|~Pragma "constant" used~|~See page 55 of PBP~|~ValuesAndExpressions::ProhibitConstantPragma~||~
lib/BOM/Event/Actions/Client.pm~|~4~|~95~|~1~|~Pragma "constant" used~|~See page 55 of PBP~|~ValuesAndExpressions::ProhibitConstantPragma~||~
lib/BOM/Event/Actions/Client.pm~|~4~|~96~|~1~|~Pragma "constant" used~|~See page 55 of PBP~|~ValuesAndExpressions::ProhibitConstantPragma~||~
lib/BOM/Event/Actions/Client.pm~|~4~|~97~|~1~|~Pragma "constant" used~|~See page 55 of PBP~|~ValuesAndExpressions::ProhibitConstantPragma~||~
lib/BOM/Event/Actions/Client.pm~|~4~|~98~|~1~|~Pragma "constant" used~|~See page 55 of PBP~|~ValuesAndExpressions::ProhibitConstantPragma~||~
lib/BOM/Event/Actions/Client.pm~|~4~|~100~|~1~|~Pragma "constant" used~|~See page 55 of PBP~|~ValuesAndExpressions::ProhibitConstantPragma~||~
lib/BOM/Event/Actions/Client.pm~|~4~|~101~|~1~|~Pragma "constant" used~|~See page 55 of PBP~|~ValuesAndExpressions::ProhibitConstantPragma~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~101~|~115~|~Long number not separated with underscores~|~See page 59 of PBP~|~ValuesAndExpressions::RequireNumberSeparators~||~
lib/BOM/Event/Actions/Client.pm~|~4~|~102~|~1~|~Pragma "constant" used~|~See page 55 of PBP~|~ValuesAndExpressions::ProhibitConstantPragma~||~
lib/BOM/Event/Actions/Client.pm~|~4~|~103~|~1~|~Pragma "constant" used~|~See page 55 of PBP~|~ValuesAndExpressions::ProhibitConstantPragma~||~
lib/BOM/Event/Actions/Client.pm~|~4~|~104~|~1~|~Pragma "constant" used~|~See page 55 of PBP~|~ValuesAndExpressions::ProhibitConstantPragma~||~
lib/BOM/Event/Actions/Client.pm~|~4~|~105~|~1~|~Pragma "constant" used~|~See page 55 of PBP~|~ValuesAndExpressions::ProhibitConstantPragma~||~
lib/BOM/Event/Actions/Client.pm~|~4~|~106~|~1~|~Pragma "constant" used~|~See page 55 of PBP~|~ValuesAndExpressions::ProhibitConstantPragma~||~
lib/BOM/Event/Actions/Client.pm~|~4~|~107~|~1~|~Pragma "constant" used~|~See page 55 of PBP~|~ValuesAndExpressions::ProhibitConstantPragma~||~
lib/BOM/Event/Actions/Client.pm~|~4~|~108~|~1~|~Pragma "constant" used~|~See page 55 of PBP~|~ValuesAndExpressions::ProhibitConstantPragma~||~
lib/BOM/Event/Actions/Client.pm~|~4~|~109~|~1~|~Pragma "constant" used~|~See page 55 of PBP~|~ValuesAndExpressions::ProhibitConstantPragma~||~
lib/BOM/Event/Actions/Client.pm~|~4~|~110~|~1~|~Pragma "constant" used~|~See page 55 of PBP~|~ValuesAndExpressions::ProhibitConstantPragma~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~110~|~67~|~Long number not separated with underscores~|~See page 59 of PBP~|~ValuesAndExpressions::RequireNumberSeparators~||~
lib/BOM/Event/Actions/Client.pm~|~4~|~111~|~1~|~Pragma "constant" used~|~See page 55 of PBP~|~ValuesAndExpressions::ProhibitConstantPragma~||~
lib/BOM/Event/Actions/Client.pm~|~4~|~112~|~1~|~Pragma "constant" used~|~See page 55 of PBP~|~ValuesAndExpressions::ProhibitConstantPragma~||~
lib/BOM/Event/Actions/Client.pm~|~4~|~113~|~1~|~Pragma "constant" used~|~See page 55 of PBP~|~ValuesAndExpressions::ProhibitConstantPragma~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~113~|~67~|~Long number not separated with underscores~|~See page 59 of PBP~|~ValuesAndExpressions::RequireNumberSeparators~||~
lib/BOM/Event/Actions/Client.pm~|~4~|~116~|~1~|~Pragma "constant" used~|~See page 55 of PBP~|~ValuesAndExpressions::ProhibitConstantPragma~||~
lib/BOM/Event/Actions/Client.pm~|~4~|~119~|~1~|~Pragma "constant" used~|~See page 55 of PBP~|~ValuesAndExpressions::ProhibitConstantPragma~||~
lib/BOM/Event/Actions/Client.pm~|~4~|~120~|~1~|~Pragma "constant" used~|~See page 55 of PBP~|~ValuesAndExpressions::ProhibitConstantPragma~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~120~|~56~|~Long number not separated with underscores~|~See page 59 of PBP~|~ValuesAndExpressions::RequireNumberSeparators~||~
lib/BOM/Event/Actions/Client.pm~|~4~|~123~|~1~|~Pragma "constant" used~|~See page 55 of PBP~|~ValuesAndExpressions::ProhibitConstantPragma~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~123~|~32~|~Long number not separated with underscores~|~See page 59 of PBP~|~ValuesAndExpressions::RequireNumberSeparators~||~
lib/BOM/Event/Actions/Client.pm~|~4~|~126~|~1~|~Pragma "constant" used~|~See page 55 of PBP~|~ValuesAndExpressions::ProhibitConstantPragma~||~
lib/BOM/Event/Actions/Client.pm~|~4~|~127~|~1~|~Pragma "constant" used~|~See page 55 of PBP~|~ValuesAndExpressions::ProhibitConstantPragma~||~
lib/BOM/Event/Actions/Client.pm~|~4~|~128~|~1~|~Pragma "constant" used~|~See page 55 of PBP~|~ValuesAndExpressions::ProhibitConstantPragma~||~
lib/BOM/Event/Actions/Client.pm~|~4~|~129~|~1~|~Pragma "constant" used~|~See page 55 of PBP~|~ValuesAndExpressions::ProhibitConstantPragma~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~129~|~45~|~Long number not separated with underscores~|~See page 59 of PBP~|~ValuesAndExpressions::RequireNumberSeparators~||~
lib/BOM/Event/Actions/Client.pm~|~3~|~221~|~5~|~Private subroutine/method '_redis_mt5user_read' declared but not used~|~Eliminate dead code~|~Subroutines::ProhibitUnusedPrivateSubroutines~||~
lib/BOM/Event/Actions/Client.pm~|~3~|~270~|~16~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
lib/BOM/Event/Actions/Client.pm~|~3~|~272~|~16~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
lib/BOM/Event/Actions/Client.pm~|~3~|~275~|~16~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~282~|~32~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~285~|~9~|~"unless" block used~|~See page 97 of PBP~|~ControlStructures::ProhibitUnlessBlocks~||~
lib/BOM/Event/Actions/Client.pm~|~3~|~290~|~9~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~293~|~109~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~295~|~101~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~297~|~111~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~299~|~109~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~300~|~88~|~Postfix control "if" used~|~See pages 93,94 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~302~|~67~|~Postfix control "if" used~|~See pages 93,94 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~305~|~69~|~Postfix control "if" used~|~See pages 93,94 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/Client.pm~|~5~|~357~|~5~|~"return" statement with explicit "undef"~|~See page 199 of PBP~|~Subroutines::ProhibitExplicitReturnUndef~||~
lib/BOM/Event/Actions/Client.pm~|~3~|~364~|~26~|~Literal line breaks in a string~|~See pages 60,61 of PBP~|~ValuesAndExpressions::ProhibitImplicitNewlines~||~
lib/BOM/Event/Actions/Client.pm~|~3~|~364~|~26~|~Unknown or unnecessary backslash \{newline}~|~(no explanation)~|~ValuesAndExpressions::ProhibitUnknownBackslash~||~
lib/BOM/Event/Actions/Client.pm~|~3~|~367~|~56~|~Literal line breaks in a string~|~See pages 60,61 of PBP~|~ValuesAndExpressions::ProhibitImplicitNewlines~||~
lib/BOM/Event/Actions/Client.pm~|~3~|~368~|~50~|~Literal line breaks in a string~|~See pages 60,61 of PBP~|~ValuesAndExpressions::ProhibitImplicitNewlines~||~
lib/BOM/Event/Actions/Client.pm~|~3~|~370~|~41~|~Literal line breaks in a string~|~See pages 60,61 of PBP~|~ValuesAndExpressions::ProhibitImplicitNewlines~||~
lib/BOM/Event/Actions/Client.pm~|~3~|~370~|~41~|~Unknown or unnecessary backslash \{newline}~|~(no explanation)~|~ValuesAndExpressions::ProhibitUnknownBackslash~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~376~|~5~|~Found method-call chain of length 5~|~Long chains of method calls indicate code that is too tightly coupled~|~ValuesAndExpressions::ProhibitLongChainsOfMethodCalls~||~
lib/BOM/Event/Actions/Client.pm~|~5~|~380~|~5~|~"return" statement with explicit "undef"~|~See page 199 of PBP~|~Subroutines::ProhibitExplicitReturnUndef~||~
lib/BOM/Event/Actions/Client.pm~|~3~|~404~|~26~|~Literal line breaks in a string~|~See pages 60,61 of PBP~|~ValuesAndExpressions::ProhibitImplicitNewlines~||~
lib/BOM/Event/Actions/Client.pm~|~3~|~404~|~26~|~Unknown or unnecessary backslash \{newline}~|~(no explanation)~|~ValuesAndExpressions::ProhibitUnknownBackslash~||~
lib/BOM/Event/Actions/Client.pm~|~3~|~407~|~56~|~Literal line breaks in a string~|~See pages 60,61 of PBP~|~ValuesAndExpressions::ProhibitImplicitNewlines~||~
lib/BOM/Event/Actions/Client.pm~|~3~|~408~|~99~|~Literal line breaks in a string~|~See pages 60,61 of PBP~|~ValuesAndExpressions::ProhibitImplicitNewlines~||~
lib/BOM/Event/Actions/Client.pm~|~3~|~409~|~74~|~Literal line breaks in a string~|~See pages 60,61 of PBP~|~ValuesAndExpressions::ProhibitImplicitNewlines~||~
lib/BOM/Event/Actions/Client.pm~|~3~|~411~|~41~|~Literal line breaks in a string~|~See pages 60,61 of PBP~|~ValuesAndExpressions::ProhibitImplicitNewlines~||~
lib/BOM/Event/Actions/Client.pm~|~3~|~411~|~41~|~Unknown or unnecessary backslash \{newline}~|~(no explanation)~|~ValuesAndExpressions::ProhibitUnknownBackslash~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~417~|~5~|~Found method-call chain of length 5~|~Long chains of method calls indicate code that is too tightly coupled~|~ValuesAndExpressions::ProhibitLongChainsOfMethodCalls~||~
lib/BOM/Event/Actions/Client.pm~|~5~|~419~|~5~|~"return" statement with explicit "undef"~|~See page 199 of PBP~|~Subroutines::ProhibitExplicitReturnUndef~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~441~|~17~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~441~|~33~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~444~|~53~|~Postfix control "unless" used~|~See pages 96,97 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/Client.pm~|~3~|~454~|~5~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~454~|~5~|~Found method-call chain of length 5~|~Long chains of method calls indicate code that is too tightly coupled~|~ValuesAndExpressions::ProhibitLongChainsOfMethodCalls~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~463~|~12~|~Postfix control "unless" used~|~See pages 96,97 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~476~|~17~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~476~|~33~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~506~|~17~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~506~|~33~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~509~|~66~|~Postfix control "unless" used~|~See pages 96,97 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/Client.pm~|~3~|~533~|~12~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
lib/BOM/Event/Actions/Client.pm~|~3~|~536~|~12~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
lib/BOM/Event/Actions/Client.pm~|~5~|~550~|~5~|~"return" statement with explicit "undef"~|~See page 199 of PBP~|~Subroutines::ProhibitExplicitReturnUndef~||~
lib/BOM/Event/Actions/Client.pm~|~3~|~574~|~16~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
lib/BOM/Event/Actions/Client.pm~|~3~|~576~|~16~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~578~|~36~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
lib/BOM/Event/Actions/Client.pm~|~3~|~578~|~36~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~578~|~36~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
lib/BOM/Event/Actions/Client.pm~|~3~|~579~|~16~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
lib/BOM/Event/Actions/Client.pm~|~3~|~581~|~9~|~Reused variable name in lexical scope: $loop~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
lib/BOM/Event/Actions/Client.pm~|~3~|~586~|~16~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~594~|~94~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~601~|~32~|~Postfix control "unless" used~|~See pages 96,97 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~625~|~17~|~Postfix control "if" used~|~See pages 93,94 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/Client.pm~|~3~|~627~|~13~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
lib/BOM/Event/Actions/Client.pm~|~3~|~641~|~13~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~655~|~13~|~_Pulp__for_loop_variable_using_my requires 5.004~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
lib/BOM/Event/Actions/Client.pm~|~5~|~670~|~92~|~"return" statement with explicit "undef"~|~See page 199 of PBP~|~Subroutines::ProhibitExplicitReturnUndef~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~689~|~51~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~698~|~5~|~Postfix control "unless" used~|~See pages 96,97 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~737~|~34~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
lib/BOM/Event/Actions/Client.pm~|~3~|~737~|~34~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~737~|~34~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~739~|~31~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
lib/BOM/Event/Actions/Client.pm~|~3~|~739~|~31~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~739~|~31~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~739~|~56~|~Postfix control "unless" used~|~See pages 96,97 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~744~|~38~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
lib/BOM/Event/Actions/Client.pm~|~3~|~744~|~38~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~744~|~38~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~744~|~79~|~Postfix control "unless" used~|~See pages 96,97 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/Client.pm~|~3~|~746~|~9~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~746~|~33~|~Postfix control "unless" used~|~See pages 96,97 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~774~|~38~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~776~|~36~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
lib/BOM/Event/Actions/Client.pm~|~3~|~776~|~36~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~776~|~36~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
lib/BOM/Event/Actions/Client.pm~|~3~|~777~|~20~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
lib/BOM/Event/Actions/Client.pm~|~3~|~780~|~20~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~794~|~74~|~Postfix control "unless" used~|~See pages 96,97 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~797~|~98~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
lib/BOM/Event/Actions/Client.pm~|~3~|~817~|~13~|~Reused variable name in lexical scope: $args~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~873~|~73~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
lib/BOM/Event/Actions/Client.pm~|~3~|~880~|~87~|~Private subroutine/method used~|~Use published APIs~|~Subroutines::ProtectPrivateSubs~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~883~|~87~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~916~|~73~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
lib/BOM/Event/Actions/Client.pm~|~3~|~964~|~17~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~974~|~22~|~1000 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~985~|~55~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
lib/BOM/Event/Actions/Client.pm~|~3~|~991~|~13~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~992~|~10~|~Put semicolon ; on last statement in a block~|~(no explanation)~|~CodeLayout::RequireFinalSemicolon~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~1000~|~5~|~Postfix control "if" used~|~See pages 93,94 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~1007~|~5~|~Postfix control "if" used~|~See pages 93,94 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~1055~|~52~|~Postfix control "for" used~|~See page 96 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~1066~|~41~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~1072~|~30~|~Postfix control "if" used~|~See pages 93,94 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/Client.pm~|~5~|~1107~|~5~|~"return" statement with explicit "undef"~|~See page 199 of PBP~|~Subroutines::ProhibitExplicitReturnUndef~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~1107~|~18~|~Postfix control "unless" used~|~See pages 96,97 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/Client.pm~|~5~|~1113~|~5~|~"return" statement with explicit "undef"~|~See page 199 of PBP~|~Subroutines::ProhibitExplicitReturnUndef~||~
lib/BOM/Event/Actions/Client.pm~|~5~|~1128~|~5~|~"return" statement with explicit "undef"~|~See page 199 of PBP~|~Subroutines::ProhibitExplicitReturnUndef~||~
lib/BOM/Event/Actions/Client.pm~|~3~|~1163~|~68~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
lib/BOM/Event/Actions/Client.pm~|~3~|~1164~|~68~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
lib/BOM/Event/Actions/Client.pm~|~3~|~1165~|~5~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~1177~|~137~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~1182~|~37~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~1184~|~54~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~1185~|~54~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~1189~|~93~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~1196~|~13~|~"unless" block used~|~See page 97 of PBP~|~ControlStructures::ProhibitUnlessBlocks~||~
lib/BOM/Event/Actions/Client.pm~|~3~|~1219~|~25~|~Code structure is deeply nested~|~Consider refactoring~|~ControlStructures::ProhibitDeepNests~||~
lib/BOM/Event/Actions/Client.pm~|~3~|~1230~|~17~|~Reused variable name in lexical scope: $tags~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~1234~|~30~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~1249~|~30~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~1290~|~27~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~1294~|~31~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~1315~|~47~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~1322~|~36~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~1328~|~37~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
lib/BOM/Event/Actions/Client.pm~|~3~|~1331~|~9~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
lib/BOM/Event/Actions/Client.pm~|~3~|~1335~|~5~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~1337~|~97~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~1342~|~23~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
lib/BOM/Event/Actions/Client.pm~|~3~|~1342~|~23~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~1342~|~23~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~1344~|~28~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
lib/BOM/Event/Actions/Client.pm~|~3~|~1344~|~28~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~1344~|~28~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~1346~|~28~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
lib/BOM/Event/Actions/Client.pm~|~3~|~1346~|~28~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~1346~|~28~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~1356~|~5~|~Return value of "close" ignored~|~Check the return value of "close" for success~|~InputOutput::RequireCheckedClose~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~1371~|~43~|~Postfix control "unless" used~|~See pages 96,97 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~1372~|~43~|~Postfix control "unless" used~|~See pages 96,97 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~1376~|~72~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~1379~|~29~|~Postfix control "if" used~|~See pages 93,94 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~1385~|~121~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~1385~|~141~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~1386~|~74~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
lib/BOM/Event/Actions/Client.pm~|~3~|~1410~|~13~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~1411~|~17~|~Postfix control "unless" used~|~See pages 96,97 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/Client.pm~|~3~|~1413~|~13~|~Reused variable name in lexical scope: $document_info~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~1421~|~64~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~1422~|~36~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~1424~|~45~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~1432~|~53~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~1458~|~16~|~Found method-call chain of length 5~|~Long chains of method calls indicate code that is too tightly coupled~|~ValuesAndExpressions::ProhibitLongChainsOfMethodCalls~||~
lib/BOM/Event/Actions/Client.pm~|~3~|~1460~|~68~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
lib/BOM/Event/Actions/Client.pm~|~3~|~1461~|~68~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
lib/BOM/Event/Actions/Client.pm~|~3~|~1462~|~5~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~1471~|~16~|~Postfix control "unless" used~|~See pages 96,97 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~1478~|~58~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~1483~|~9~|~Variable declared as "local"~|~See pages 77,78,79 of PBP~|~Variables::ProhibitLocalVars~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~1483~|~83~|~Postfix control "if" used~|~See pages 93,94 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/Client.pm~|~3~|~1505~|~12~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
lib/BOM/Event/Actions/Client.pm~|~3~|~1508~|~12~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~1522~|~23~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~1522~|~23~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~1531~|~7~|~Postfix control "if" used~|~See pages 93,94 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~1544~|~25~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~1561~|~26~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~1561~|~66~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~1573~|~88~|~84600 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~1573~|~88~|~Long number not separated with underscores~|~See page 59 of PBP~|~ValuesAndExpressions::RequireNumberSeparators~||~
lib/BOM/Event/Actions/Client.pm~|~3~|~1575~|~5~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~1575~|~51~|~3 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~1585~|~13~|~_Pulp__my_list_with_undef requires 5.005~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~1588~|~37~|~_Pulp__UNIVERSAL_methods_5004 requires 5.004~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~1591~|~21~|~Postfix control "if" used~|~See pages 93,94 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~1591~|~39~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~1591~|~39~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~1593~|~21~|~Postfix control "if" used~|~See pages 93,94 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~1593~|~39~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~1593~|~39~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~1596~|~103~|~Postfix control "unless" used~|~See pages 96,97 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~1604~|~10~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~1614~|~65~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~1627~|~26~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~1627~|~66~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~1628~|~96~|~86400 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~1628~|~96~|~Long number not separated with underscores~|~See page 59 of PBP~|~ValuesAndExpressions::RequireNumberSeparators~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~1654~|~46~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~1659~|~90~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~1676~|~9~|~"unless" block used~|~See page 97 of PBP~|~ControlStructures::ProhibitUnlessBlocks~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~1679~|~80~|~Postfix control "unless" used~|~See pages 96,97 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/Client.pm~|~5~|~1681~|~13~|~"return" statement with explicit "undef"~|~See page 199 of PBP~|~Subroutines::ProhibitExplicitReturnUndef~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~1698~|~88~|~Postfix control "if" used~|~See pages 93,94 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/Client.pm~|~3~|~1715~|~9~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
lib/BOM/Event/Actions/Client.pm~|~5~|~1718~|~5~|~"return" statement with explicit "undef"~|~See page 199 of PBP~|~Subroutines::ProhibitExplicitReturnUndef~||~
lib/BOM/Event/Actions/Client.pm~|~3~|~1736~|~9~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~1740~|~5~|~Postfix control "unless" used~|~See pages 96,97 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/Client.pm~|~5~|~1741~|~9~|~"return" statement with explicit "undef"~|~See page 199 of PBP~|~Subroutines::ProhibitExplicitReturnUndef~||~
lib/BOM/Event/Actions/Client.pm~|~5~|~1773~|~5~|~"return" statement with explicit "undef"~|~See page 199 of PBP~|~Subroutines::ProhibitExplicitReturnUndef~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~1812~|~39~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~1813~|~12~|~Postfix control "if" used~|~See pages 93,94 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~1847~|~1~|~Unopened close paren "}"~|~(no explanation)~|~Documentation::ProhibitUnbalancedParens~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~1861~|~9~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~1878~|~5~|~Found method-call chain of length 5~|~Long chains of method calls indicate code that is too tightly coupled~|~ValuesAndExpressions::ProhibitLongChainsOfMethodCalls~||~
lib/BOM/Event/Actions/Client.pm~|~5~|~1881~|~5~|~"return" statement with explicit "undef"~|~See page 199 of PBP~|~Subroutines::ProhibitExplicitReturnUndef~||~
lib/BOM/Event/Actions/Client.pm~|~5~|~1899~|~5~|~"return" statement with explicit "undef"~|~See page 199 of PBP~|~Subroutines::ProhibitExplicitReturnUndef~||~
lib/BOM/Event/Actions/Client.pm~|~5~|~1905~|~5~|~"return" statement with explicit "undef"~|~See page 199 of PBP~|~Subroutines::ProhibitExplicitReturnUndef~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~1918~|~18~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
lib/BOM/Event/Actions/Client.pm~|~5~|~1924~|~5~|~"return" statement with explicit "undef"~|~See page 199 of PBP~|~Subroutines::ProhibitExplicitReturnUndef~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~1926~|~15~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
lib/BOM/Event/Actions/Client.pm~|~3~|~1940~|~26~|~Literal line breaks in a string~|~See pages 60,61 of PBP~|~ValuesAndExpressions::ProhibitImplicitNewlines~||~
lib/BOM/Event/Actions/Client.pm~|~3~|~1940~|~26~|~Unknown or unnecessary backslash \{newline}~|~(no explanation)~|~ValuesAndExpressions::ProhibitUnknownBackslash~||~
lib/BOM/Event/Actions/Client.pm~|~3~|~1943~|~56~|~Literal line breaks in a string~|~See pages 60,61 of PBP~|~ValuesAndExpressions::ProhibitImplicitNewlines~||~
lib/BOM/Event/Actions/Client.pm~|~3~|~1944~|~87~|~Literal line breaks in a string~|~See pages 60,61 of PBP~|~ValuesAndExpressions::ProhibitImplicitNewlines~||~
lib/BOM/Event/Actions/Client.pm~|~3~|~1945~|~99~|~Literal line breaks in a string~|~See pages 60,61 of PBP~|~ValuesAndExpressions::ProhibitImplicitNewlines~||~
lib/BOM/Event/Actions/Client.pm~|~3~|~1946~|~74~|~Literal line breaks in a string~|~See pages 60,61 of PBP~|~ValuesAndExpressions::ProhibitImplicitNewlines~||~
lib/BOM/Event/Actions/Client.pm~|~3~|~1948~|~41~|~Literal line breaks in a string~|~See pages 60,61 of PBP~|~ValuesAndExpressions::ProhibitImplicitNewlines~||~
lib/BOM/Event/Actions/Client.pm~|~3~|~1948~|~41~|~Unknown or unnecessary backslash \{newline}~|~(no explanation)~|~ValuesAndExpressions::ProhibitUnknownBackslash~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~1953~|~5~|~Found method-call chain of length 5~|~Long chains of method calls indicate code that is too tightly coupled~|~ValuesAndExpressions::ProhibitLongChainsOfMethodCalls~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~1982~|~5~|~Found method-call chain of length 5~|~Long chains of method calls indicate code that is too tightly coupled~|~ValuesAndExpressions::ProhibitLongChainsOfMethodCalls~||~
lib/BOM/Event/Actions/Client.pm~|~5~|~1985~|~5~|~"return" statement with explicit "undef"~|~See page 199 of PBP~|~Subroutines::ProhibitExplicitReturnUndef~||~
lib/BOM/Event/Actions/Client.pm~|~3~|~2018~|~39~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
lib/BOM/Event/Actions/Client.pm~|~3~|~2020~|~43~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
lib/BOM/Event/Actions/Client.pm~|~3~|~2022~|~67~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~2028~|~12~|~Postfix control "unless" used~|~See pages 96,97 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~2043~|~134~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~2045~|~5~|~"unless" block used~|~See page 97 of PBP~|~ControlStructures::ProhibitUnlessBlocks~||~
lib/BOM/Event/Actions/Client.pm~|~5~|~2048~|~9~|~"return" statement with explicit "undef"~|~See page 199 of PBP~|~Subroutines::ProhibitExplicitReturnUndef~||~
lib/BOM/Event/Actions/Client.pm~|~3~|~2076~|~13~|~Found "ne" in condition for an "unless"~|~See page 99 of PBP~|~ControlStructures::ProhibitNegativeExpressionsInUnlessAndUntilConditions~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~2076~|~13~|~Postfix control "unless" used~|~See pages 96,97 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/Client.pm~|~3~|~2078~|~13~|~Found "ne" in condition for an "unless"~|~See page 99 of PBP~|~ControlStructures::ProhibitNegativeExpressionsInUnlessAndUntilConditions~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~2078~|~13~|~Postfix control "unless" used~|~See pages 96,97 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~2082~|~31~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
lib/BOM/Event/Actions/Client.pm~|~3~|~2085~|~9~|~Reused variable name in lexical scope: $data~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~2087~|~45~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~2091~|~39~|~Postfix control "for" used~|~See page 96 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~2091~|~48~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~2097~|~45~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~2102~|~80~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
lib/BOM/Event/Actions/Client.pm~|~3~|~2108~|~13~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
lib/BOM/Event/Actions/Client.pm~|~3~|~2110~|~13~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~2110~|~13~|~Found method-call chain of length 5~|~Long chains of method calls indicate code that is too tightly coupled~|~ValuesAndExpressions::ProhibitLongChainsOfMethodCalls~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~2111~|~17~|~Postfix control "unless" used~|~See pages 96,97 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~2120~|~21~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
lib/BOM/Event/Actions/Client.pm~|~5~|~2123~|~13~|~"return" statement with explicit "undef"~|~See page 199 of PBP~|~Subroutines::ProhibitExplicitReturnUndef~||~
lib/BOM/Event/Actions/Client.pm~|~5~|~2128~|~13~|~"return" statement with explicit "undef"~|~See page 199 of PBP~|~Subroutines::ProhibitExplicitReturnUndef~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~2129~|~10~|~Put semicolon ; on last statement in a block~|~(no explanation)~|~CodeLayout::RequireFinalSemicolon~||~
lib/BOM/Event/Actions/Client.pm~|~5~|~2132~|~5~|~"return" statement with explicit "undef"~|~See page 199 of PBP~|~Subroutines::ProhibitExplicitReturnUndef~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~2186~|~51~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~2190~|~18~|~Postfix control "unless" used~|~See pages 96,97 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~2195~|~42~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
lib/BOM/Event/Actions/Client.pm~|~3~|~2195~|~42~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~2195~|~42~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~2198~|~18~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
lib/BOM/Event/Actions/Client.pm~|~3~|~2198~|~18~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~2198~|~18~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~2200~|~30~|~Postfix control "if" used~|~See pages 93,94 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~2220~|~92~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~2232~|~21~|~Postfix control "unless" used~|~See pages 96,97 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~2232~|~42~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~2236~|~17~|~Variable declared as "local"~|~See pages 77,78,79 of PBP~|~Variables::ProhibitLocalVars~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~2237~|~17~|~Variable declared as "local"~|~See pages 77,78,79 of PBP~|~Variables::ProhibitLocalVars~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~2240~|~17~|~Variable declared as "local"~|~See pages 77,78,79 of PBP~|~Variables::ProhibitLocalVars~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~2243~|~69~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~2270~|~6~|~Put semicolon ; on last statement in a block~|~(no explanation)~|~CodeLayout::RequireFinalSemicolon~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~2288~|~12~|~Postfix control "unless" used~|~See pages 96,97 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~2291~|~90~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~2306~|~49~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
lib/BOM/Event/Actions/Client.pm~|~3~|~2308~|~9~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~2312~|~9~|~"unless" block used~|~See page 97 of PBP~|~ControlStructures::ProhibitUnlessBlocks~||~
lib/BOM/Event/Actions/Client.pm~|~3~|~2321~|~17~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~2321~|~73~|~Postfix control "unless" used~|~See pages 96,97 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/Client.pm~|~3~|~2326~|~17~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~2326~|~42~|~Postfix control "unless" used~|~See pages 96,97 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/Client.pm~|~3~|~2329~|~17~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
lib/BOM/Event/Actions/Client.pm~|~3~|~2330~|~17~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~2330~|~68~|~3 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~2340~|~60~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~2341~|~54~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
lib/BOM/Event/Actions/Client.pm~|~3~|~2344~|~17~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
lib/BOM/Event/Actions/Client.pm~|~3~|~2345~|~17~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
lib/BOM/Event/Actions/Client.pm~|~3~|~2353~|~13~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~2353~|~64~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~2377~|~124~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~2384~|~21~|~Variable declared as "local"~|~See pages 77,78,79 of PBP~|~Variables::ProhibitLocalVars~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~2385~|~21~|~Variable declared as "local"~|~See pages 77,78,79 of PBP~|~Variables::ProhibitLocalVars~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~2385~|~74~|~Postfix control "if" used~|~See pages 93,94 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~2387~|~119~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~2389~|~14~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~2430~|~10~|~Put semicolon ; on last statement in a block~|~(no explanation)~|~CodeLayout::RequireFinalSemicolon~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~2491~|~48~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~2512~|~44~|~Quotes used with a noisy string~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitNoisyQuotes~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~2519~|~57~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~2528~|~31~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
lib/BOM/Event/Actions/Client.pm~|~3~|~2531~|~9~|~Reused variable name in lexical scope: $data~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~2534~|~51~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
lib/BOM/Event/Actions/Client.pm~|~3~|~2539~|~13~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
lib/BOM/Event/Actions/Client.pm~|~3~|~2541~|~13~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~2541~|~13~|~Found method-call chain of length 5~|~Long chains of method calls indicate code that is too tightly coupled~|~ValuesAndExpressions::ProhibitLongChainsOfMethodCalls~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~2542~|~17~|~Postfix control "unless" used~|~See pages 96,97 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/Client.pm~|~5~|~2544~|~13~|~"return" statement with explicit "undef"~|~See page 199 of PBP~|~Subroutines::ProhibitExplicitReturnUndef~||~
lib/BOM/Event/Actions/Client.pm~|~5~|~2548~|~13~|~"return" statement with explicit "undef"~|~See page 199 of PBP~|~Subroutines::ProhibitExplicitReturnUndef~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~2549~|~10~|~Put semicolon ; on last statement in a block~|~(no explanation)~|~CodeLayout::RequireFinalSemicolon~||~
lib/BOM/Event/Actions/Client.pm~|~5~|~2553~|~5~|~"return" statement with explicit "undef"~|~See page 199 of PBP~|~Subroutines::ProhibitExplicitReturnUndef~||~
lib/BOM/Event/Actions/Client.pm~|~3~|~2566~|~12~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
lib/BOM/Event/Actions/Client.pm~|~3~|~2569~|~12~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~2572~|~60~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~2573~|~60~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~2575~|~57~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~2576~|~57~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~2578~|~59~|~Postfix control "if" used~|~See pages 93,94 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~2597~|~10~|~Put semicolon ; on last statement in a block~|~(no explanation)~|~CodeLayout::RequireFinalSemicolon~||~
lib/BOM/Event/Actions/Client.pm~|~3~|~2613~|~9~|~Ambiguously named variable "record"~|~See page 48 of PBP~|~NamingConventions::ProhibitAmbiguousNames~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~2661~|~20~|~Quotes used with a noisy string~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitNoisyQuotes~||~
lib/BOM/Event/Actions/Client.pm~|~5~|~2663~|~5~|~"return" statement with explicit "undef"~|~See page 199 of PBP~|~Subroutines::ProhibitExplicitReturnUndef~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~2672~|~149~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
lib/BOM/Event/Actions/Client.pm~|~3~|~2685~|~39~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
lib/BOM/Event/Actions/Client.pm~|~3~|~2689~|~15~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~2698~|~5~|~"unless" block used~|~See page 97 of PBP~|~ControlStructures::ProhibitUnlessBlocks~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~2698~|~48~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
lib/BOM/Event/Actions/Client.pm~|~3~|~2718~|~39~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
lib/BOM/Event/Actions/Client.pm~|~3~|~2719~|~39~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
lib/BOM/Event/Actions/Client.pm~|~3~|~2725~|~5~|~Ambiguously named variable "set"~|~See page 48 of PBP~|~NamingConventions::ProhibitAmbiguousNames~||~
lib/BOM/Event/Actions/Client.pm~|~3~|~2727~|~5~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
lib/BOM/Event/Actions/Client.pm~|~3~|~2729~|~67~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~2731~|~13~|~"grep" used in boolean context~|~See pages 71,72 of PBP~|~BuiltinFunctions::ProhibitBooleanGrep~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~2736~|~30~|~_Pulp__var_method_without_parens requires 5.006~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~2740~|~13~|~"grep" used in boolean context~|~See pages 71,72 of PBP~|~BuiltinFunctions::ProhibitBooleanGrep~||~
lib/BOM/Event/Actions/Client.pm~|~3~|~2756~|~9~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~2756~|~57~|~Postfix control "unless" used~|~See pages 96,97 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/Client.pm~|~3~|~2761~|~67~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
lib/BOM/Event/Actions/Client.pm~|~3~|~2777~|~67~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~2804~|~33~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~2808~|~18~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~2810~|~36~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~2817~|~38~|~Postfix control "unless" used~|~See pages 96,97 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~2824~|~59~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~2832~|~39~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
lib/BOM/Event/Actions/Client.pm~|~3~|~2860~|~12~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~2868~|~68~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~2869~|~16~|~Postfix control "unless" used~|~See pages 96,97 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~2903~|~16~|~Postfix control "unless" used~|~See pages 96,97 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~2907~|~57~|~Quotes used with a noisy string~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitNoisyQuotes~||~
lib/BOM/Event/Actions/Client.pm~|~3~|~2921~|~13~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
lib/BOM/Event/Actions/Client.pm~|~3~|~2924~|~9~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~2924~|~70~|~Postfix control "unless" used~|~See pages 96,97 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/Client.pm~|~3~|~2929~|~9~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~2930~|~13~|~Postfix control "unless" used~|~See pages 96,97 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/Client.pm~|~3~|~2933~|~9~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~2933~|~59~|~Postfix control "unless" used~|~See pages 96,97 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~2933~|~94~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~2939~|~28~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
lib/BOM/Event/Actions/Client.pm~|~3~|~2942~|~16~|~Found ">" in condition for an "unless"~|~See page 99 of PBP~|~ControlStructures::ProhibitNegativeExpressionsInUnlessAndUntilConditions~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~2942~|~16~|~Postfix control "unless" used~|~See pages 96,97 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/Client.pm~|~3~|~2976~|~39~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
lib/BOM/Event/Actions/Client.pm~|~3~|~2977~|~39~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~2990~|~10~|~Put semicolon ; on last statement in a block~|~(no explanation)~|~CodeLayout::RequireFinalSemicolon~||~
lib/BOM/Event/Actions/Client.pm~|~3~|~3005~|~39~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~3011~|~99~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~3155~|~62~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~3165~|~23~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~3167~|~25~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
lib/BOM/Event/Actions/Client.pm~|~3~|~3167~|~25~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~3167~|~25~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~3168~|~32~|~String delimiter used with "split"~|~Express it as a regex instead~|~BuiltinFunctions::ProhibitStringySplit~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~3168~|~38~|~Quotes used with a noisy string~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitNoisyQuotes~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~3232~|~25~|~Useless use of $_~|~$_ should be omitted when matching a regular expression~|~RegularExpressions::ProhibitUselessTopic~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~3232~|~31~|~_any_qr_tokens requires 5.005.03~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~3232~|~31~|~_any_quotelike_regexp requires 5.005~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~3232~|~31~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
lib/BOM/Event/Actions/Client.pm~|~3~|~3232~|~31~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~3232~|~31~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~3232~|~45~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~3233~|~15~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
lib/BOM/Event/Actions/Client.pm~|~3~|~3233~|~15~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~3233~|~15~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~3233~|~26~|~Postfix control "if" used~|~See pages 93,94 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~3244~|~10~|~Put semicolon ; on last statement in a block~|~(no explanation)~|~CodeLayout::RequireFinalSemicolon~||~
lib/BOM/Event/Actions/Client.pm~|~3~|~3293~|~54~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
lib/BOM/Event/Actions/Client.pm~|~3~|~3294~|~54~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
lib/BOM/Event/Actions/Client.pm~|~3~|~3297~|~12~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~3299~|~42~|~String delimiter used with "split"~|~Express it as a regex instead~|~BuiltinFunctions::ProhibitStringySplit~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~3299~|~48~|~Quotes used with a noisy string~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitNoisyQuotes~||~
lib/BOM/Event/Actions/Client.pm~|~3~|~3301~|~5~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~3301~|~79~|~Postfix control "unless" used~|~See pages 96,97 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~3309~|~70~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~3312~|~33~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~3318~|~14~|~Postfix control "unless" used~|~See pages 96,97 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~3323~|~32~|~10 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~3328~|~107~|~Quotes used with a noisy string~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitNoisyQuotes~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~3331~|~101~|~Postfix control "unless" used~|~See pages 96,97 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~3339~|~105~|~Postfix control "unless" used~|~See pages 96,97 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~3340~|~9~|~"unless" block used~|~See page 97 of PBP~|~ControlStructures::ProhibitUnlessBlocks~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~3385~|~30~|~Quotes used with a noisy string~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitNoisyQuotes~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~3385~|~64~|~Useless use of $_~|~$_ should be omitted when matching a regular expression~|~RegularExpressions::ProhibitUselessTopic~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~3385~|~70~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~3385~|~70~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~3386~|~36~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
lib/BOM/Event/Actions/Client.pm~|~3~|~3386~|~36~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~3386~|~36~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~3390~|~39~|~_Pulp__arrow_coderef_call requires 5.004~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~3391~|~50~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
lib/BOM/Event/Actions/Client.pm~|~3~|~3391~|~50~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~3391~|~50~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~3391~|~96~|~10 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~3392~|~17~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~3461~|~28~|~100 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~3462~|~28~|~0.6 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~3473~|~12~|~Postfix control "unless" used~|~See pages 96,97 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~3473~|~19~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~3476~|~21~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~3478~|~22~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~3480~|~14~|~Postfix control "unless" used~|~See pages 96,97 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~3483~|~14~|~Postfix control "unless" used~|~See pages 96,97 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~3514~|~82~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
lib/BOM/Event/Actions/Client.pm~|~4~|~3541~|~1~|~Subroutine "link_affiliate_client" does not end with "return"~|~See page 197 of PBP~|~Subroutines::RequireFinalReturn~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~3552~|~22~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~3555~|~5~|~"unless" block used~|~See page 97 of PBP~|~ControlStructures::ProhibitUnlessBlocks~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~3563~|~5~|~"unless" block used~|~See page 97 of PBP~|~ControlStructures::ProhibitUnlessBlocks~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~3577~|~35~|~Postfix control "if" used~|~See pages 93,94 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~3582~|~5~|~Postfix control "unless" used~|~See pages 96,97 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~3594~|~27~|~Quotes used with a noisy string~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitNoisyQuotes~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~3595~|~74~|~Quotes used with a noisy string~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitNoisyQuotes~||~
lib/BOM/Event/Actions/Client.pm~|~5~|~3728~|~5~|~Stricture disabled~|~See page 429 of PBP~|~TestingAndDebugging::ProhibitNoStrict~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~3729~|~7~|~_Pulp__special_literal__PACKAGE__ requires 5.004~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~3729~|~21~|~Quotes used with a noisy string~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitNoisyQuotes~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~3732~|~6~|~Put semicolon ; on last statement in a block~|~(no explanation)~|~CodeLayout::RequireFinalSemicolon~||~
lib/BOM/Event/Actions/Client.pm~|~5~|~3811~|~5~|~Stricture disabled~|~See page 429 of PBP~|~TestingAndDebugging::ProhibitNoStrict~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~3812~|~21~|~Quotes used with a noisy string~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitNoisyQuotes~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~3819~|~6~|~Put semicolon ; on last statement in a block~|~(no explanation)~|~CodeLayout::RequireFinalSemicolon~||~
lib/BOM/Event/Actions/Client.pm~|~3~|~3840~|~71~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
lib/BOM/Event/Actions/Client.pm~|~3~|~3841~|~71~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
lib/BOM/Event/Actions/Client.pm~|~4~|~3865~|~1~|~Module does not end with "1;"~|~Must end with a recognizable true value~|~Modules::RequireEndWithOne~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~3872~|~21~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
lib/BOM/Event/Actions/Client.pm~|~3~|~3872~|~21~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~3872~|~21~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~3882~|~32~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~3883~|~32~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~3890~|~76~|~Postfix control "if" used~|~See pages 93,94 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~3941~|~52~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~3948~|~9~|~Postfix control "if" used~|~See pages 93,94 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~3948~|~25~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~3948~|~25~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~3951~|~9~|~Postfix control "if" used~|~See pages 93,94 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~3956~|~112~|~Postfix control "if" used~|~See pages 93,94 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~3957~|~112~|~Postfix control "if" used~|~See pages 93,94 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~3958~|~112~|~Postfix control "if" used~|~See pages 93,94 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~3959~|~112~|~Postfix control "if" used~|~See pages 93,94 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~3960~|~112~|~Postfix control "if" used~|~See pages 93,94 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~3967~|~10~|~Put semicolon ; on last statement in a block~|~(no explanation)~|~CodeLayout::RequireFinalSemicolon~||~
lib/BOM/Event/Actions/Client.pm~|~3~|~4025~|~12~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
lib/BOM/Event/Actions/Client.pm~|~3~|~4027~|~5~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~4027~|~30~|~Postfix control "unless" used~|~See pages 96,97 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/Client.pm~|~3~|~4030~|~5~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~4030~|~26~|~Postfix control "unless" used~|~See pages 96,97 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/Client.pm~|~3~|~4036~|~5~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~4036~|~33~|~Postfix control "unless" used~|~See pages 96,97 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~4047~|~28~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
lib/BOM/Event/Actions/Client.pm~|~3~|~4076~|~41~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
lib/BOM/Event/Actions/Client.pm~|~3~|~4079~|~12~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
lib/BOM/Event/Actions/Client.pm~|~3~|~4082~|~12~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
lib/BOM/Event/Actions/Client.pm~|~2~|~4086~|~79~|~Postfix control "if" used~|~See pages 93,94 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/Client.pm~|~5~|~4090~|~5~|~"return" statement with explicit "undef"~|~See page 199 of PBP~|~Subroutines::ProhibitExplicitReturnUndef~||~
lib/BOM/Event/Actions/DerivEZ.pm~|~2~|~1~|~1~|~No package-scoped "$VERSION" variable found~|~See page 404 of PBP~|~Modules::RequireVersionVar~||~
lib/BOM/Event/Actions/DerivEZ.pm~|~2~|~4~|~1~|~_perl_5006_pragmas requires 5.006~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
lib/BOM/Event/Actions/DerivEZ.pm~|~2~|~13~|~1~|~Missing "NAME" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/DerivEZ.pm~|~2~|~13~|~1~|~Missing "VERSION" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/DerivEZ.pm~|~2~|~13~|~1~|~Missing "SYNOPSIS" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/DerivEZ.pm~|~2~|~13~|~1~|~Missing "DESCRIPTION" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/DerivEZ.pm~|~2~|~13~|~1~|~Missing "SUBROUTINES/METHODS" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/DerivEZ.pm~|~2~|~13~|~1~|~Missing "DIAGNOSTICS" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/DerivEZ.pm~|~2~|~13~|~1~|~Missing "CONFIGURATION AND ENVIRONMENT" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/DerivEZ.pm~|~2~|~13~|~1~|~Missing "DEPENDENCIES" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/DerivEZ.pm~|~2~|~13~|~1~|~Missing "INCOMPATIBILITIES" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/DerivEZ.pm~|~2~|~13~|~1~|~Missing "BUGS AND LIMITATIONS" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/DerivEZ.pm~|~2~|~13~|~1~|~Missing "AUTHOR" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/DerivEZ.pm~|~2~|~13~|~1~|~Missing "LICENSE AND COPYRIGHT" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/DerivEZ.pm~|~3~|~48~|~71~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
lib/BOM/Event/Actions/DerivEZ.pm~|~3~|~49~|~71~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
lib/BOM/Event/Actions/DerivEZ.pm~|~3~|~85~|~71~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
lib/BOM/Event/Actions/DerivEZ.pm~|~3~|~86~|~71~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
lib/BOM/Event/Actions/CustomerIO.pm~|~2~|~1~|~1~|~No package-scoped "$VERSION" variable found~|~See page 404 of PBP~|~Modules::RequireVersionVar~||~
lib/BOM/Event/Actions/CustomerIO.pm~|~2~|~6~|~1~|~_perl_5006_pragmas requires 5.006~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
lib/BOM/Event/Actions/CustomerIO.pm~|~2~|~8~|~1~|~Missing "VERSION" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/CustomerIO.pm~|~2~|~8~|~1~|~Missing "DESCRIPTION" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/CustomerIO.pm~|~2~|~8~|~1~|~Missing "SUBROUTINES/METHODS" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/CustomerIO.pm~|~2~|~8~|~1~|~Missing "DIAGNOSTICS" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/CustomerIO.pm~|~2~|~8~|~1~|~Missing "CONFIGURATION AND ENVIRONMENT" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/CustomerIO.pm~|~2~|~8~|~1~|~Missing "DEPENDENCIES" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/CustomerIO.pm~|~2~|~8~|~1~|~Missing "INCOMPATIBILITIES" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/CustomerIO.pm~|~2~|~8~|~1~|~Missing "BUGS AND LIMITATIONS" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/CustomerIO.pm~|~2~|~8~|~1~|~Missing "AUTHOR" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/CustomerIO.pm~|~2~|~8~|~1~|~Missing "LICENSE AND COPYRIGHT" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/CustomerIO.pm~|~4~|~58~|~1~|~Module does not end with "1;"~|~Must end with a recognizable true value~|~Modules::RequireEndWithOne~||~
lib/BOM/Event/Actions/CustomerIO.pm~|~2~|~64~|~9~|~_Pulp__for_loop_variable_using_my requires 5.004~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
lib/BOM/Event/Actions/CustomerIO.pm~|~2~|~85~|~31~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
lib/BOM/Event/Actions/CustomerIO.pm~|~2~|~85~|~41~|~9999 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
lib/BOM/Event/Actions/CustomerIO.pm~|~2~|~90~|~24~|~_perl_5010_operators requires 5.010~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
lib/BOM/Event/Actions/CustomerIO.pm~|~2~|~90~|~34~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
lib/BOM/Event/Actions/CustomerIO.pm~|~2~|~94~|~10~|~Put semicolon ; on last statement in a block~|~(no explanation)~|~CodeLayout::RequireFinalSemicolon~||~
lib/BOM/Event/Actions/Client/DisputeNotification.pm~|~2~|~1~|~1~|~No package-scoped "$VERSION" variable found~|~See page 404 of PBP~|~Modules::RequireVersionVar~||~
lib/BOM/Event/Actions/Client/DisputeNotification.pm~|~2~|~4~|~1~|~_perl_5006_pragmas requires 5.006~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
lib/BOM/Event/Actions/Client/DisputeNotification.pm~|~2~|~6~|~1~|~Missing "VERSION" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/Client/DisputeNotification.pm~|~2~|~6~|~1~|~Missing "SYNOPSIS" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/Client/DisputeNotification.pm~|~2~|~6~|~1~|~Missing "SUBROUTINES/METHODS" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/Client/DisputeNotification.pm~|~2~|~6~|~1~|~Missing "DIAGNOSTICS" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/Client/DisputeNotification.pm~|~2~|~6~|~1~|~Missing "CONFIGURATION AND ENVIRONMENT" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/Client/DisputeNotification.pm~|~2~|~6~|~1~|~Missing "DEPENDENCIES" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/Client/DisputeNotification.pm~|~2~|~6~|~1~|~Missing "INCOMPATIBILITIES" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/Client/DisputeNotification.pm~|~2~|~6~|~1~|~Missing "BUGS AND LIMITATIONS" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/Client/DisputeNotification.pm~|~2~|~6~|~1~|~Missing "AUTHOR" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/Client/DisputeNotification.pm~|~2~|~6~|~1~|~Missing "LICENSE AND COPYRIGHT" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/Client/DisputeNotification.pm~|~4~|~28~|~1~|~Pragma "constant" used~|~See page 55 of PBP~|~ValuesAndExpressions::ProhibitConstantPragma~||~
lib/BOM/Event/Actions/Client/DisputeNotification.pm~|~4~|~30~|~1~|~Pragma "constant" used~|~See page 55 of PBP~|~ValuesAndExpressions::ProhibitConstantPragma~||~
lib/BOM/Event/Actions/Client/DisputeNotification.pm~|~2~|~69~|~17~|~_Pulp__arrow_coderef_call requires 5.004~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
lib/BOM/Event/Actions/Client/DisputeNotification.pm~|~5~|~75~|~5~|~"return" statement with explicit "undef"~|~See page 199 of PBP~|~Subroutines::ProhibitExplicitReturnUndef~||~
lib/BOM/Event/Actions/Client/DisputeNotification.pm~|~2~|~90~|~1~|~Pod requires perl 5.008 due to: =head3 command~|~(no explanation)~|~Compatibility::PodMinimumVersion~||~
lib/BOM/Event/Actions/Client/DisputeNotification.pm~|~5~|~191~|~9~|~"return" statement with explicit "undef"~|~See page 199 of PBP~|~Subroutines::ProhibitExplicitReturnUndef~||~
lib/BOM/Event/Actions/Client/DisputeNotification.pm~|~2~|~196~|~19~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
lib/BOM/Event/Actions/Client/DisputeNotification.pm~|~3~|~196~|~19~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
lib/BOM/Event/Actions/Client/DisputeNotification.pm~|~2~|~196~|~19~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
lib/BOM/Event/Actions/Client/DisputeNotification.pm~|~5~|~217~|~5~|~"return" statement with explicit "undef"~|~See page 199 of PBP~|~Subroutines::ProhibitExplicitReturnUndef~||~
lib/BOM/Event/Actions/Client/DisputeNotification.pm~|~5~|~398~|~9~|~"return" statement with explicit "undef"~|~See page 199 of PBP~|~Subroutines::ProhibitExplicitReturnUndef~||~
lib/BOM/Event/Actions/Client/DisputeNotification.pm~|~5~|~411~|~5~|~"return" statement with explicit "undef"~|~See page 199 of PBP~|~Subroutines::ProhibitExplicitReturnUndef~||~
lib/BOM/Event/Actions/Client/DisputeNotification.pm~|~4~|~432~|~1~|~Subroutine "_process_email" does not end with "return"~|~See page 197 of PBP~|~Subroutines::RequireFinalReturn~||~
lib/BOM/Event/Actions/Client/DisputeNotification.pm~|~3~|~439~|~9~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
lib/BOM/Event/Actions/Client/DisputeNotification.pm~|~5~|~453~|~5~|~"return" statement with explicit "undef"~|~See page 199 of PBP~|~Subroutines::ProhibitExplicitReturnUndef~||~
lib/BOM/Event/Actions/Client/IdentityVerification.pm~|~3~|~1~|~1~|~Main code has high complexity score (60)~|~Consider refactoring~|~Modules::ProhibitExcessMainComplexity~||~
lib/BOM/Event/Actions/Client/IdentityVerification.pm~|~2~|~1~|~1~|~No package-scoped "$VERSION" variable found~|~See page 404 of PBP~|~Modules::RequireVersionVar~||~
lib/BOM/Event/Actions/Client/IdentityVerification.pm~|~2~|~4~|~1~|~_perl_5006_pragmas requires 5.006~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
lib/BOM/Event/Actions/Client/IdentityVerification.pm~|~2~|~7~|~1~|~Missing "VERSION" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/Client/IdentityVerification.pm~|~2~|~7~|~1~|~Missing "SYNOPSIS" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/Client/IdentityVerification.pm~|~2~|~7~|~1~|~Missing "SUBROUTINES/METHODS" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/Client/IdentityVerification.pm~|~2~|~7~|~1~|~Missing "DIAGNOSTICS" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/Client/IdentityVerification.pm~|~2~|~7~|~1~|~Missing "CONFIGURATION AND ENVIRONMENT" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/Client/IdentityVerification.pm~|~2~|~7~|~1~|~Missing "DEPENDENCIES" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/Client/IdentityVerification.pm~|~2~|~7~|~1~|~Missing "INCOMPATIBILITIES" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/Client/IdentityVerification.pm~|~2~|~7~|~1~|~Missing "BUGS AND LIMITATIONS" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/Client/IdentityVerification.pm~|~2~|~7~|~1~|~Missing "AUTHOR" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/Client/IdentityVerification.pm~|~2~|~7~|~1~|~Missing "LICENSE AND COPYRIGHT" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/Client/IdentityVerification.pm~|~4~|~43~|~1~|~Pragma "constant" used~|~See page 55 of PBP~|~ValuesAndExpressions::ProhibitConstantPragma~||~
lib/BOM/Event/Actions/Client/IdentityVerification.pm~|~4~|~45~|~1~|~Pragma "constant" used~|~See page 55 of PBP~|~ValuesAndExpressions::ProhibitConstantPragma~||~
lib/BOM/Event/Actions/Client/IdentityVerification.pm~|~4~|~54~|~1~|~Pragma "constant" used~|~See page 55 of PBP~|~ValuesAndExpressions::ProhibitConstantPragma~||~
lib/BOM/Event/Actions/Client/IdentityVerification.pm~|~3~|~69~|~5~|~Private subroutine/method '_redis_replicated_write' declared but not used~|~Eliminate dead code~|~Subroutines::ProhibitUnusedPrivateSubroutines~||~
lib/BOM/Event/Actions/Client/IdentityVerification.pm~|~4~|~93~|~1~|~Module does not end with "1;"~|~Must end with a recognizable true value~|~Modules::RequireEndWithOne~||~
lib/BOM/Event/Actions/Client/IdentityVerification.pm~|~3~|~99~|~12~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
lib/BOM/Event/Actions/Client/IdentityVerification.pm~|~3~|~105~|~5~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
lib/BOM/Event/Actions/Client/IdentityVerification.pm~|~2~|~105~|~76~|~Postfix control "unless" used~|~See pages 96,97 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/Client/IdentityVerification.pm~|~3~|~111~|~5~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
lib/BOM/Event/Actions/Client/IdentityVerification.pm~|~3~|~114~|~5~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
lib/BOM/Event/Actions/Client/IdentityVerification.pm~|~2~|~114~|~77~|~Postfix control "unless" used~|~See pages 96,97 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/Client/IdentityVerification.pm~|~3~|~118~|~5~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
lib/BOM/Event/Actions/Client/IdentityVerification.pm~|~2~|~118~|~59~|~Postfix control "unless" used~|~See pages 96,97 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/Client/IdentityVerification.pm~|~5~|~122~|~5~|~"return" statement with explicit "undef"~|~See page 199 of PBP~|~Subroutines::ProhibitExplicitReturnUndef~||~
lib/BOM/Event/Actions/Client/IdentityVerification.pm~|~2~|~122~|~18~|~Postfix control "unless" used~|~See pages 96,97 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/Client/IdentityVerification.pm~|~2~|~143~|~50~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
lib/BOM/Event/Actions/Client/IdentityVerification.pm~|~2~|~150~|~59~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
lib/BOM/Event/Actions/Client/IdentityVerification.pm~|~2~|~152~|~16~|~_perl_5010_operators requires 5.010~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
lib/BOM/Event/Actions/Client/IdentityVerification.pm~|~2~|~156~|~14~|~1000 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
lib/BOM/Event/Actions/Client/IdentityVerification.pm~|~2~|~178~|~51~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
lib/BOM/Event/Actions/Client/IdentityVerification.pm~|~3~|~186~|~9~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
lib/BOM/Event/Actions/Client/IdentityVerification.pm~|~3~|~220~|~5~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
lib/BOM/Event/Actions/Client/IdentityVerification.pm~|~2~|~220~|~31~|~Postfix control "unless" used~|~See pages 96,97 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/Client/IdentityVerification.pm~|~3~|~223~|~12~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
lib/BOM/Event/Actions/Client/IdentityVerification.pm~|~3~|~227~|~5~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
lib/BOM/Event/Actions/Client/IdentityVerification.pm~|~2~|~227~|~77~|~Postfix control "unless" used~|~See pages 96,97 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/Client/IdentityVerification.pm~|~3~|~231~|~5~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
lib/BOM/Event/Actions/Client/IdentityVerification.pm~|~2~|~231~|~59~|~Postfix control "unless" used~|~See pages 96,97 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/Client/IdentityVerification.pm~|~5~|~235~|~5~|~"return" statement with explicit "undef"~|~See page 199 of PBP~|~Subroutines::ProhibitExplicitReturnUndef~||~
lib/BOM/Event/Actions/Client/IdentityVerification.pm~|~2~|~235~|~18~|~Postfix control "unless" used~|~See pages 96,97 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/Client/IdentityVerification.pm~|~2~|~240~|~55~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
lib/BOM/Event/Actions/Client/IdentityVerification.pm~|~2~|~250~|~12~|~Postfix control "if" used~|~See pages 93,94 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/Client/IdentityVerification.pm~|~2~|~256~|~12~|~Postfix control "if" used~|~See pages 93,94 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/Client/IdentityVerification.pm~|~2~|~258~|~56~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
lib/BOM/Event/Actions/Client/IdentityVerification.pm~|~2~|~265~|~20~|~_Pulp__arrow_coderef_call requires 5.004~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
lib/BOM/Event/Actions/Client/IdentityVerification.pm~|~2~|~273~|~39~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
lib/BOM/Event/Actions/Client/IdentityVerification.pm~|~2~|~295~|~42~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
lib/BOM/Event/Actions/Client/IdentityVerification.pm~|~2~|~308~|~34~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
lib/BOM/Event/Actions/Client/IdentityVerification.pm~|~2~|~313~|~37~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
lib/BOM/Event/Actions/Client/IdentityVerification.pm~|~2~|~330~|~21~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
lib/BOM/Event/Actions/Client/IdentityVerification.pm~|~2~|~347~|~34~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
lib/BOM/Event/Actions/Client/IdentityVerification.pm~|~2~|~382~|~22~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
lib/BOM/Event/Actions/Client/IdentityVerification.pm~|~2~|~433~|~29~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
lib/BOM/Event/Actions/Client/IdentityVerification.pm~|~2~|~443~|~5~|~"unless" block used~|~See page 97 of PBP~|~ControlStructures::ProhibitUnlessBlocks~||~
lib/BOM/Event/Actions/Client/IdentityVerification.pm~|~2~|~446~|~35~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
lib/BOM/Event/Actions/Client/IdentityVerification.pm~|~2~|~513~|~5~|~"unless" block used~|~See page 97 of PBP~|~ControlStructures::ProhibitUnlessBlocks~||~
lib/BOM/Event/Actions/Client/IdentityVerification.pm~|~2~|~558~|~5~|~"unless" block used~|~See page 97 of PBP~|~ControlStructures::ProhibitUnlessBlocks~||~
lib/BOM/Event/Actions/Client/IdentityVerification.pm~|~2~|~579~|~57~|~Postfix control "if" used~|~See pages 93,94 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/Client/IdentityVerification.pm~|~5~|~580~|~5~|~"return" statement with explicit "undef"~|~See page 199 of PBP~|~Subroutines::ProhibitExplicitReturnUndef~||~
lib/BOM/Event/Actions/Client/IdentityVerification.pm~|~2~|~654~|~33~|~_Pulp__UNIVERSAL_methods_5004 requires 5.004~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
lib/BOM/Event/Actions/Client/IdentityVerification.pm~|~2~|~665~|~69~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
lib/BOM/Event/Actions/Client/IdentityVerification.pm~|~2~|~667~|~24~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
lib/BOM/Event/Actions/Client/IdentityVerification.pm~|~3~|~667~|~24~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
lib/BOM/Event/Actions/Client/IdentityVerification.pm~|~2~|~667~|~24~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
lib/BOM/Event/Actions/Client/IdentityVerification.pm~|~2~|~681~|~5~|~Postfix control "unless" used~|~See pages 96,97 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/Client/IdentityVerification.pm~|~5~|~712~|~5~|~"return" statement with explicit "undef"~|~See page 199 of PBP~|~Subroutines::ProhibitExplicitReturnUndef~||~
lib/BOM/Event/Actions/Client/IdentityVerification.pm~|~2~|~713~|~9~|~Postfix control "unless" used~|~See pages 96,97 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/Client/IdentityVerification.pm~|~2~|~716~|~40~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
lib/BOM/Event/Actions/Client/IdentityVerification.pm~|~2~|~801~|~60~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
lib/BOM/Event/Actions/Client/IdentityVerification.pm~|~2~|~803~|~28~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
lib/BOM/Event/Actions/Client/IdentityVerification.pm~|~3~|~803~|~28~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
lib/BOM/Event/Actions/Client/IdentityVerification.pm~|~2~|~803~|~28~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
lib/BOM/Event/Actions/Client/IdentityVerification.pm~|~2~|~815~|~5~|~"unless" block used~|~See page 97 of PBP~|~ControlStructures::ProhibitUnlessBlocks~||~
lib/BOM/Event/Actions/Client/IdentityVerification.pm~|~5~|~861~|~5~|~"return" statement with explicit "undef"~|~See page 199 of PBP~|~Subroutines::ProhibitExplicitReturnUndef~||~
lib/BOM/Event/Actions/Client/IdentityVerification.pm~|~2~|~861~|~18~|~Postfix control "unless" used~|~See pages 96,97 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/Client/IdentityVerification.pm~|~2~|~863~|~27~|~String delimiter used with "split"~|~Express it as a regex instead~|~BuiltinFunctions::ProhibitStringySplit~||~
lib/BOM/Event/Actions/Client/IdentityVerification.pm~|~2~|~863~|~33~|~Quotes used with a noisy string~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitNoisyQuotes~||~
lib/BOM/Event/Actions/Client/IdentityVerification.pm~|~2~|~874~|~5~|~"unless" block used~|~See page 97 of PBP~|~ControlStructures::ProhibitUnlessBlocks~||~
lib/BOM/Event/Actions/Client/IdentityVerification.pm~|~2~|~887~|~74~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
lib/BOM/Event/Actions/Client/IdentityVerification.pm~|~2~|~887~|~94~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
lib/BOM/Event/Actions/Client/IdentityVerification.pm~|~2~|~887~|~98~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
lib/BOM/Event/Actions/Client/IdentityVerification.pm~|~2~|~908~|~73~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
lib/BOM/Event/Actions/Client/IdentityVerification.pm~|~3~|~929~|~17~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
lib/BOM/Event/Actions/Client/IdentityVerification.pm~|~2~|~930~|~21~|~Postfix control "unless" used~|~See pages 96,97 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/Client/IdentityVerification.pm~|~2~|~940~|~36~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
lib/BOM/Event/Actions/Client/IdentityVerification.pm~|~2~|~941~|~36~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
lib/BOM/Event/Actions/Client/IdentityVerification.pm~|~2~|~943~|~43~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
lib/BOM/Event/Actions/Client/IdentityVerification.pm~|~2~|~950~|~49~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
lib/BOM/Event/Actions/Client/IdentityVerification.pm~|~2~|~985~|~35~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
lib/BOM/Event/Actions/Client/IdentityVerification.pm~|~5~|~992~|~5~|~"return" statement with explicit "undef"~|~See page 199 of PBP~|~Subroutines::ProhibitExplicitReturnUndef~||~
lib/BOM/Event/Actions/Client/IdentityVerification.pm~|~2~|~992~|~18~|~Postfix control "unless" used~|~See pages 96,97 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
lib/BOM/Event/Actions/Client/Status.pm~|~2~|~1~|~1~|~No package-scoped "$VERSION" variable found~|~See page 404 of PBP~|~Modules::RequireVersionVar~||~
lib/BOM/Event/Actions/Client/Status.pm~|~2~|~4~|~1~|~_perl_5006_pragmas requires 5.006~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
lib/BOM/Event/Actions/Client/Status.pm~|~2~|~11~|~1~|~Missing "VERSION" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/Client/Status.pm~|~2~|~11~|~1~|~Missing "SYNOPSIS" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/Client/Status.pm~|~2~|~11~|~1~|~Missing "SUBROUTINES/METHODS" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/Client/Status.pm~|~2~|~11~|~1~|~Missing "DIAGNOSTICS" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/Client/Status.pm~|~2~|~11~|~1~|~Missing "CONFIGURATION AND ENVIRONMENT" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/Client/Status.pm~|~2~|~11~|~1~|~Missing "DEPENDENCIES" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/Client/Status.pm~|~2~|~11~|~1~|~Missing "INCOMPATIBILITIES" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/Client/Status.pm~|~2~|~11~|~1~|~Missing "BUGS AND LIMITATIONS" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/Client/Status.pm~|~2~|~11~|~1~|~Missing "AUTHOR" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/Client/Status.pm~|~2~|~11~|~1~|~Missing "LICENSE AND COPYRIGHT" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Actions/Client/Status.pm~|~4~|~41~|~1~|~Subroutine "execute_set_status" does not end with "return"~|~See page 197 of PBP~|~Subroutines::RequireFinalReturn~||~
lib/BOM/Event/Actions/Client/Status.pm~|~2~|~43~|~34~|~_perl_5010_operators requires 5.010~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
lib/BOM/Event/Actions/Client/Status.pm~|~3~|~43~|~37~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
lib/BOM/Event/Actions/Client/Status.pm~|~3~|~46~|~12~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
lib/BOM/Event/Actions/Client/Status.pm~|~2~|~49~|~38~|~_Pulp__var_method_without_parens requires 5.006~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
lib/BOM/Event/Actions/Client/Status.pm~|~2~|~56~|~6~|~Put semicolon ; on last statement in a block~|~(no explanation)~|~CodeLayout::RequireFinalSemicolon~||~
lib/BOM/Event/Actions/Client/Status.pm~|~4~|~73~|~1~|~Subroutine "execute_remove_status" does not end with "return"~|~See page 197 of PBP~|~Subroutines::RequireFinalReturn~||~
lib/BOM/Event/Actions/Client/Status.pm~|~3~|~76~|~12~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
lib/BOM/Event/Actions/Client/Status.pm~|~2~|~84~|~6~|~Put semicolon ; on last statement in a block~|~(no explanation)~|~CodeLayout::RequireFinalSemicolon~||~
lib/BOM/Event/Script/OnfidoRetry.pm~|~2~|~1~|~1~|~No package-scoped "$VERSION" variable found~|~See page 404 of PBP~|~Modules::RequireVersionVar~||~
lib/BOM/Event/Script/OnfidoRetry.pm~|~2~|~3~|~1~|~Missing "VERSION" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Script/OnfidoRetry.pm~|~2~|~3~|~1~|~Missing "SYNOPSIS" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Script/OnfidoRetry.pm~|~2~|~3~|~1~|~Missing "SUBROUTINES/METHODS" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Script/OnfidoRetry.pm~|~2~|~3~|~1~|~Missing "DIAGNOSTICS" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Script/OnfidoRetry.pm~|~2~|~3~|~1~|~Missing "CONFIGURATION AND ENVIRONMENT" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Script/OnfidoRetry.pm~|~2~|~3~|~1~|~Missing "DEPENDENCIES" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Script/OnfidoRetry.pm~|~2~|~3~|~1~|~Missing "INCOMPATIBILITIES" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Script/OnfidoRetry.pm~|~2~|~3~|~1~|~Missing "BUGS AND LIMITATIONS" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Script/OnfidoRetry.pm~|~2~|~3~|~1~|~Missing "AUTHOR" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Script/OnfidoRetry.pm~|~2~|~3~|~1~|~Missing "LICENSE AND COPYRIGHT" section in POD~|~See pages 133,138 of PBP~|~Documentation::RequirePodSections~||~
lib/BOM/Event/Script/OnfidoRetry.pm~|~2~|~14~|~1~|~_perl_5006_pragmas requires 5.006~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
lib/BOM/Event/Script/OnfidoRetry.pm~|~4~|~29~|~1~|~Module does not end with "1;"~|~Must end with a recognizable true value~|~Modules::RequireEndWithOne~||~
lib/BOM/Event/Script/OnfidoRetry.pm~|~2~|~38~|~5~|~_Pulp__for_loop_variable_using_my requires 5.004~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/00_syntax_diff.t~|~4~|~1~|~1~|~Code not contained in explicit package~|~Violates encapsulation~|~Modules::RequireExplicitPackage~||~
t/00_syntax_diff.t~|~4~|~1~|~1~|~Code not contained in explicit package~|~Violates encapsulation~|~Modules::RequireExplicitPackage~||~
t/00_syntax_diff.t~|~2~|~1~|~1~|~No package-scoped "$VERSION" variable found~|~See page 404 of PBP~|~Modules::RequireVersionVar~||~
t/00_syntax_diff.t~|~2~|~2~|~1~|~_perl_5006_pragmas requires 5.006~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/00_syntax_diff.t~|~4~|~8~|~1~|~Module does not end with "1;"~|~Must end with a recognizable true value~|~Modules::RequireEndWithOne~||~
t/01_check_bom_dependency.t~|~4~|~1~|~1~|~Code not contained in explicit package~|~Violates encapsulation~|~Modules::RequireExplicitPackage~||~
t/01_check_bom_dependency.t~|~4~|~1~|~1~|~Code not contained in explicit package~|~Violates encapsulation~|~Modules::RequireExplicitPackage~||~
t/01_check_bom_dependency.t~|~2~|~1~|~1~|~No package-scoped "$VERSION" variable found~|~See page 404 of PBP~|~Modules::RequireVersionVar~||~
t/01_check_bom_dependency.t~|~2~|~2~|~1~|~_perl_5006_pragmas requires 5.006~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/01_check_bom_dependency.t~|~4~|~8~|~1~|~Module does not end with "1;"~|~Must end with a recognizable true value~|~Modules::RequireEndWithOne~||~
t/02_syntax_all.t~|~4~|~1~|~1~|~Code not contained in explicit package~|~Violates encapsulation~|~Modules::RequireExplicitPackage~||~
t/02_syntax_all.t~|~4~|~1~|~1~|~Code not contained in explicit package~|~Violates encapsulation~|~Modules::RequireExplicitPackage~||~
t/02_syntax_all.t~|~2~|~1~|~1~|~No package-scoped "$VERSION" variable found~|~See page 404 of PBP~|~Modules::RequireVersionVar~||~
t/02_syntax_all.t~|~2~|~2~|~1~|~_perl_5006_pragmas requires 5.006~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/02_syntax_all.t~|~4~|~9~|~1~|~Module does not end with "1;"~|~Must end with a recognizable true value~|~Modules::RequireEndWithOne~||~
t/006_pod_coverage.t~|~4~|~1~|~1~|~Code not contained in explicit package~|~Violates encapsulation~|~Modules::RequireExplicitPackage~||~
t/006_pod_coverage.t~|~4~|~1~|~1~|~Code not contained in explicit package~|~Violates encapsulation~|~Modules::RequireExplicitPackage~||~
t/006_pod_coverage.t~|~2~|~1~|~1~|~No package-scoped "$VERSION" variable found~|~See page 404 of PBP~|~Modules::RequireVersionVar~||~
t/006_pod_coverage.t~|~2~|~2~|~1~|~_perl_5006_pragmas requires 5.006~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/006_pod_coverage.t~|~4~|~26~|~1~|~Module does not end with "1;"~|~Must end with a recognizable true value~|~Modules::RequireEndWithOne~||~
t/unit/sample.t~|~4~|~1~|~1~|~Code not contained in explicit package~|~Violates encapsulation~|~Modules::RequireExplicitPackage~||~
t/unit/sample.t~|~4~|~1~|~1~|~Code not contained in explicit package~|~Violates encapsulation~|~Modules::RequireExplicitPackage~||~
t/unit/sample.t~|~2~|~1~|~1~|~No package-scoped "$VERSION" variable found~|~See page 404 of PBP~|~Modules::RequireVersionVar~||~
t/unit/sample.t~|~2~|~2~|~1~|~_perl_5006_pragmas requires 5.006~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/unit/sample.t~|~4~|~7~|~1~|~Module does not end with "1;"~|~Must end with a recognizable true value~|~Modules::RequireEndWithOne~||~
t/BOM/005_exception_logged.t~|~2~|~1~|~1~|~No package-scoped "$VERSION" variable found~|~See page 404 of PBP~|~Modules::RequireVersionVar~||~
t/BOM/005_exception_logged.t~|~4~|~2~|~1~|~Code not contained in explicit package~|~Violates encapsulation~|~Modules::RequireExplicitPackage~||~
t/BOM/005_exception_logged.t~|~4~|~2~|~1~|~Code not contained in explicit package~|~Violates encapsulation~|~Modules::RequireExplicitPackage~||~
t/BOM/005_exception_logged.t~|~2~|~3~|~1~|~_perl_5006_pragmas requires 5.006~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/005_exception_logged.t~|~3~|~18~|~20~|~Private subroutine/method used~|~Use published APIs~|~Subroutines::ProtectPrivateSubs~||~
t/BOM/005_exception_logged.t~|~5~|~20~|~9~|~"return" statement with explicit "undef"~|~See page 199 of PBP~|~Subroutines::ProhibitExplicitReturnUndef~||~
t/BOM/005_exception_logged.t~|~5~|~25~|~5~|~Package declaration must match filename~|~Correct the filename or package statement~|~Modules::RequireFilenameMatchesPackage~||~
t/BOM/005_exception_logged.t~|~4~|~36~|~5~|~Subroutine "sub_exception_logged" does not end with "return"~|~See page 197 of PBP~|~Subroutines::RequireFinalReturn~||~
t/BOM/005_exception_logged.t~|~3~|~38~|~13~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
t/BOM/005_exception_logged.t~|~4~|~51~|~1~|~Module does not end with "1;"~|~Must end with a recognizable true value~|~Modules::RequireEndWithOne~||~
t/BOM/01_event_workflow.t~|~4~|~1~|~1~|~Code not contained in explicit package~|~Violates encapsulation~|~Modules::RequireExplicitPackage~||~
t/BOM/01_event_workflow.t~|~4~|~1~|~1~|~Code not contained in explicit package~|~Violates encapsulation~|~Modules::RequireExplicitPackage~||~
t/BOM/01_event_workflow.t~|~2~|~1~|~1~|~No package-scoped "$VERSION" variable found~|~See page 404 of PBP~|~Modules::RequireVersionVar~||~
t/BOM/01_event_workflow.t~|~2~|~2~|~1~|~_perl_5006_pragmas requires 5.006~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/01_event_workflow.t~|~4~|~19~|~1~|~Pragma "constant" used~|~See page 55 of PBP~|~ValuesAndExpressions::ProhibitConstantPragma~||~
t/BOM/01_event_workflow.t~|~2~|~25~|~41~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/01_event_workflow.t~|~2~|~26~|~10~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/01_event_workflow.t~|~2~|~31~|~41~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/01_event_workflow.t~|~2~|~32~|~10~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/01_event_workflow.t~|~2~|~37~|~41~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/01_event_workflow.t~|~2~|~38~|~10~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/01_event_workflow.t~|~2~|~43~|~41~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/01_event_workflow.t~|~2~|~44~|~10~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/01_event_workflow.t~|~2~|~49~|~41~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/01_event_workflow.t~|~2~|~50~|~10~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/01_event_workflow.t~|~2~|~55~|~41~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/01_event_workflow.t~|~2~|~56~|~10~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/01_event_workflow.t~|~2~|~61~|~31~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/01_event_workflow.t~|~2~|~62~|~10~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/01_event_workflow.t~|~2~|~67~|~31~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/01_event_workflow.t~|~2~|~68~|~10~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/01_event_workflow.t~|~2~|~73~|~31~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/01_event_workflow.t~|~2~|~74~|~10~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/01_event_workflow.t~|~2~|~86~|~9~|~_any_qr_tokens requires 5.005.03~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/01_event_workflow.t~|~2~|~86~|~9~|~_any_quotelike_regexp requires 5.005~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/01_event_workflow.t~|~2~|~86~|~9~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/01_event_workflow.t~|~3~|~86~|~9~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
t/BOM/01_event_workflow.t~|~2~|~86~|~9~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/01_event_workflow.t~|~2~|~94~|~9~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/01_event_workflow.t~|~3~|~94~|~9~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
t/BOM/01_event_workflow.t~|~2~|~94~|~9~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/01_event_workflow.t~|~2~|~100~|~5~|~_Pulp__for_loop_variable_using_my requires 5.004~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/01_event_workflow.t~|~2~|~101~|~28~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/01_event_workflow.t~|~2~|~112~|~15~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/01_event_workflow.t~|~2~|~137~|~75~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/01_event_workflow.t~|~2~|~139~|~56~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/01_event_workflow.t~|~2~|~142~|~82~|~Postfix control "for" used~|~See page 96 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
t/BOM/01_event_workflow.t~|~2~|~142~|~91~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/01_event_workflow.t~|~2~|~145~|~23~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/01_event_workflow.t~|~3~|~145~|~23~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
t/BOM/01_event_workflow.t~|~2~|~145~|~23~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/01_event_workflow.t~|~3~|~148~|~23~|~Split long regexps into smaller qr// chunks~|~See page 261 of PBP~|~RegularExpressions::ProhibitComplexRegexes~||~
t/BOM/01_event_workflow.t~|~2~|~148~|~23~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/01_event_workflow.t~|~2~|~148~|~23~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/01_event_workflow.t~|~2~|~157~|~77~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/01_event_workflow.t~|~2~|~163~|~26~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/01_event_workflow.t~|~2~|~165~|~19~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/01_event_workflow.t~|~2~|~171~|~26~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/01_event_workflow.t~|~2~|~173~|~19~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/01_event_workflow.t~|~2~|~179~|~26~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/01_event_workflow.t~|~2~|~181~|~19~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/01_event_workflow.t~|~3~|~188~|~42~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
t/BOM/01_event_workflow.t~|~3~|~189~|~42~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
t/BOM/01_event_workflow.t~|~3~|~190~|~42~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
t/BOM/01_event_workflow.t~|~2~|~196~|~26~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/01_event_workflow.t~|~2~|~198~|~19~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/01_event_workflow.t~|~2~|~204~|~26~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/01_event_workflow.t~|~2~|~206~|~19~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/01_event_workflow.t~|~2~|~212~|~26~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/01_event_workflow.t~|~2~|~214~|~19~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/01_event_workflow.t~|~2~|~224~|~15~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/01_event_workflow.t~|~2~|~245~|~142~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/01_event_workflow.t~|~2~|~247~|~56~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/01_event_workflow.t~|~2~|~250~|~82~|~Postfix control "for" used~|~See page 96 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
t/BOM/01_event_workflow.t~|~2~|~250~|~91~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/01_event_workflow.t~|~2~|~257~|~22~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/01_event_workflow.t~|~2~|~259~|~82~|~Postfix control "for" used~|~See page 96 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
t/BOM/01_event_workflow.t~|~2~|~259~|~91~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/01_event_workflow.t~|~2~|~271~|~18~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/01_event_workflow.t~|~2~|~277~|~26~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/01_event_workflow.t~|~2~|~279~|~19~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/01_event_workflow.t~|~2~|~289~|~35~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/01_event_workflow.t~|~2~|~290~|~14~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/01_event_workflow.t~|~2~|~292~|~19~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/01_event_workflow.t~|~4~|~299~|~1~|~Module does not end with "1;"~|~Must end with a recognizable true value~|~Modules::RequireEndWithOne~||~
t/BOM/007_retry_mechanism.t~|~4~|~1~|~1~|~Code not contained in explicit package~|~Violates encapsulation~|~Modules::RequireExplicitPackage~||~
t/BOM/007_retry_mechanism.t~|~4~|~1~|~1~|~Code not contained in explicit package~|~Violates encapsulation~|~Modules::RequireExplicitPackage~||~
t/BOM/007_retry_mechanism.t~|~2~|~1~|~1~|~No package-scoped "$VERSION" variable found~|~See page 404 of PBP~|~Modules::RequireVersionVar~||~
t/BOM/007_retry_mechanism.t~|~2~|~2~|~1~|~_perl_5006_pragmas requires 5.006~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/007_retry_mechanism.t~|~2~|~15~|~1~|~_pragma_utf8 requires 5.008~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/007_retry_mechanism.t~|~2~|~36~|~37~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
t/BOM/007_retry_mechanism.t~|~2~|~36~|~41~|~50000 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
t/BOM/007_retry_mechanism.t~|~2~|~36~|~41~|~Long number not separated with underscores~|~See page 59 of PBP~|~ValuesAndExpressions::RequireNumberSeparators~||~
t/BOM/007_retry_mechanism.t~|~2~|~36~|~62~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
t/BOM/007_retry_mechanism.t~|~2~|~36~|~66~|~60001 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
t/BOM/007_retry_mechanism.t~|~2~|~36~|~66~|~Long number not separated with underscores~|~See page 59 of PBP~|~ValuesAndExpressions::RequireNumberSeparators~||~
t/BOM/007_retry_mechanism.t~|~2~|~42~|~41~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/007_retry_mechanism.t~|~2~|~47~|~58~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/007_retry_mechanism.t~|~2~|~63~|~28~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
t/BOM/007_retry_mechanism.t~|~2~|~63~|~32~|~50000 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
t/BOM/007_retry_mechanism.t~|~2~|~63~|~32~|~Long number not separated with underscores~|~See page 59 of PBP~|~ValuesAndExpressions::RequireNumberSeparators~||~
t/BOM/007_retry_mechanism.t~|~2~|~69~|~58~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/007_retry_mechanism.t~|~2~|~71~|~63~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/007_retry_mechanism.t~|~2~|~87~|~28~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
t/BOM/007_retry_mechanism.t~|~2~|~87~|~32~|~60001 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
t/BOM/007_retry_mechanism.t~|~2~|~87~|~32~|~Long number not separated with underscores~|~See page 59 of PBP~|~ValuesAndExpressions::RequireNumberSeparators~||~
t/BOM/007_retry_mechanism.t~|~2~|~87~|~39~|~6 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
t/BOM/007_retry_mechanism.t~|~2~|~93~|~58~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/007_retry_mechanism.t~|~2~|~94~|~58~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/007_retry_mechanism.t~|~2~|~95~|~63~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/007_retry_mechanism.t~|~2~|~103~|~23~|~_any_qr_tokens requires 5.005.03~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/007_retry_mechanism.t~|~2~|~103~|~23~|~_any_quotelike_regexp requires 5.005~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/007_retry_mechanism.t~|~3~|~103~|~23~|~Split long regexps into smaller qr// chunks~|~See page 261 of PBP~|~RegularExpressions::ProhibitComplexRegexes~||~
t/BOM/007_retry_mechanism.t~|~2~|~103~|~23~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/007_retry_mechanism.t~|~3~|~103~|~23~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
t/BOM/007_retry_mechanism.t~|~2~|~103~|~23~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/007_retry_mechanism.t~|~2~|~112~|~35~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
t/BOM/007_retry_mechanism.t~|~2~|~112~|~39~|~60001 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
t/BOM/007_retry_mechanism.t~|~2~|~112~|~39~|~Long number not separated with underscores~|~See page 59 of PBP~|~ValuesAndExpressions::RequireNumberSeparators~||~
t/BOM/007_retry_mechanism.t~|~2~|~120~|~43~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/007_retry_mechanism.t~|~2~|~126~|~103~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/007_retry_mechanism.t~|~2~|~127~|~58~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/007_retry_mechanism.t~|~2~|~140~|~28~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
t/BOM/007_retry_mechanism.t~|~2~|~140~|~32~|~60001 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
t/BOM/007_retry_mechanism.t~|~2~|~140~|~32~|~Long number not separated with underscores~|~See page 59 of PBP~|~ValuesAndExpressions::RequireNumberSeparators~||~
t/BOM/007_retry_mechanism.t~|~2~|~140~|~53~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
t/BOM/007_retry_mechanism.t~|~2~|~140~|~57~|~60001 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
t/BOM/007_retry_mechanism.t~|~2~|~140~|~57~|~Long number not separated with underscores~|~See page 59 of PBP~|~ValuesAndExpressions::RequireNumberSeparators~||~
t/BOM/007_retry_mechanism.t~|~2~|~147~|~41~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/007_retry_mechanism.t~|~2~|~153~|~58~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/007_retry_mechanism.t~|~2~|~154~|~67~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/007_retry_mechanism.t~|~2~|~172~|~31~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
t/BOM/007_retry_mechanism.t~|~2~|~172~|~35~|~60001 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
t/BOM/007_retry_mechanism.t~|~2~|~172~|~35~|~Long number not separated with underscores~|~See page 59 of PBP~|~ValuesAndExpressions::RequireNumberSeparators~||~
t/BOM/007_retry_mechanism.t~|~2~|~177~|~58~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/007_retry_mechanism.t~|~2~|~178~|~58~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/007_retry_mechanism.t~|~2~|~181~|~76~|~3 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
t/BOM/007_retry_mechanism.t~|~2~|~190~|~41~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/007_retry_mechanism.t~|~3~|~193~|~65~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
t/BOM/007_retry_mechanism.t~|~2~|~194~|~78~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/007_retry_mechanism.t~|~2~|~198~|~23~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/007_retry_mechanism.t~|~2~|~198~|~23~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/007_retry_mechanism.t~|~2~|~209~|~28~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
t/BOM/007_retry_mechanism.t~|~2~|~209~|~32~|~Long number not separated with underscores~|~See page 59 of PBP~|~ValuesAndExpressions::RequireNumberSeparators~||~
t/BOM/007_retry_mechanism.t~|~2~|~214~|~71~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/007_retry_mechanism.t~|~5~|~214~|~92~|~"return" statement with explicit "undef"~|~See page 199 of PBP~|~Subroutines::ProhibitExplicitReturnUndef~||~
t/BOM/007_retry_mechanism.t~|~2~|~215~|~58~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/007_retry_mechanism.t~|~2~|~227~|~41~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/007_retry_mechanism.t~|~3~|~234~|~103~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
t/BOM/007_retry_mechanism.t~|~2~|~235~|~78~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/007_retry_mechanism.t~|~4~|~244~|~1~|~Module does not end with "1;"~|~Must end with a recognizable true value~|~Modules::RequireEndWithOne~||~
t/BOM/03_queue_handler_stream.t~|~4~|~1~|~1~|~Code not contained in explicit package~|~Violates encapsulation~|~Modules::RequireExplicitPackage~||~
t/BOM/03_queue_handler_stream.t~|~4~|~1~|~1~|~Code not contained in explicit package~|~Violates encapsulation~|~Modules::RequireExplicitPackage~||~
t/BOM/03_queue_handler_stream.t~|~2~|~1~|~1~|~No package-scoped "$VERSION" variable found~|~See page 404 of PBP~|~Modules::RequireVersionVar~||~
t/BOM/03_queue_handler_stream.t~|~2~|~2~|~1~|~_perl_5006_pragmas requires 5.006~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/03_queue_handler_stream.t~|~2~|~17~|~1~|~_pragma_utf8 requires 5.008~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/03_queue_handler_stream.t~|~4~|~24~|~29~|~Magic variable "$ENV" should be assigned as "local"~|~See pages 81,82 of PBP~|~Variables::RequireLocalizedPunctuationVars~||~
t/BOM/03_queue_handler_stream.t~|~4~|~26~|~38~|~Magic variable "$ENV" should be assigned as "local"~|~See pages 81,82 of PBP~|~Variables::RequireLocalizedPunctuationVars~||~
t/BOM/03_queue_handler_stream.t~|~2~|~26~|~40~|~3 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
t/BOM/03_queue_handler_stream.t~|~2~|~41~|~61~|~_any_qr_tokens requires 5.005.03~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/03_queue_handler_stream.t~|~2~|~41~|~61~|~_any_quotelike_regexp requires 5.005~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/03_queue_handler_stream.t~|~2~|~41~|~61~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/03_queue_handler_stream.t~|~2~|~41~|~61~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/03_queue_handler_stream.t~|~2~|~53~|~37~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/03_queue_handler_stream.t~|~2~|~55~|~29~|~Quotes used with a noisy string~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitNoisyQuotes~||~
t/BOM/03_queue_handler_stream.t~|~2~|~65~|~76~|~3 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
t/BOM/03_queue_handler_stream.t~|~2~|~109~|~23~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/03_queue_handler_stream.t~|~2~|~109~|~23~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/03_queue_handler_stream.t~|~2~|~126~|~80~|~123 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
t/BOM/03_queue_handler_stream.t~|~2~|~127~|~73~|~3 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
t/BOM/03_queue_handler_stream.t~|~2~|~127~|~80~|~4 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
t/BOM/03_queue_handler_stream.t~|~2~|~127~|~87~|~5 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
t/BOM/03_queue_handler_stream.t~|~2~|~127~|~94~|~7 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
t/BOM/03_queue_handler_stream.t~|~5~|~127~|~99~|~"return" statement with explicit "undef"~|~See page 199 of PBP~|~Subroutines::ProhibitExplicitReturnUndef~||~
t/BOM/03_queue_handler_stream.t~|~2~|~129~|~72~|~123 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
t/BOM/03_queue_handler_stream.t~|~2~|~140~|~58~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/03_queue_handler_stream.t~|~2~|~141~|~67~|~3 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
t/BOM/03_queue_handler_stream.t~|~3~|~160~|~23~|~Split long regexps into smaller qr// chunks~|~See page 261 of PBP~|~RegularExpressions::ProhibitComplexRegexes~||~
t/BOM/03_queue_handler_stream.t~|~2~|~160~|~23~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/03_queue_handler_stream.t~|~2~|~160~|~23~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/03_queue_handler_stream.t~|~2~|~164~|~73~|~Postfix control "if" used~|~See pages 93,94 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
t/BOM/03_queue_handler_stream.t~|~2~|~174~|~151~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/03_queue_handler_stream.t~|~2~|~190~|~27~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/03_queue_handler_stream.t~|~2~|~190~|~27~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/03_queue_handler_stream.t~|~2~|~205~|~27~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/03_queue_handler_stream.t~|~2~|~205~|~27~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/03_queue_handler_stream.t~|~2~|~216~|~151~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/03_queue_handler_stream.t~|~2~|~232~|~27~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/03_queue_handler_stream.t~|~3~|~232~|~27~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
t/BOM/03_queue_handler_stream.t~|~2~|~232~|~27~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/03_queue_handler_stream.t~|~2~|~247~|~27~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/03_queue_handler_stream.t~|~2~|~247~|~27~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/03_queue_handler_stream.t~|~2~|~261~|~27~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/03_queue_handler_stream.t~|~2~|~261~|~27~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/03_queue_handler_stream.t~|~2~|~277~|~18~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/03_queue_handler_stream.t~|~2~|~304~|~23~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/03_queue_handler_stream.t~|~3~|~304~|~23~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
t/BOM/03_queue_handler_stream.t~|~2~|~304~|~23~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/03_queue_handler_stream.t~|~2~|~318~|~23~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/03_queue_handler_stream.t~|~3~|~318~|~23~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
t/BOM/03_queue_handler_stream.t~|~2~|~318~|~23~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/03_queue_handler_stream.t~|~3~|~352~|~25~|~Split long regexps into smaller qr// chunks~|~See page 261 of PBP~|~RegularExpressions::ProhibitComplexRegexes~||~
t/BOM/03_queue_handler_stream.t~|~2~|~352~|~25~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/03_queue_handler_stream.t~|~3~|~352~|~25~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
t/BOM/03_queue_handler_stream.t~|~2~|~352~|~25~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/03_queue_handler_stream.t~|~3~|~356~|~25~|~Split long regexps into smaller qr// chunks~|~See page 261 of PBP~|~RegularExpressions::ProhibitComplexRegexes~||~
t/BOM/03_queue_handler_stream.t~|~2~|~356~|~25~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/03_queue_handler_stream.t~|~3~|~356~|~25~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
t/BOM/03_queue_handler_stream.t~|~2~|~356~|~25~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/03_queue_handler_stream.t~|~4~|~361~|~1~|~Module does not end with "1;"~|~Must end with a recognizable true value~|~Modules::RequireEndWithOne~||~
t/BOM/02_queue_handler.t~|~4~|~1~|~1~|~Code not contained in explicit package~|~Violates encapsulation~|~Modules::RequireExplicitPackage~||~
t/BOM/02_queue_handler.t~|~4~|~1~|~1~|~Code not contained in explicit package~|~Violates encapsulation~|~Modules::RequireExplicitPackage~||~
t/BOM/02_queue_handler.t~|~2~|~1~|~1~|~No package-scoped "$VERSION" variable found~|~See page 404 of PBP~|~Modules::RequireVersionVar~||~
t/BOM/02_queue_handler.t~|~2~|~2~|~1~|~_perl_5006_pragmas requires 5.006~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/02_queue_handler.t~|~2~|~15~|~1~|~_pragma_utf8 requires 5.008~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/02_queue_handler.t~|~4~|~23~|~29~|~Magic variable "$ENV" should be assigned as "local"~|~See pages 81,82 of PBP~|~Variables::RequireLocalizedPunctuationVars~||~
t/BOM/02_queue_handler.t~|~4~|~25~|~38~|~Magic variable "$ENV" should be assigned as "local"~|~See pages 81,82 of PBP~|~Variables::RequireLocalizedPunctuationVars~||~
t/BOM/02_queue_handler.t~|~2~|~25~|~40~|~3 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
t/BOM/02_queue_handler.t~|~2~|~39~|~53~|~_any_qr_tokens requires 5.005.03~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/02_queue_handler.t~|~2~|~39~|~53~|~_any_quotelike_regexp requires 5.005~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/02_queue_handler.t~|~2~|~39~|~53~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/02_queue_handler.t~|~2~|~39~|~53~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/02_queue_handler.t~|~2~|~46~|~23~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/02_queue_handler.t~|~2~|~46~|~23~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/02_queue_handler.t~|~3~|~59~|~23~|~Split long regexps into smaller qr// chunks~|~See page 261 of PBP~|~RegularExpressions::ProhibitComplexRegexes~||~
t/BOM/02_queue_handler.t~|~2~|~59~|~23~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/02_queue_handler.t~|~2~|~59~|~23~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/02_queue_handler.t~|~2~|~63~|~73~|~Postfix control "if" used~|~See pages 93,94 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
t/BOM/02_queue_handler.t~|~2~|~73~|~151~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/02_queue_handler.t~|~2~|~89~|~27~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/02_queue_handler.t~|~2~|~89~|~27~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/02_queue_handler.t~|~2~|~103~|~27~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/02_queue_handler.t~|~2~|~103~|~27~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/02_queue_handler.t~|~2~|~114~|~151~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/02_queue_handler.t~|~2~|~130~|~27~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/02_queue_handler.t~|~3~|~130~|~27~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
t/BOM/02_queue_handler.t~|~2~|~130~|~27~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/02_queue_handler.t~|~2~|~145~|~27~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/02_queue_handler.t~|~2~|~145~|~27~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/02_queue_handler.t~|~2~|~159~|~27~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/02_queue_handler.t~|~2~|~159~|~27~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/02_queue_handler.t~|~2~|~176~|~18~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/02_queue_handler.t~|~2~|~201~|~23~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/02_queue_handler.t~|~3~|~201~|~23~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
t/BOM/02_queue_handler.t~|~2~|~201~|~23~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/02_queue_handler.t~|~4~|~226~|~40~|~Magic variable "$ENV" should be assigned as "local"~|~See pages 81,82 of PBP~|~Variables::RequireLocalizedPunctuationVars~||~
t/BOM/02_queue_handler.t~|~2~|~233~|~23~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/02_queue_handler.t~|~3~|~233~|~23~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
t/BOM/02_queue_handler.t~|~2~|~233~|~23~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/02_queue_handler.t~|~3~|~280~|~25~|~Split long regexps into smaller qr// chunks~|~See page 261 of PBP~|~RegularExpressions::ProhibitComplexRegexes~||~
t/BOM/02_queue_handler.t~|~2~|~280~|~25~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/02_queue_handler.t~|~3~|~280~|~25~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
t/BOM/02_queue_handler.t~|~2~|~280~|~25~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/02_queue_handler.t~|~3~|~284~|~25~|~Split long regexps into smaller qr// chunks~|~See page 261 of PBP~|~RegularExpressions::ProhibitComplexRegexes~||~
t/BOM/02_queue_handler.t~|~2~|~284~|~25~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/02_queue_handler.t~|~3~|~284~|~25~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
t/BOM/02_queue_handler.t~|~2~|~284~|~25~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/02_queue_handler.t~|~4~|~289~|~1~|~Module does not end with "1;"~|~Must end with a recognizable true value~|~Modules::RequireEndWithOne~||~
t/BOM/Actions/email.t~|~4~|~1~|~1~|~Code not contained in explicit package~|~Violates encapsulation~|~Modules::RequireExplicitPackage~||~
t/BOM/Actions/email.t~|~4~|~1~|~1~|~Code not contained in explicit package~|~Violates encapsulation~|~Modules::RequireExplicitPackage~||~
t/BOM/Actions/email.t~|~2~|~1~|~1~|~No package-scoped "$VERSION" variable found~|~See page 404 of PBP~|~Modules::RequireVersionVar~||~
t/BOM/Actions/email.t~|~2~|~2~|~1~|~_perl_5006_pragmas requires 5.006~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/Actions/email.t~|~2~|~20~|~45~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/email.t~|~5~|~25~|~28~|~Subroutine "new" called using indirect syntax~|~See page 349 of PBP~|~Objects::ProhibitIndirectSyntax~||~
t/BOM/Actions/email.t~|~5~|~25~|~28~|~Subroutine "new" called using indirect syntax~|~See page 349 of PBP~|~Objects::ProhibitIndirectSyntax~||~
t/BOM/Actions/email.t~|~4~|~25~|~28~|~Subroutine "new" called using indirect syntax~|~See page 349 of PBP~|~Objects::ProhibitIndirectSyntax~||~
t/BOM/Actions/email.t~|~5~|~38~|~20~|~Subroutine "new" called using indirect syntax~|~See page 349 of PBP~|~Objects::ProhibitIndirectSyntax~||~
t/BOM/Actions/email.t~|~5~|~38~|~20~|~Subroutine "new" called using indirect syntax~|~See page 349 of PBP~|~Objects::ProhibitIndirectSyntax~||~
t/BOM/Actions/email.t~|~4~|~38~|~20~|~Subroutine "new" called using indirect syntax~|~See page 349 of PBP~|~Objects::ProhibitIndirectSyntax~||~
t/BOM/Actions/email.t~|~2~|~41~|~22~|~List of quoted literal words~|~Use 'qw()' instead~|~CodeLayout::ProhibitQuotedWordLists~||~
t/BOM/Actions/email.t~|~2~|~82~|~44~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/email.t~|~2~|~131~|~48~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/email.t~|~3~|~145~|~9~|~Duplicate hash key "lang"~|~(no explanation)~|~ValuesAndExpressions::ProhibitDuplicateHashKeys~||~
t/BOM/Actions/email.t~|~2~|~153~|~76~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/email.t~|~4~|~158~|~1~|~Module does not end with "1;"~|~Must end with a recognizable true value~|~Modules::RequireEndWithOne~||~
t/BOM/Actions/record_user_payment_accounts.t~|~4~|~1~|~1~|~Code not contained in explicit package~|~Violates encapsulation~|~Modules::RequireExplicitPackage~||~
t/BOM/Actions/record_user_payment_accounts.t~|~4~|~1~|~1~|~Code not contained in explicit package~|~Violates encapsulation~|~Modules::RequireExplicitPackage~||~
t/BOM/Actions/record_user_payment_accounts.t~|~2~|~1~|~1~|~No package-scoped "$VERSION" variable found~|~See page 404 of PBP~|~Modules::RequireVersionVar~||~
t/BOM/Actions/record_user_payment_accounts.t~|~2~|~2~|~1~|~_perl_5006_pragmas requires 5.006~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/Actions/record_user_payment_accounts.t~|~4~|~39~|~1~|~Subroutine "redis_clear" does not end with "return"~|~See page 197 of PBP~|~Subroutines::RequireFinalReturn~||~
t/BOM/Actions/record_user_payment_accounts.t~|~4~|~43~|~5~|~Fully qualified functions calls should end in parens~|~To differentiate from class methods and function calls, use Foo:Bar::baz()->gimble~|~Subroutines::ProhibitAmbiguousFunctionCalls~||~
t/BOM/Actions/record_user_payment_accounts.t~|~2~|~46~|~23~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/record_user_payment_accounts.t~|~2~|~49~|~31~|~Quotes used with a noisy string~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitNoisyQuotes~||~
t/BOM/Actions/record_user_payment_accounts.t~|~3~|~50~|~5~|~Private subroutine/method used~|~Use published APIs~|~Subroutines::ProtectPrivateSubs~||~
t/BOM/Actions/record_user_payment_accounts.t~|~2~|~66~|~38~|~_any_qr_tokens requires 5.005.03~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/Actions/record_user_payment_accounts.t~|~2~|~66~|~38~|~_any_quotelike_regexp requires 5.005~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/Actions/record_user_payment_accounts.t~|~2~|~66~|~38~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/record_user_payment_accounts.t~|~2~|~66~|~38~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/record_user_payment_accounts.t~|~2~|~89~|~47~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/record_user_payment_accounts.t~|~2~|~89~|~47~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/record_user_payment_accounts.t~|~2~|~118~|~38~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/record_user_payment_accounts.t~|~2~|~118~|~38~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/record_user_payment_accounts.t~|~2~|~132~|~38~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/record_user_payment_accounts.t~|~2~|~132~|~38~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/record_user_payment_accounts.t~|~2~|~140~|~47~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/record_user_payment_accounts.t~|~2~|~140~|~47~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/record_user_payment_accounts.t~|~2~|~168~|~45~|~30 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
t/BOM/Actions/record_user_payment_accounts.t~|~4~|~180~|~1~|~Module does not end with "1;"~|~Must end with a recognizable true value~|~Modules::RequireEndWithOne~||~
t/BOM/Actions/onfido.t~|~3~|~1~|~1~|~Main code has high complexity score (31)~|~Consider refactoring~|~Modules::ProhibitExcessMainComplexity~||~
t/BOM/Actions/onfido.t~|~4~|~1~|~1~|~Code not contained in explicit package~|~Violates encapsulation~|~Modules::RequireExplicitPackage~||~
t/BOM/Actions/onfido.t~|~4~|~1~|~1~|~Code not contained in explicit package~|~Violates encapsulation~|~Modules::RequireExplicitPackage~||~
t/BOM/Actions/onfido.t~|~2~|~1~|~1~|~No package-scoped "$VERSION" variable found~|~See page 404 of PBP~|~Modules::RequireVersionVar~||~
t/BOM/Actions/onfido.t~|~2~|~2~|~1~|~_perl_5006_pragmas requires 5.006~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/Actions/onfido.t~|~2~|~70~|~29~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/onfido.t~|~2~|~90~|~31~|~_Pulp__arrow_coderef_call requires 5.004~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/Actions/onfido.t~|~2~|~100~|~66~|~10 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
t/BOM/Actions/onfido.t~|~2~|~105~|~23~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/onfido.t~|~2~|~113~|~21~|~Postfix control "if" used~|~See pages 93,94 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
t/BOM/Actions/onfido.t~|~2~|~129~|~38~|~Quotes used with a noisy string~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitNoisyQuotes~||~
t/BOM/Actions/onfido.t~|~2~|~135~|~38~|~Quotes used with a noisy string~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitNoisyQuotes~||~
t/BOM/Actions/onfido.t~|~4~|~172~|~33~|~Negative array index should be used~|~See page 88 of PBP~|~Variables::RequireNegativeIndices~||~
t/BOM/Actions/onfido.t~|~2~|~177~|~25~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
t/BOM/Actions/onfido.t~|~4~|~178~|~33~|~Negative array index should be used~|~See page 88 of PBP~|~Variables::RequireNegativeIndices~||~
t/BOM/Actions/onfido.t~|~2~|~182~|~28~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
t/BOM/Actions/onfido.t~|~4~|~183~|~33~|~Negative array index should be used~|~See page 88 of PBP~|~Variables::RequireNegativeIndices~||~
t/BOM/Actions/onfido.t~|~2~|~194~|~28~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
t/BOM/Actions/onfido.t~|~2~|~196~|~35~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/onfido.t~|~3~|~206~|~15~|~Private subroutine/method used~|~Use published APIs~|~Subroutines::ProtectPrivateSubs~||~
t/BOM/Actions/onfido.t~|~2~|~208~|~22~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/onfido.t~|~2~|~240~|~38~|~Quotes used with a noisy string~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitNoisyQuotes~||~
t/BOM/Actions/onfido.t~|~2~|~246~|~38~|~Quotes used with a noisy string~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitNoisyQuotes~||~
t/BOM/Actions/onfido.t~|~4~|~264~|~33~|~Negative array index should be used~|~See page 88 of PBP~|~Variables::RequireNegativeIndices~||~
t/BOM/Actions/onfido.t~|~2~|~273~|~28~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
t/BOM/Actions/onfido.t~|~2~|~275~|~38~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/onfido.t~|~3~|~285~|~5~|~Reused variable name in lexical scope: $action_handler~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/onfido.t~|~3~|~290~|~5~|~"$current" is declared but not used~|~Unused variables clutter code and make it harder to read~|~Variables::ProhibitUnusedVariables~||~
t/BOM/Actions/onfido.t~|~2~|~322~|~26~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/onfido.t~|~2~|~348~|~43~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/onfido.t~|~2~|~361~|~43~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/onfido.t~|~2~|~373~|~55~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/onfido.t~|~2~|~390~|~43~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/onfido.t~|~2~|~406~|~43~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/onfido.t~|~2~|~426~|~43~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/onfido.t~|~2~|~442~|~43~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/onfido.t~|~2~|~459~|~39~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/onfido.t~|~2~|~463~|~26~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/onfido.t~|~2~|~463~|~26~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/onfido.t~|~2~|~472~|~33~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/onfido.t~|~2~|~491~|~5~|~_Pulp__for_loop_variable_using_my requires 5.004~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/Actions/onfido.t~|~3~|~492~|~12~|~Private subroutine/method used~|~Use published APIs~|~Subroutines::ProtectPrivateSubs~||~
t/BOM/Actions/onfido.t~|~2~|~493~|~59~|~_perl_5010_operators requires 5.010~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/Actions/onfido.t~|~2~|~506~|~72~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/onfido.t~|~2~|~517~|~72~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/onfido.t~|~2~|~528~|~72~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/onfido.t~|~2~|~529~|~14~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/onfido.t~|~2~|~539~|~72~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/onfido.t~|~3~|~553~|~12~|~Private subroutine/method used~|~Use published APIs~|~Subroutines::ProtectPrivateSubs~||~
t/BOM/Actions/onfido.t~|~2~|~555~|~45~|~_any_qr_tokens requires 5.005.03~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/Actions/onfido.t~|~2~|~555~|~45~|~_any_quotelike_regexp requires 5.005~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/Actions/onfido.t~|~2~|~555~|~45~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/onfido.t~|~2~|~555~|~45~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/onfido.t~|~2~|~560~|~47~|~-1 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
t/BOM/Actions/onfido.t~|~2~|~571~|~72~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/onfido.t~|~2~|~581~|~72~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/onfido.t~|~2~|~591~|~72~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/onfido.t~|~3~|~599~|~9~|~Reused variable name in lexical scope: $email~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/onfido.t~|~3~|~611~|~12~|~Private subroutine/method used~|~Use published APIs~|~Subroutines::ProtectPrivateSubs~||~
t/BOM/Actions/onfido.t~|~2~|~613~|~45~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/onfido.t~|~3~|~613~|~45~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
t/BOM/Actions/onfido.t~|~2~|~613~|~45~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/onfido.t~|~2~|~619~|~51~|~-1 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
t/BOM/Actions/onfido.t~|~3~|~674~|~5~|~Private subroutine/method used~|~Use published APIs~|~Subroutines::ProtectPrivateSubs~||~
t/BOM/Actions/onfido.t~|~2~|~678~|~23~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/onfido.t~|~3~|~678~|~23~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
t/BOM/Actions/onfido.t~|~2~|~678~|~23~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/onfido.t~|~2~|~686~|~43~|~422 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
t/BOM/Actions/onfido.t~|~3~|~706~|~5~|~Private subroutine/method used~|~Use published APIs~|~Subroutines::ProtectPrivateSubs~||~
t/BOM/Actions/onfido.t~|~2~|~711~|~23~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/onfido.t~|~2~|~711~|~23~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/onfido.t~|~3~|~716~|~5~|~Private subroutine/method used~|~Use published APIs~|~Subroutines::ProtectPrivateSubs~||~
t/BOM/Actions/onfido.t~|~2~|~720~|~23~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/onfido.t~|~2~|~720~|~23~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/onfido.t~|~3~|~725~|~5~|~Private subroutine/method used~|~Use published APIs~|~Subroutines::ProtectPrivateSubs~||~
t/BOM/Actions/onfido.t~|~2~|~730~|~23~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/onfido.t~|~2~|~730~|~23~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/onfido.t~|~3~|~735~|~5~|~Private subroutine/method used~|~Use published APIs~|~Subroutines::ProtectPrivateSubs~||~
t/BOM/Actions/onfido.t~|~2~|~740~|~23~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/onfido.t~|~2~|~740~|~23~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/onfido.t~|~3~|~745~|~5~|~Private subroutine/method used~|~Use published APIs~|~Subroutines::ProtectPrivateSubs~||~
t/BOM/Actions/onfido.t~|~2~|~750~|~23~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/onfido.t~|~2~|~750~|~23~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/onfido.t~|~3~|~765~|~5~|~Private subroutine/method used~|~Use published APIs~|~Subroutines::ProtectPrivateSubs~||~
t/BOM/Actions/onfido.t~|~2~|~770~|~23~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/onfido.t~|~2~|~770~|~23~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/onfido.t~|~2~|~801~|~27~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/onfido.t~|~2~|~808~|~43~|~422 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
t/BOM/Actions/onfido.t~|~2~|~816~|~43~|~422 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
t/BOM/Actions/onfido.t~|~3~|~822~|~27~|~Private subroutine/method used~|~Use published APIs~|~Subroutines::ProtectPrivateSubs~||~
t/BOM/Actions/onfido.t~|~3~|~831~|~5~|~Private subroutine/method used~|~Use published APIs~|~Subroutines::ProtectPrivateSubs~||~
t/BOM/Actions/onfido.t~|~2~|~833~|~23~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/onfido.t~|~2~|~833~|~23~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/onfido.t~|~3~|~846~|~27~|~Private subroutine/method used~|~Use published APIs~|~Subroutines::ProtectPrivateSubs~||~
t/BOM/Actions/onfido.t~|~3~|~854~|~5~|~Private subroutine/method used~|~Use published APIs~|~Subroutines::ProtectPrivateSubs~||~
t/BOM/Actions/onfido.t~|~2~|~856~|~23~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/onfido.t~|~2~|~856~|~23~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/onfido.t~|~3~|~871~|~22~|~Private subroutine/method used~|~Use published APIs~|~Subroutines::ProtectPrivateSubs~||~
t/BOM/Actions/onfido.t~|~2~|~892~|~56~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/onfido.t~|~2~|~898~|~65~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/onfido.t~|~5~|~906~|~13~|~"return" statement with explicit "undef"~|~See page 199 of PBP~|~Subroutines::ProhibitExplicitReturnUndef~||~
t/BOM/Actions/onfido.t~|~2~|~906~|~26~|~Postfix control "unless" used~|~See pages 96,97 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
t/BOM/Actions/onfido.t~|~2~|~932~|~47~|~422 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
t/BOM/Actions/onfido.t~|~3~|~933~|~31~|~Return value of eval not tested~|~You can't depend upon the value of $@/$EVAL_ERROR to tell whether an eval failed~|~ErrorHandling::RequireCheckingReturnValueOfEval~||~
t/BOM/Actions/onfido.t~|~3~|~937~|~13~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
t/BOM/Actions/onfido.t~|~2~|~938~|~40~|~Postfix control "unless" used~|~See pages 96,97 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
t/BOM/Actions/onfido.t~|~3~|~955~|~44~|~Split long regexps into smaller qr// chunks~|~See page 261 of PBP~|~RegularExpressions::ProhibitComplexRegexes~||~
t/BOM/Actions/onfido.t~|~2~|~955~|~44~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/onfido.t~|~3~|~955~|~44~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
t/BOM/Actions/onfido.t~|~2~|~955~|~44~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/onfido.t~|~2~|~962~|~18~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/onfido.t~|~3~|~979~|~44~|~Split long regexps into smaller qr// chunks~|~See page 261 of PBP~|~RegularExpressions::ProhibitComplexRegexes~||~
t/BOM/Actions/onfido.t~|~2~|~979~|~44~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/onfido.t~|~3~|~979~|~44~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
t/BOM/Actions/onfido.t~|~2~|~979~|~44~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/onfido.t~|~2~|~986~|~18~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/onfido.t~|~3~|~1004~|~44~|~Split long regexps into smaller qr// chunks~|~See page 261 of PBP~|~RegularExpressions::ProhibitComplexRegexes~||~
t/BOM/Actions/onfido.t~|~2~|~1004~|~44~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/onfido.t~|~3~|~1004~|~44~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
t/BOM/Actions/onfido.t~|~2~|~1004~|~44~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/onfido.t~|~2~|~1011~|~18~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/onfido.t~|~3~|~1029~|~44~|~Split long regexps into smaller qr// chunks~|~See page 261 of PBP~|~RegularExpressions::ProhibitComplexRegexes~||~
t/BOM/Actions/onfido.t~|~2~|~1029~|~44~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/onfido.t~|~3~|~1029~|~44~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
t/BOM/Actions/onfido.t~|~2~|~1029~|~44~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/onfido.t~|~2~|~1036~|~18~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/onfido.t~|~3~|~1053~|~44~|~Split long regexps into smaller qr// chunks~|~See page 261 of PBP~|~RegularExpressions::ProhibitComplexRegexes~||~
t/BOM/Actions/onfido.t~|~2~|~1053~|~44~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/onfido.t~|~3~|~1053~|~44~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
t/BOM/Actions/onfido.t~|~2~|~1053~|~44~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/onfido.t~|~2~|~1129~|~14~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/onfido.t~|~2~|~1141~|~44~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/onfido.t~|~3~|~1141~|~44~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
t/BOM/Actions/onfido.t~|~2~|~1141~|~44~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/onfido.t~|~2~|~1156~|~34~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/onfido.t~|~3~|~1174~|~13~|~Reused variable name in lexical scope: $user~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/onfido.t~|~3~|~1191~|~17~|~Private subroutine/method used~|~Use published APIs~|~Subroutines::ProtectPrivateSubs~||~
t/BOM/Actions/onfido.t~|~2~|~1195~|~59~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/onfido.t~|~4~|~1234~|~1~|~Subroutine "release_onfido_lock" does not end with "return"~|~See page 197 of PBP~|~Subroutines::RequireFinalReturn~||~
t/BOM/Actions/onfido.t~|~2~|~1237~|~18~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/onfido.t~|~4~|~1242~|~1~|~Module does not end with "1;"~|~Must end with a recognizable true value~|~Modules::RequireEndWithOne~||~
t/BOM/Actions/track.t~|~4~|~1~|~1~|~Code not contained in explicit package~|~Violates encapsulation~|~Modules::RequireExplicitPackage~||~
t/BOM/Actions/track.t~|~4~|~1~|~1~|~Code not contained in explicit package~|~Violates encapsulation~|~Modules::RequireExplicitPackage~||~
t/BOM/Actions/track.t~|~2~|~1~|~1~|~No package-scoped "$VERSION" variable found~|~See page 404 of PBP~|~Modules::RequireVersionVar~||~
t/BOM/Actions/track.t~|~2~|~2~|~1~|~_perl_5006_pragmas requires 5.006~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/Actions/track.t~|~2~|~25~|~21~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/track.t~|~5~|~51~|~24~|~Subroutine "new" called using indirect syntax~|~See page 349 of PBP~|~Objects::ProhibitIndirectSyntax~||~
t/BOM/Actions/track.t~|~5~|~51~|~24~|~Subroutine "new" called using indirect syntax~|~See page 349 of PBP~|~Objects::ProhibitIndirectSyntax~||~
t/BOM/Actions/track.t~|~4~|~51~|~24~|~Subroutine "new" called using indirect syntax~|~See page 349 of PBP~|~Objects::ProhibitIndirectSyntax~||~
t/BOM/Actions/track.t~|~5~|~52~|~24~|~Subroutine "new" called using indirect syntax~|~See page 349 of PBP~|~Objects::ProhibitIndirectSyntax~||~
t/BOM/Actions/track.t~|~5~|~52~|~24~|~Subroutine "new" called using indirect syntax~|~See page 349 of PBP~|~Objects::ProhibitIndirectSyntax~||~
t/BOM/Actions/track.t~|~4~|~52~|~24~|~Subroutine "new" called using indirect syntax~|~See page 349 of PBP~|~Objects::ProhibitIndirectSyntax~||~
t/BOM/Actions/track.t~|~2~|~105~|~27~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/track.t~|~2~|~110~|~9~|~_any_qr_tokens requires 5.005.03~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/Actions/track.t~|~2~|~110~|~9~|~_any_quotelike_regexp requires 5.005~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/Actions/track.t~|~3~|~110~|~9~|~Split long regexps into smaller qr// chunks~|~See page 261 of PBP~|~RegularExpressions::ProhibitComplexRegexes~||~
t/BOM/Actions/track.t~|~2~|~110~|~9~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/track.t~|~3~|~110~|~9~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
t/BOM/Actions/track.t~|~2~|~110~|~9~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/track.t~|~3~|~114~|~9~|~Split long regexps into smaller qr// chunks~|~See page 261 of PBP~|~RegularExpressions::ProhibitComplexRegexes~||~
t/BOM/Actions/track.t~|~2~|~114~|~9~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/track.t~|~3~|~114~|~9~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
t/BOM/Actions/track.t~|~2~|~114~|~9~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/track.t~|~2~|~118~|~9~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/track.t~|~3~|~118~|~9~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
t/BOM/Actions/track.t~|~2~|~118~|~9~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/track.t~|~2~|~122~|~123~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/track.t~|~2~|~122~|~123~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/track.t~|~2~|~132~|~29~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/track.t~|~3~|~140~|~5~|~Test without a label~|~Add a label argument to all Test::More functions~|~TestingAndDebugging::RequireTestLabels~||~
t/BOM/Actions/track.t~|~2~|~164~|~34~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/track.t~|~2~|~179~|~29~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/track.t~|~2~|~180~|~10~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/track.t~|~2~|~188~|~31~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/track.t~|~2~|~196~|~45~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/track.t~|~2~|~206~|~35~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/track.t~|~2~|~232~|~37~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/track.t~|~2~|~233~|~18~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/track.t~|~2~|~243~|~31~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/track.t~|~2~|~293~|~35~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/track.t~|~2~|~306~|~66~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/track.t~|~2~|~336~|~35~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/track.t~|~2~|~347~|~67~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/track.t~|~2~|~378~|~35~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/track.t~|~2~|~388~|~76~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/track.t~|~2~|~418~|~35~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/track.t~|~2~|~431~|~66~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/track.t~|~2~|~463~|~35~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/track.t~|~2~|~475~|~75~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/track.t~|~2~|~507~|~35~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/track.t~|~2~|~522~|~74~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/track.t~|~2~|~545~|~35~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/track.t~|~2~|~556~|~78~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/track.t~|~2~|~588~|~35~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/track.t~|~2~|~603~|~73~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/track.t~|~2~|~631~|~35~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/track.t~|~2~|~641~|~41~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/track.t~|~3~|~656~|~9~|~Test without a label~|~Add a label argument to all Test::More functions~|~TestingAndDebugging::RequireTestLabels~||~
t/BOM/Actions/track.t~|~2~|~658~|~22~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/track.t~|~2~|~662~|~9~|~Found method-call chain of length 4~|~Long chains of method calls indicate code that is too tightly coupled~|~ValuesAndExpressions::ProhibitLongChainsOfMethodCalls~||~
t/BOM/Actions/track.t~|~3~|~664~|~9~|~Test without a label~|~Add a label argument to all Test::More functions~|~TestingAndDebugging::RequireTestLabels~||~
t/BOM/Actions/track.t~|~2~|~666~|~22~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/track.t~|~2~|~670~|~9~|~_Pulp__my_list_with_undef requires 5.005~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/Actions/track.t~|~2~|~683~|~68~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/track.t~|~2~|~685~|~41~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/track.t~|~3~|~696~|~9~|~Test without a label~|~Add a label argument to all Test::More functions~|~TestingAndDebugging::RequireTestLabels~||~
t/BOM/Actions/track.t~|~2~|~699~|~26~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/track.t~|~2~|~701~|~12~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/track.t~|~2~|~701~|~12~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/track.t~|~4~|~706~|~1~|~Subroutine "test_segment_customer" does not end with "return"~|~See page 197 of PBP~|~Subroutines::RequireFinalReturn~||~
t/BOM/Actions/track.t~|~2~|~709~|~19~|~_Pulp__UNIVERSAL_methods_5004 requires 5.004~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/Actions/track.t~|~2~|~711~|~32~|~String delimiter used with "split"~|~Express it as a regex instead~|~BuiltinFunctions::ProhibitStringySplit~||~
t/BOM/Actions/track.t~|~2~|~711~|~38~|~Quotes used with a noisy string~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitNoisyQuotes~||~
t/BOM/Actions/track.t~|~2~|~729~|~30~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/track.t~|~2~|~735~|~59~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
t/BOM/Actions/track.t~|~2~|~737~|~113~|~_perl_5010_operators requires 5.010~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/Actions/track.t~|~2~|~737~|~116~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
t/BOM/Actions/track.t~|~2~|~741~|~40~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
t/BOM/Actions/track.t~|~2~|~743~|~45~|~Quotes used with a noisy string~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitNoisyQuotes~||~
t/BOM/Actions/track.t~|~2~|~760~|~25~|~19111 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
t/BOM/Actions/track.t~|~2~|~760~|~25~|~Long number not separated with underscores~|~See page 59 of PBP~|~ValuesAndExpressions::RequireNumberSeparators~||~
t/BOM/Actions/track.t~|~2~|~761~|~25~|~1169 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
t/BOM/Actions/track.t~|~3~|~763~|~8~|~Private subroutine/method used~|~Use published APIs~|~Subroutines::ProtectPrivateSubs~||~
t/BOM/Actions/track.t~|~3~|~764~|~8~|~Private subroutine/method used~|~Use published APIs~|~Subroutines::ProtectPrivateSubs~||~
t/BOM/Actions/track.t~|~3~|~765~|~8~|~Private subroutine/method used~|~Use published APIs~|~Subroutines::ProtectPrivateSubs~||~
t/BOM/Actions/track.t~|~3~|~766~|~8~|~Private subroutine/method used~|~Use published APIs~|~Subroutines::ProtectPrivateSubs~||~
t/BOM/Actions/track.t~|~2~|~770~|~34~|~List of quoted literal words~|~Use 'qw()' instead~|~CodeLayout::ProhibitQuotedWordLists~||~
t/BOM/Actions/track.t~|~3~|~775~|~12~|~Private subroutine/method used~|~Use published APIs~|~Subroutines::ProtectPrivateSubs~||~
t/BOM/Actions/track.t~|~2~|~775~|~70~|~-1000 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
t/BOM/Actions/track.t~|~2~|~775~|~98~|~_postfix_foreach requires 5.004.05~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/Actions/track.t~|~2~|~775~|~98~|~Postfix control "foreach" used~|~See page 96 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
t/BOM/Actions/track.t~|~4~|~783~|~1~|~Module does not end with "1;"~|~Must end with a recognizable true value~|~Modules::RequireEndWithOne~||~
t/BOM/Actions/social_responsibility_check.t~|~4~|~1~|~1~|~Code not contained in explicit package~|~Violates encapsulation~|~Modules::RequireExplicitPackage~||~
t/BOM/Actions/social_responsibility_check.t~|~4~|~1~|~1~|~Code not contained in explicit package~|~Violates encapsulation~|~Modules::RequireExplicitPackage~||~
t/BOM/Actions/social_responsibility_check.t~|~2~|~1~|~1~|~No package-scoped "$VERSION" variable found~|~See page 404 of PBP~|~Modules::RequireVersionVar~||~
t/BOM/Actions/social_responsibility_check.t~|~2~|~2~|~1~|~_perl_5006_pragmas requires 5.006~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/Actions/social_responsibility_check.t~|~2~|~4~|~1~|~_pragma_utf8 requires 5.008~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/Actions/social_responsibility_check.t~|~2~|~34~|~32~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/social_responsibility_check.t~|~2~|~41~|~32~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/social_responsibility_check.t~|~2~|~62~|~117~|~_any_qr_tokens requires 5.005.03~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/Actions/social_responsibility_check.t~|~2~|~62~|~117~|~_any_quotelike_regexp requires 5.005~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/Actions/social_responsibility_check.t~|~2~|~62~|~117~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/social_responsibility_check.t~|~2~|~62~|~117~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/social_responsibility_check.t~|~2~|~65~|~78~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/social_responsibility_check.t~|~2~|~65~|~78~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/social_responsibility_check.t~|~2~|~76~|~5~|~_Pulp__for_loop_variable_using_my requires 5.004~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/Actions/social_responsibility_check.t~|~2~|~79~|~27~|~500 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
t/BOM/Actions/social_responsibility_check.t~|~2~|~81~|~19~|~4 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
t/BOM/Actions/social_responsibility_check.t~|~2~|~87~|~40~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/social_responsibility_check.t~|~2~|~91~|~40~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/social_responsibility_check.t~|~2~|~94~|~33~|~1500 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
t/BOM/Actions/social_responsibility_check.t~|~2~|~109~|~50~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/social_responsibility_check.t~|~3~|~109~|~50~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
t/BOM/Actions/social_responsibility_check.t~|~2~|~109~|~50~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/social_responsibility_check.t~|~2~|~113~|~25~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/social_responsibility_check.t~|~3~|~113~|~25~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
t/BOM/Actions/social_responsibility_check.t~|~2~|~113~|~25~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/social_responsibility_check.t~|~2~|~115~|~36~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/social_responsibility_check.t~|~3~|~115~|~36~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
t/BOM/Actions/social_responsibility_check.t~|~2~|~115~|~36~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/social_responsibility_check.t~|~2~|~130~|~29~|~500 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
t/BOM/Actions/social_responsibility_check.t~|~2~|~153~|~36~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/social_responsibility_check.t~|~2~|~166~|~42~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/social_responsibility_check.t~|~3~|~166~|~42~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
t/BOM/Actions/social_responsibility_check.t~|~2~|~166~|~42~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/social_responsibility_check.t~|~2~|~167~|~28~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/social_responsibility_check.t~|~2~|~167~|~28~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/social_responsibility_check.t~|~2~|~180~|~36~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/social_responsibility_check.t~|~2~|~187~|~42~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/social_responsibility_check.t~|~3~|~187~|~42~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
t/BOM/Actions/social_responsibility_check.t~|~2~|~187~|~42~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/social_responsibility_check.t~|~2~|~191~|~17~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/social_responsibility_check.t~|~3~|~191~|~17~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
t/BOM/Actions/social_responsibility_check.t~|~2~|~191~|~17~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/social_responsibility_check.t~|~2~|~193~|~28~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/social_responsibility_check.t~|~3~|~193~|~28~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
t/BOM/Actions/social_responsibility_check.t~|~2~|~193~|~28~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/social_responsibility_check.t~|~2~|~218~|~40~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/social_responsibility_check.t~|~2~|~224~|~21~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/social_responsibility_check.t~|~3~|~224~|~21~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
t/BOM/Actions/social_responsibility_check.t~|~2~|~224~|~21~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/social_responsibility_check.t~|~2~|~225~|~46~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/social_responsibility_check.t~|~3~|~225~|~46~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
t/BOM/Actions/social_responsibility_check.t~|~2~|~225~|~46~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/social_responsibility_check.t~|~2~|~226~|~32~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/social_responsibility_check.t~|~3~|~226~|~32~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
t/BOM/Actions/social_responsibility_check.t~|~2~|~226~|~32~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/social_responsibility_check.t~|~2~|~234~|~40~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/social_responsibility_check.t~|~2~|~238~|~46~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/social_responsibility_check.t~|~3~|~238~|~46~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
t/BOM/Actions/social_responsibility_check.t~|~2~|~238~|~46~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/social_responsibility_check.t~|~2~|~241~|~21~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/social_responsibility_check.t~|~3~|~241~|~21~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
t/BOM/Actions/social_responsibility_check.t~|~2~|~241~|~21~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/social_responsibility_check.t~|~2~|~242~|~32~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/social_responsibility_check.t~|~3~|~242~|~32~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
t/BOM/Actions/social_responsibility_check.t~|~2~|~242~|~32~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/social_responsibility_check.t~|~2~|~268~|~44~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/social_responsibility_check.t~|~2~|~274~|~25~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/social_responsibility_check.t~|~3~|~274~|~25~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
t/BOM/Actions/social_responsibility_check.t~|~2~|~274~|~25~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/social_responsibility_check.t~|~2~|~275~|~50~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/social_responsibility_check.t~|~3~|~275~|~50~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
t/BOM/Actions/social_responsibility_check.t~|~2~|~275~|~50~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/social_responsibility_check.t~|~2~|~276~|~36~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/social_responsibility_check.t~|~3~|~276~|~36~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
t/BOM/Actions/social_responsibility_check.t~|~2~|~276~|~36~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/social_responsibility_check.t~|~2~|~282~|~44~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/social_responsibility_check.t~|~2~|~288~|~25~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/social_responsibility_check.t~|~3~|~288~|~25~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
t/BOM/Actions/social_responsibility_check.t~|~2~|~288~|~25~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/social_responsibility_check.t~|~2~|~289~|~50~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/social_responsibility_check.t~|~3~|~289~|~50~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
t/BOM/Actions/social_responsibility_check.t~|~2~|~289~|~50~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/social_responsibility_check.t~|~2~|~290~|~36~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/social_responsibility_check.t~|~3~|~290~|~36~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
t/BOM/Actions/social_responsibility_check.t~|~2~|~290~|~36~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/social_responsibility_check.t~|~4~|~299~|~1~|~Subroutine "delete_all_keys" does not end with "return"~|~See page 197 of PBP~|~Subroutines::RequireFinalReturn~||~
t/BOM/Actions/social_responsibility_check.t~|~2~|~307~|~46~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/social_responsibility_check.t~|~4~|~311~|~1~|~Module does not end with "1;"~|~Must end with a recognizable true value~|~Modules::RequireEndWithOne~||~
t/BOM/Actions/CryptoCashier.t~|~2~|~1~|~1~|~No package-scoped "$VERSION" variable found~|~See page 404 of PBP~|~Modules::RequireVersionVar~||~
t/BOM/Actions/CryptoCashier.t~|~2~|~4~|~1~|~_perl_5006_pragmas requires 5.006~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/Actions/CryptoCashier.t~|~2~|~36~|~38~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/CryptoCashier.t~|~2~|~109~|~14~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/CryptoCashier.t~|~2~|~120~|~14~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/CryptoCashier.t~|~2~|~168~|~14~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/CryptoCashier.t~|~2~|~216~|~14~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/mt5.t~|~3~|~1~|~1~|~Main code has high complexity score (27)~|~Consider refactoring~|~Modules::ProhibitExcessMainComplexity~||~
t/BOM/Actions/mt5.t~|~4~|~1~|~1~|~Code not contained in explicit package~|~Violates encapsulation~|~Modules::RequireExplicitPackage~||~
t/BOM/Actions/mt5.t~|~4~|~1~|~1~|~Code not contained in explicit package~|~Violates encapsulation~|~Modules::RequireExplicitPackage~||~
t/BOM/Actions/mt5.t~|~2~|~1~|~1~|~No package-scoped "$VERSION" variable found~|~See page 404 of PBP~|~Modules::RequireVersionVar~||~
t/BOM/Actions/mt5.t~|~2~|~2~|~1~|~_perl_5006_pragmas requires 5.006~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/Actions/mt5.t~|~2~|~25~|~40~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/mt5.t~|~5~|~28~|~20~|~Subroutine "new" called using indirect syntax~|~See page 349 of PBP~|~Objects::ProhibitIndirectSyntax~||~
t/BOM/Actions/mt5.t~|~5~|~28~|~20~|~Subroutine "new" called using indirect syntax~|~See page 349 of PBP~|~Objects::ProhibitIndirectSyntax~||~
t/BOM/Actions/mt5.t~|~4~|~28~|~20~|~Subroutine "new" called using indirect syntax~|~See page 349 of PBP~|~Objects::ProhibitIndirectSyntax~||~
t/BOM/Actions/mt5.t~|~2~|~38~|~22~|~List of quoted literal words~|~Use 'qw()' instead~|~CodeLayout::ProhibitQuotedWordLists~||~
t/BOM/Actions/mt5.t~|~2~|~90~|~28~|~_any_qr_tokens requires 5.005.03~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/Actions/mt5.t~|~2~|~90~|~28~|~_any_quotelike_regexp requires 5.005~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/Actions/mt5.t~|~2~|~90~|~28~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/mt5.t~|~2~|~90~|~28~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/mt5.t~|~2~|~99~|~15~|~10 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
t/BOM/Actions/mt5.t~|~2~|~103~|~14~|~Postfix control "unless" used~|~See pages 96,97 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
t/BOM/Actions/mt5.t~|~2~|~110~|~16~|~5 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
t/BOM/Actions/mt5.t~|~2~|~112~|~28~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/mt5.t~|~2~|~112~|~28~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/mt5.t~|~3~|~132~|~5~|~Reused variable name in lexical scope: $test_client~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/mt5.t~|~3~|~137~|~5~|~Reused variable name in lexical scope: $user~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/mt5.t~|~3~|~153~|~13~|~Duplicate hash key "language"~|~(no explanation)~|~ValuesAndExpressions::ProhibitDuplicateHashKeys~||~
t/BOM/Actions/mt5.t~|~2~|~155~|~46~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/mt5.t~|~2~|~162~|~45~|~_Pulp__arrow_coderef_call requires 5.004~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/Actions/mt5.t~|~3~|~169~|~9~|~Test without a label~|~Add a label argument to all Test::More functions~|~TestingAndDebugging::RequireTestLabels~||~
t/BOM/Actions/mt5.t~|~2~|~170~|~49~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/mt5.t~|~2~|~173~|~31~|~Postfix control "if" used~|~See pages 93,94 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
t/BOM/Actions/mt5.t~|~2~|~180~|~31~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/mt5.t~|~2~|~200~|~88~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/mt5.t~|~2~|~201~|~14~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/mt5.t~|~2~|~209~|~33~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
t/BOM/Actions/mt5.t~|~2~|~210~|~55~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/mt5.t~|~2~|~210~|~55~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/mt5.t~|~3~|~223~|~13~|~Duplicate hash key "language"~|~(no explanation)~|~ValuesAndExpressions::ProhibitDuplicateHashKeys~||~
t/BOM/Actions/mt5.t~|~2~|~225~|~46~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/mt5.t~|~3~|~239~|~9~|~Test without a label~|~Add a label argument to all Test::More functions~|~TestingAndDebugging::RequireTestLabels~||~
t/BOM/Actions/mt5.t~|~2~|~240~|~49~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/mt5.t~|~2~|~243~|~31~|~Postfix control "if" used~|~See pages 93,94 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
t/BOM/Actions/mt5.t~|~2~|~250~|~31~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/mt5.t~|~2~|~270~|~88~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/mt5.t~|~2~|~271~|~14~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/mt5.t~|~2~|~279~|~33~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
t/BOM/Actions/mt5.t~|~2~|~280~|~60~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/mt5.t~|~2~|~280~|~60~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/mt5.t~|~2~|~293~|~60~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/mt5.t~|~2~|~293~|~60~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/mt5.t~|~3~|~301~|~9~|~Test without a label~|~Add a label argument to all Test::More functions~|~TestingAndDebugging::RequireTestLabels~||~
t/BOM/Actions/mt5.t~|~2~|~302~|~49~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/mt5.t~|~2~|~308~|~31~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/mt5.t~|~2~|~315~|~38~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/mt5.t~|~2~|~316~|~14~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/mt5.t~|~2~|~326~|~60~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/mt5.t~|~2~|~326~|~60~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/mt5.t~|~2~|~329~|~28~|~16711680 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
t/BOM/Actions/mt5.t~|~2~|~329~|~28~|~Long number not separated with underscores~|~See page 59 of PBP~|~ValuesAndExpressions::RequireNumberSeparators~||~
t/BOM/Actions/mt5.t~|~2~|~332~|~60~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/mt5.t~|~2~|~332~|~60~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/mt5.t~|~2~|~335~|~91~|~Long number not separated with underscores~|~See page 59 of PBP~|~ValuesAndExpressions::RequireNumberSeparators~||~
t/BOM/Actions/mt5.t~|~2~|~348~|~35~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/mt5.t~|~2~|~355~|~45~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/mt5.t~|~3~|~355~|~45~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
t/BOM/Actions/mt5.t~|~2~|~355~|~45~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/mt5.t~|~2~|~358~|~34~|~7800 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
t/BOM/Actions/mt5.t~|~2~|~362~|~42~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/mt5.t~|~3~|~362~|~42~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
t/BOM/Actions/mt5.t~|~2~|~362~|~42~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/mt5.t~|~2~|~366~|~58~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/mt5.t~|~2~|~370~|~34~|~7800 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
t/BOM/Actions/mt5.t~|~2~|~373~|~42~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/mt5.t~|~3~|~373~|~42~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
t/BOM/Actions/mt5.t~|~2~|~373~|~42~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/mt5.t~|~3~|~400~|~9~|~Duplicate hash key "language"~|~(no explanation)~|~ValuesAndExpressions::ProhibitDuplicateHashKeys~||~
t/BOM/Actions/mt5.t~|~2~|~402~|~42~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/mt5.t~|~2~|~412~|~34~|~5 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
t/BOM/Actions/mt5.t~|~2~|~419~|~56~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/mt5.t~|~2~|~432~|~21~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
t/BOM/Actions/mt5.t~|~2~|~435~|~13~|~4 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
t/BOM/Actions/mt5.t~|~2~|~437~|~48~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/mt5.t~|~2~|~441~|~48~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/mt5.t~|~2~|~442~|~18~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/mt5.t~|~2~|~444~|~13~|~14 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
t/BOM/Actions/mt5.t~|~2~|~446~|~45~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/mt5.t~|~2~|~447~|~18~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/mt5.t~|~2~|~454~|~36~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/mt5.t~|~2~|~462~|~56~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/mt5.t~|~2~|~462~|~56~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/mt5.t~|~2~|~471~|~45~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/mt5.t~|~2~|~478~|~27~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/mt5.t~|~2~|~484~|~47~|~4 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
t/BOM/Actions/mt5.t~|~2~|~485~|~49~|~4 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
t/BOM/Actions/mt5.t~|~2~|~489~|~10~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/mt5.t~|~2~|~493~|~42~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/mt5.t~|~2~|~500~|~27~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/mt5.t~|~2~|~511~|~10~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/mt5.t~|~2~|~521~|~33~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/mt5.t~|~2~|~539~|~25~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
t/BOM/Actions/mt5.t~|~2~|~550~|~14~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/mt5.t~|~2~|~556~|~50~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/mt5.t~|~2~|~556~|~50~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/mt5.t~|~2~|~565~|~5~|~_Pulp__my_list_with_undef requires 5.005~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/Actions/mt5.t~|~2~|~565~|~44~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/mt5.t~|~2~|~610~|~20~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/mt5.t~|~2~|~610~|~20~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/mt5.t~|~2~|~610~|~50~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/mt5.t~|~2~|~614~|~26~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/mt5.t~|~2~|~614~|~26~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/mt5.t~|~2~|~635~|~26~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
t/BOM/Actions/mt5.t~|~2~|~645~|~26~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
t/BOM/Actions/mt5.t~|~2~|~651~|~35~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/mt5.t~|~2~|~665~|~23~|~_perl_5010_operators requires 5.010~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/Actions/mt5.t~|~2~|~670~|~46~|~Postfix control "if" used~|~See pages 93,94 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
t/BOM/Actions/mt5.t~|~2~|~671~|~46~|~Postfix control "if" used~|~See pages 93,94 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
t/BOM/Actions/mt5.t~|~2~|~743~|~42~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/mt5.t~|~2~|~799~|~33~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/mt5.t~|~3~|~802~|~37~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
t/BOM/Actions/mt5.t~|~2~|~811~|~33~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/mt5.t~|~3~|~814~|~37~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
t/BOM/Actions/mt5.t~|~2~|~823~|~33~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/mt5.t~|~3~|~826~|~37~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
t/BOM/Actions/mt5.t~|~2~|~835~|~33~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/mt5.t~|~2~|~838~|~38~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/mt5.t~|~2~|~850~|~33~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/mt5.t~|~2~|~863~|~33~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/mt5.t~|~2~|~878~|~33~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/mt5.t~|~2~|~881~|~29~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/mt5.t~|~2~|~895~|~33~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/mt5.t~|~3~|~899~|~44~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
t/BOM/Actions/mt5.t~|~2~|~908~|~33~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/mt5.t~|~2~|~921~|~33~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/mt5.t~|~2~|~936~|~33~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/mt5.t~|~2~|~950~|~33~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/mt5.t~|~3~|~955~|~57~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
t/BOM/Actions/mt5.t~|~2~|~964~|~33~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/mt5.t~|~3~|~969~|~52~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
t/BOM/Actions/mt5.t~|~2~|~978~|~33~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/mt5.t~|~2~|~992~|~33~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/mt5.t~|~2~|~1006~|~33~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/mt5.t~|~2~|~1020~|~33~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/mt5.t~|~2~|~1025~|~37~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/mt5.t~|~3~|~1028~|~48~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
t/BOM/Actions/mt5.t~|~2~|~1039~|~33~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/mt5.t~|~2~|~1044~|~37~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/mt5.t~|~2~|~1051~|~46~|~Postfix control "if" used~|~See pages 93,94 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
t/BOM/Actions/mt5.t~|~2~|~1065~|~33~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/mt5.t~|~2~|~1070~|~37~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/mt5.t~|~2~|~1077~|~46~|~Postfix control "if" used~|~See pages 93,94 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
t/BOM/Actions/mt5.t~|~3~|~1080~|~61~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
t/BOM/Actions/mt5.t~|~2~|~1090~|~33~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/mt5.t~|~2~|~1095~|~37~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/mt5.t~|~2~|~1102~|~46~|~Postfix control "if" used~|~See pages 93,94 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
t/BOM/Actions/mt5.t~|~2~|~1109~|~17~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/mt5.t~|~2~|~1110~|~37~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/mt5.t~|~3~|~1112~|~61~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
t/BOM/Actions/mt5.t~|~2~|~1123~|~33~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/mt5.t~|~2~|~1128~|~37~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/mt5.t~|~2~|~1144~|~33~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/mt5.t~|~3~|~1149~|~40~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
t/BOM/Actions/mt5.t~|~2~|~1158~|~33~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/mt5.t~|~2~|~1169~|~52~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/mt5.t~|~2~|~1177~|~33~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/mt5.t~|~2~|~1182~|~37~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/mt5.t~|~2~|~1206~|~14~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/mt5.t~|~2~|~1214~|~33~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/mt5.t~|~2~|~1219~|~37~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/mt5.t~|~2~|~1244~|~14~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/mt5.t~|~2~|~1252~|~33~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/mt5.t~|~2~|~1257~|~37~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/mt5.t~|~2~|~1282~|~14~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/mt5.t~|~2~|~1297~|~37~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/mt5.t~|~2~|~1321~|~14~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/mt5.t~|~2~|~1335~|~37~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/mt5.t~|~2~|~1359~|~14~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/mt5.t~|~2~|~1367~|~33~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/mt5.t~|~2~|~1373~|~37~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/mt5.t~|~2~|~1386~|~24~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/mt5.t~|~2~|~1386~|~24~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/mt5.t~|~2~|~1386~|~54~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/mt5.t~|~3~|~1389~|~30~|~Literal line breaks in a string~|~See pages 60,61 of PBP~|~ValuesAndExpressions::ProhibitImplicitNewlines~||~
t/BOM/Actions/mt5.t~|~2~|~1406~|~36~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
t/BOM/Actions/mt5.t~|~2~|~1407~|~36~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
t/BOM/Actions/mt5.t~|~2~|~1415~|~33~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/mt5.t~|~2~|~1421~|~37~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/mt5.t~|~2~|~1434~|~24~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/mt5.t~|~2~|~1434~|~24~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/mt5.t~|~2~|~1434~|~54~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/mt5.t~|~3~|~1437~|~30~|~Literal line breaks in a string~|~See pages 60,61 of PBP~|~ValuesAndExpressions::ProhibitImplicitNewlines~||~
t/BOM/Actions/mt5.t~|~2~|~1454~|~36~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
t/BOM/Actions/mt5.t~|~2~|~1455~|~36~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
t/BOM/Actions/mt5.t~|~2~|~1462~|~33~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/mt5.t~|~3~|~1466~|~37~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
t/BOM/Actions/mt5.t~|~2~|~1471~|~24~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/mt5.t~|~2~|~1471~|~24~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/mt5.t~|~2~|~1471~|~54~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/mt5.t~|~3~|~1474~|~30~|~Literal line breaks in a string~|~See pages 60,61 of PBP~|~ValuesAndExpressions::ProhibitImplicitNewlines~||~
t/BOM/Actions/mt5.t~|~2~|~1491~|~36~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
t/BOM/Actions/mt5.t~|~2~|~1492~|~36~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
t/BOM/Actions/mt5.t~|~2~|~1499~|~33~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/mt5.t~|~2~|~1505~|~35~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/mt5.t~|~2~|~1525~|~24~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/mt5.t~|~2~|~1525~|~24~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/mt5.t~|~2~|~1525~|~54~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/mt5.t~|~3~|~1528~|~30~|~Literal line breaks in a string~|~See pages 60,61 of PBP~|~ValuesAndExpressions::ProhibitImplicitNewlines~||~
t/BOM/Actions/mt5.t~|~2~|~1552~|~36~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
t/BOM/Actions/mt5.t~|~2~|~1553~|~36~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
t/BOM/Actions/mt5.t~|~3~|~1578~|~13~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
t/BOM/Actions/mt5.t~|~2~|~1585~|~41~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/mt5.t~|~2~|~1585~|~41~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/mt5.t~|~2~|~1610~|~41~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/mt5.t~|~2~|~1610~|~41~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/mt5.t~|~2~|~1629~|~41~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/mt5.t~|~2~|~1629~|~41~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/mt5.t~|~3~|~1653~|~13~|~Reused variable name in lexical scope: $user~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/mt5.t~|~2~|~1663~|~41~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/mt5.t~|~2~|~1663~|~41~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/mt5.t~|~3~|~1707~|~13~|~Reused variable name in lexical scope: $user~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/mt5.t~|~2~|~1711~|~42~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/mt5.t~|~2~|~1726~|~40~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/mt5.t~|~2~|~1726~|~40~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/mt5.t~|~3~|~1759~|~13~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
t/BOM/Actions/mt5.t~|~3~|~1768~|~23~|~Split long regexps into smaller qr// chunks~|~See page 261 of PBP~|~RegularExpressions::ProhibitComplexRegexes~||~
t/BOM/Actions/mt5.t~|~2~|~1768~|~23~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/mt5.t~|~3~|~1768~|~23~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
t/BOM/Actions/mt5.t~|~2~|~1768~|~23~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/mt5.t~|~2~|~1786~|~35~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/mt5.t~|~2~|~1926~|~37~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/mt5.t~|~2~|~1926~|~63~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/mt5.t~|~2~|~1940~|~37~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/mt5.t~|~2~|~1940~|~63~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/mt5.t~|~2~|~1956~|~37~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/mt5.t~|~2~|~1956~|~63~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/mt5.t~|~2~|~1973~|~38~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/mt5.t~|~2~|~1976~|~37~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/mt5.t~|~2~|~1994~|~38~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/mt5.t~|~2~|~1997~|~37~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/mt5.t~|~2~|~2016~|~37~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/mt5.t~|~2~|~2016~|~63~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/mt5.t~|~2~|~2032~|~37~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/mt5.t~|~2~|~2032~|~63~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/mt5.t~|~2~|~2048~|~37~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/mt5.t~|~2~|~2048~|~63~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/mt5.t~|~2~|~2065~|~38~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/mt5.t~|~2~|~2068~|~37~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/mt5.t~|~2~|~2086~|~38~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/mt5.t~|~2~|~2089~|~37~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/mt5.t~|~2~|~2108~|~37~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/mt5.t~|~2~|~2108~|~63~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/mt5.t~|~2~|~2124~|~37~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/mt5.t~|~2~|~2124~|~63~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/mt5.t~|~2~|~2140~|~37~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/mt5.t~|~2~|~2140~|~63~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/mt5.t~|~2~|~2157~|~38~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/mt5.t~|~2~|~2160~|~37~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/mt5.t~|~2~|~2178~|~38~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/mt5.t~|~2~|~2181~|~37~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/mt5.t~|~2~|~2203~|~37~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/mt5.t~|~2~|~2203~|~63~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/mt5.t~|~2~|~2217~|~37~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/mt5.t~|~2~|~2217~|~63~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/mt5.t~|~2~|~2233~|~37~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/mt5.t~|~2~|~2233~|~63~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/mt5.t~|~2~|~2250~|~42~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/mt5.t~|~2~|~2253~|~37~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/mt5.t~|~2~|~2271~|~42~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/mt5.t~|~2~|~2274~|~37~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/mt5.t~|~2~|~2293~|~37~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/mt5.t~|~2~|~2293~|~63~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/mt5.t~|~2~|~2309~|~37~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/mt5.t~|~2~|~2309~|~63~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/mt5.t~|~2~|~2325~|~37~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/mt5.t~|~2~|~2325~|~63~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/mt5.t~|~2~|~2342~|~42~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/mt5.t~|~2~|~2345~|~37~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/mt5.t~|~2~|~2363~|~42~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/mt5.t~|~2~|~2366~|~37~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/mt5.t~|~2~|~2385~|~37~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/mt5.t~|~2~|~2385~|~63~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/mt5.t~|~2~|~2401~|~37~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/mt5.t~|~2~|~2401~|~63~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/mt5.t~|~2~|~2417~|~37~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/mt5.t~|~2~|~2417~|~63~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/mt5.t~|~2~|~2434~|~42~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/mt5.t~|~2~|~2437~|~37~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/mt5.t~|~2~|~2455~|~42~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/mt5.t~|~2~|~2458~|~37~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/mt5.t~|~2~|~2480~|~37~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/mt5.t~|~2~|~2480~|~63~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/mt5.t~|~2~|~2494~|~37~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/mt5.t~|~2~|~2494~|~63~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/mt5.t~|~2~|~2510~|~37~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/mt5.t~|~2~|~2510~|~63~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/mt5.t~|~2~|~2528~|~37~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/mt5.t~|~2~|~2528~|~63~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/mt5.t~|~2~|~2544~|~37~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/mt5.t~|~2~|~2544~|~63~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/mt5.t~|~2~|~2560~|~37~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/mt5.t~|~2~|~2560~|~63~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/mt5.t~|~2~|~2578~|~37~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/mt5.t~|~2~|~2578~|~63~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/mt5.t~|~2~|~2594~|~37~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/mt5.t~|~2~|~2594~|~63~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/mt5.t~|~2~|~2610~|~37~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/mt5.t~|~2~|~2610~|~63~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/mt5.t~|~2~|~2631~|~37~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/mt5.t~|~2~|~2631~|~63~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/mt5.t~|~2~|~2645~|~37~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/mt5.t~|~2~|~2645~|~63~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/mt5.t~|~2~|~2661~|~37~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/mt5.t~|~2~|~2661~|~63~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/mt5.t~|~2~|~2679~|~37~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/mt5.t~|~2~|~2679~|~63~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/mt5.t~|~2~|~2695~|~37~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/mt5.t~|~2~|~2695~|~63~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/mt5.t~|~2~|~2711~|~37~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/mt5.t~|~2~|~2711~|~63~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/mt5.t~|~2~|~2729~|~37~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/mt5.t~|~2~|~2729~|~63~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/mt5.t~|~2~|~2745~|~37~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/mt5.t~|~2~|~2745~|~63~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/mt5.t~|~2~|~2761~|~37~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/mt5.t~|~2~|~2761~|~63~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/mt5.t~|~2~|~2782~|~34~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/mt5.t~|~2~|~2785~|~33~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/mt5.t~|~2~|~2785~|~93~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/mt5.t~|~2~|~2795~|~42~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/mt5.t~|~2~|~2801~|~41~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/mt5.t~|~2~|~2814~|~35~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/mt5.t~|~2~|~2814~|~61~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/mt5.t~|~2~|~2814~|~96~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/mt5.t~|~2~|~2824~|~42~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/mt5.t~|~2~|~2830~|~41~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/mt5.t~|~2~|~2842~|~33~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/mt5.t~|~2~|~2863~|~38~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/mt5.t~|~2~|~2866~|~33~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/mt5.t~|~2~|~2885~|~38~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/mt5.t~|~2~|~2888~|~33~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/mt5.t~|~2~|~2911~|~56~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/mt5.t~|~2~|~2911~|~56~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/mt5.t~|~3~|~2927~|~5~|~Reused variable name in lexical scope: $user~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/mt5.t~|~2~|~2942~|~56~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/mt5.t~|~2~|~2942~|~56~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/mt5.t~|~2~|~2946~|~56~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/mt5.t~|~2~|~2946~|~56~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/mt5.t~|~2~|~2950~|~56~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/mt5.t~|~2~|~2950~|~56~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/mt5.t~|~2~|~2964~|~29~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/mt5.t~|~2~|~2976~|~38~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/mt5.t~|~2~|~2976~|~60~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/mt5.t~|~2~|~2985~|~35~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/mt5.t~|~2~|~2989~|~38~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/mt5.t~|~2~|~2999~|~29~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/mt5.t~|~2~|~3011~|~35~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/mt5.t~|~2~|~3015~|~38~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/mt5.t~|~2~|~3022~|~14~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/mt5.t~|~2~|~3027~|~45~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/mt5.t~|~2~|~3049~|~29~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/mt5.t~|~2~|~3072~|~30~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/mt5.t~|~3~|~3085~|~17~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
t/BOM/Actions/mt5.t~|~2~|~3097~|~5~|~_Pulp__for_loop_variable_using_my requires 5.004~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/Actions/mt5.t~|~2~|~3122~|~37~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/mt5.t~|~2~|~3133~|~59~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/mt5.t~|~2~|~3134~|~18~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/mt5.t~|~2~|~3174~|~36~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/mt5.t~|~2~|~3220~|~18~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/mt5.t~|~2~|~3229~|~23~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/mt5.t~|~2~|~3272~|~124~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/mt5.t~|~2~|~3284~|~21~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/mt5.t~|~2~|~3337~|~35~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
t/BOM/Actions/mt5.t~|~2~|~3344~|~35~|~Long number not separated with underscores~|~See page 59 of PBP~|~ValuesAndExpressions::RequireNumberSeparators~||~
t/BOM/Actions/mt5.t~|~2~|~3346~|~35~|~Long number not separated with underscores~|~See page 59 of PBP~|~ValuesAndExpressions::RequireNumberSeparators~||~
t/BOM/Actions/mt5.t~|~2~|~3347~|~35~|~Long number not separated with underscores~|~See page 59 of PBP~|~ValuesAndExpressions::RequireNumberSeparators~||~
t/BOM/Actions/mt5.t~|~2~|~3350~|~41~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/mt5.t~|~2~|~3359~|~37~|~Long number not separated with underscores~|~See page 59 of PBP~|~ValuesAndExpressions::RequireNumberSeparators~||~
t/BOM/Actions/mt5.t~|~2~|~3361~|~28~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/mt5.t~|~3~|~3361~|~28~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
t/BOM/Actions/mt5.t~|~2~|~3361~|~28~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/mt5.t~|~2~|~3366~|~28~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/mt5.t~|~2~|~3366~|~28~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/mt5.t~|~4~|~3371~|~1~|~Module does not end with "1;"~|~Must end with a recognizable true value~|~Modules::RequireEndWithOne~||~
t/BOM/Actions/user.t~|~4~|~1~|~1~|~Code not contained in explicit package~|~Violates encapsulation~|~Modules::RequireExplicitPackage~||~
t/BOM/Actions/user.t~|~4~|~1~|~1~|~Code not contained in explicit package~|~Violates encapsulation~|~Modules::RequireExplicitPackage~||~
t/BOM/Actions/user.t~|~2~|~1~|~1~|~No package-scoped "$VERSION" variable found~|~See page 404 of PBP~|~Modules::RequireVersionVar~||~
t/BOM/Actions/user.t~|~2~|~2~|~1~|~_perl_5006_pragmas requires 5.006~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/Actions/user.t~|~2~|~3~|~1~|~_pragma_utf8 requires 5.008~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/Actions/user.t~|~5~|~40~|~24~|~Subroutine "new" called using indirect syntax~|~See page 349 of PBP~|~Objects::ProhibitIndirectSyntax~||~
t/BOM/Actions/user.t~|~5~|~40~|~24~|~Subroutine "new" called using indirect syntax~|~See page 349 of PBP~|~Objects::ProhibitIndirectSyntax~||~
t/BOM/Actions/user.t~|~4~|~40~|~24~|~Subroutine "new" called using indirect syntax~|~See page 349 of PBP~|~Objects::ProhibitIndirectSyntax~||~
t/BOM/Actions/user.t~|~5~|~52~|~20~|~Subroutine "new" called using indirect syntax~|~See page 349 of PBP~|~Objects::ProhibitIndirectSyntax~||~
t/BOM/Actions/user.t~|~5~|~52~|~20~|~Subroutine "new" called using indirect syntax~|~See page 349 of PBP~|~Objects::ProhibitIndirectSyntax~||~
t/BOM/Actions/user.t~|~4~|~52~|~20~|~Subroutine "new" called using indirect syntax~|~See page 349 of PBP~|~Objects::ProhibitIndirectSyntax~||~
t/BOM/Actions/user.t~|~2~|~55~|~22~|~List of quoted literal words~|~Use 'qw()' instead~|~CodeLayout::ProhibitQuotedWordLists~||~
t/BOM/Actions/user.t~|~2~|~75~|~27~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/user.t~|~2~|~83~|~30~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/user.t~|~2~|~100~|~33~|~_Pulp__arrow_coderef_call requires 5.004~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/Actions/user.t~|~2~|~103~|~52~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
t/BOM/Actions/user.t~|~2~|~110~|~29~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/user.t~|~2~|~111~|~10~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/user.t~|~2~|~116~|~52~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
t/BOM/Actions/user.t~|~2~|~117~|~19~|~_Pulp__UNIVERSAL_methods_5004 requires 5.004~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/Actions/user.t~|~2~|~123~|~27~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/user.t~|~2~|~132~|~36~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
t/BOM/Actions/user.t~|~2~|~136~|~10~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/user.t~|~2~|~159~|~29~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/user.t~|~2~|~160~|~10~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/user.t~|~2~|~173~|~30~|~Postfix control "if" used~|~See pages 93,94 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
t/BOM/Actions/user.t~|~2~|~184~|~27~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/user.t~|~2~|~193~|~36~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
t/BOM/Actions/user.t~|~2~|~197~|~10~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/user.t~|~5~|~207~|~17~|~"return" statement with explicit "undef"~|~See page 199 of PBP~|~Subroutines::ProhibitExplicitReturnUndef~||~
t/BOM/Actions/user.t~|~2~|~207~|~30~|~Postfix control "unless" used~|~See pages 96,97 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
t/BOM/Actions/user.t~|~2~|~216~|~30~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/user.t~|~2~|~229~|~31~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/user.t~|~2~|~242~|~14~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/user.t~|~2~|~247~|~6~|~Put semicolon ; on last statement in a block~|~(no explanation)~|~CodeLayout::RequireFinalSemicolon~||~
t/BOM/Actions/user.t~|~3~|~256~|~5~|~Reused variable name in lexical scope: $user~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/user.t~|~3~|~262~|~5~|~Reused variable name in lexical scope: $test_client~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/user.t~|~3~|~300~|~9~|~"$sanctioned_info" is declared but not used~|~Unused variables clutter code and make it harder to read~|~Variables::ProhibitUnusedVariables~||~
t/BOM/Actions/user.t~|~3~|~312~|~9~|~Reused variable name in lexical scope: $user~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/user.t~|~3~|~318~|~9~|~Reused variable name in lexical scope: $test_client~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/user.t~|~3~|~336~|~13~|~Reused variable name in lexical scope: $args~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/user.t~|~3~|~345~|~13~|~Reused variable name in lexical scope: $result~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/user.t~|~2~|~375~|~62~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/user.t~|~2~|~379~|~49~|~_any_qr_tokens requires 5.005.03~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/Actions/user.t~|~2~|~379~|~49~|~_any_quotelike_regexp requires 5.005~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/Actions/user.t~|~3~|~379~|~49~|~Split long regexps into smaller qr// chunks~|~See page 261 of PBP~|~RegularExpressions::ProhibitComplexRegexes~||~
t/BOM/Actions/user.t~|~2~|~379~|~49~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/user.t~|~3~|~379~|~49~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
t/BOM/Actions/user.t~|~2~|~379~|~49~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/user.t~|~2~|~398~|~42~|~Long number not separated with underscores~|~See page 59 of PBP~|~ValuesAndExpressions::RequireNumberSeparators~||~
t/BOM/Actions/user.t~|~2~|~398~|~51~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/user.t~|~2~|~414~|~56~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/user.t~|~2~|~423~|~62~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/user.t~|~3~|~426~|~49~|~Split long regexps into smaller qr// chunks~|~See page 261 of PBP~|~RegularExpressions::ProhibitComplexRegexes~||~
t/BOM/Actions/user.t~|~2~|~426~|~49~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/user.t~|~3~|~426~|~49~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
t/BOM/Actions/user.t~|~2~|~426~|~49~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/user.t~|~2~|~428~|~32~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/user.t~|~2~|~428~|~32~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/user.t~|~2~|~429~|~32~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/user.t~|~2~|~429~|~32~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/user.t~|~2~|~439~|~45~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/user.t~|~2~|~450~|~56~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/user.t~|~3~|~456~|~49~|~Split long regexps into smaller qr// chunks~|~See page 261 of PBP~|~RegularExpressions::ProhibitComplexRegexes~||~
t/BOM/Actions/user.t~|~2~|~456~|~49~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/user.t~|~3~|~456~|~49~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
t/BOM/Actions/user.t~|~2~|~456~|~49~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/user.t~|~2~|~458~|~32~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/user.t~|~2~|~458~|~32~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/user.t~|~2~|~459~|~32~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/user.t~|~2~|~459~|~32~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/user.t~|~3~|~472~|~9~|~Reused variable name in lexical scope: $args~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/user.t~|~2~|~478~|~45~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/user.t~|~2~|~485~|~9~|~_Pulp__for_loop_variable_using_my requires 5.004~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/Actions/user.t~|~3~|~502~|~5~|~Reused variable name in lexical scope: $user~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/user.t~|~3~|~508~|~5~|~Reused variable name in lexical scope: $test_client~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/user.t~|~2~|~534~|~41~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/user.t~|~3~|~540~|~5~|~Reused variable name in lexical scope: $segment_response~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/user.t~|~2~|~544~|~52~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
t/BOM/Actions/user.t~|~2~|~551~|~29~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/user.t~|~2~|~552~|~10~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/user.t~|~2~|~557~|~52~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
t/BOM/Actions/user.t~|~2~|~563~|~27~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/user.t~|~3~|~580~|~13~|~Duplicate hash key "loginid"~|~(no explanation)~|~ValuesAndExpressions::ProhibitDuplicateHashKeys~||~
t/BOM/Actions/user.t~|~2~|~581~|~10~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/user.t~|~2~|~591~|~27~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/user.t~|~2~|~627~|~28~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/user.t~|~2~|~634~|~28~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/user.t~|~2~|~641~|~28~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/user.t~|~2~|~648~|~28~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/user.t~|~2~|~655~|~28~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/user.t~|~2~|~662~|~28~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/user.t~|~2~|~669~|~28~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/user.t~|~2~|~676~|~28~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/user.t~|~2~|~683~|~28~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/user.t~|~2~|~690~|~28~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/user.t~|~2~|~703~|~42~|~Postfix control "for" used~|~See page 96 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
t/BOM/Actions/user.t~|~2~|~704~|~42~|~Postfix control "for" used~|~See page 96 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
t/BOM/Actions/user.t~|~2~|~709~|~9~|~Found method-call chain of length 5~|~Long chains of method calls indicate code that is too tightly coupled~|~ValuesAndExpressions::ProhibitLongChainsOfMethodCalls~||~
t/BOM/Actions/user.t~|~2~|~710~|~9~|~Found method-call chain of length 5~|~Long chains of method calls indicate code that is too tightly coupled~|~ValuesAndExpressions::ProhibitLongChainsOfMethodCalls~||~
t/BOM/Actions/user.t~|~2~|~716~|~28~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/user.t~|~2~|~723~|~37~|~Postfix control "for" used~|~See page 96 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
t/BOM/Actions/user.t~|~2~|~725~|~9~|~Found method-call chain of length 5~|~Long chains of method calls indicate code that is too tightly coupled~|~ValuesAndExpressions::ProhibitLongChainsOfMethodCalls~||~
t/BOM/Actions/user.t~|~2~|~727~|~9~|~Found method-call chain of length 5~|~Long chains of method calls indicate code that is too tightly coupled~|~ValuesAndExpressions::ProhibitLongChainsOfMethodCalls~||~
t/BOM/Actions/user.t~|~2~|~728~|~9~|~Found method-call chain of length 5~|~Long chains of method calls indicate code that is too tightly coupled~|~ValuesAndExpressions::ProhibitLongChainsOfMethodCalls~||~
t/BOM/Actions/user.t~|~2~|~734~|~28~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/user.t~|~2~|~742~|~9~|~Found method-call chain of length 5~|~Long chains of method calls indicate code that is too tightly coupled~|~ValuesAndExpressions::ProhibitLongChainsOfMethodCalls~||~
t/BOM/Actions/user.t~|~2~|~749~|~32~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/user.t~|~2~|~756~|~41~|~Postfix control "for" used~|~See page 96 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
t/BOM/Actions/user.t~|~2~|~760~|~9~|~Found method-call chain of length 5~|~Long chains of method calls indicate code that is too tightly coupled~|~ValuesAndExpressions::ProhibitLongChainsOfMethodCalls~||~
t/BOM/Actions/user.t~|~2~|~766~|~28~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/user.t~|~2~|~773~|~37~|~Postfix control "for" used~|~See page 96 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
t/BOM/Actions/user.t~|~2~|~782~|~32~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/user.t~|~2~|~789~|~41~|~Postfix control "for" used~|~See page 96 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
t/BOM/Actions/user.t~|~2~|~793~|~37~|~Postfix control "for" used~|~See page 96 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
t/BOM/Actions/user.t~|~2~|~796~|~9~|~Found method-call chain of length 5~|~Long chains of method calls indicate code that is too tightly coupled~|~ValuesAndExpressions::ProhibitLongChainsOfMethodCalls~||~
t/BOM/Actions/user.t~|~2~|~807~|~35~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/user.t~|~2~|~814~|~32~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/user.t~|~2~|~817~|~29~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/user.t~|~2~|~830~|~32~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/user.t~|~2~|~833~|~29~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/user.t~|~2~|~835~|~42~|~Postfix control "for" used~|~See page 96 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
t/BOM/Actions/user.t~|~2~|~850~|~32~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/user.t~|~2~|~853~|~29~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/user.t~|~2~|~855~|~37~|~Postfix control "for" used~|~See page 96 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
t/BOM/Actions/user.t~|~2~|~867~|~32~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/user.t~|~2~|~870~|~29~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/user.t~|~2~|~872~|~37~|~Postfix control "for" used~|~See page 96 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
t/BOM/Actions/user.t~|~4~|~881~|~1~|~Subroutine "test_fake_name" does not end with "return"~|~See page 197 of PBP~|~Subroutines::RequireFinalReturn~||~
t/BOM/Actions/user.t~|~2~|~891~|~39~|~_perl_5010_operators requires 5.010~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/Actions/user.t~|~2~|~894~|~29~|~_Pulp__var_method_without_parens requires 5.006~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/Actions/user.t~|~4~|~916~|~1~|~Subroutine "test_segment_customer" does not end with "return"~|~See page 197 of PBP~|~Subroutines::RequireFinalReturn~||~
t/BOM/Actions/user.t~|~3~|~917~|~5~|~Reused variable name in lexical scope: $test_client~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/user.t~|~2~|~922~|~32~|~String delimiter used with "split"~|~Express it as a regex instead~|~BuiltinFunctions::ProhibitStringySplit~||~
t/BOM/Actions/user.t~|~2~|~922~|~38~|~Quotes used with a noisy string~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitNoisyQuotes~||~
t/BOM/Actions/user.t~|~2~|~935~|~30~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/user.t~|~2~|~941~|~59~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
t/BOM/Actions/user.t~|~2~|~943~|~116~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
t/BOM/Actions/user.t~|~2~|~949~|~45~|~Quotes used with a noisy string~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitNoisyQuotes~||~
t/BOM/Actions/user.t~|~4~|~962~|~1~|~Module does not end with "1;"~|~Must end with a recognizable true value~|~Modules::RequireEndWithOne~||~
t/BOM/Actions/client_03.t~|~4~|~1~|~1~|~Code not contained in explicit package~|~Violates encapsulation~|~Modules::RequireExplicitPackage~||~
t/BOM/Actions/client_03.t~|~4~|~1~|~1~|~Code not contained in explicit package~|~Violates encapsulation~|~Modules::RequireExplicitPackage~||~
t/BOM/Actions/client_03.t~|~2~|~1~|~1~|~No package-scoped "$VERSION" variable found~|~See page 404 of PBP~|~Modules::RequireVersionVar~||~
t/BOM/Actions/client_03.t~|~2~|~2~|~1~|~_perl_5006_pragmas requires 5.006~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/Actions/client_03.t~|~2~|~24~|~30~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/client_03.t~|~2~|~35~|~38~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/client_03.t~|~2~|~74~|~5~|~_Pulp__for_loop_variable_using_my requires 5.004~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/Actions/client_03.t~|~2~|~78~|~91~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/client_03.t~|~2~|~82~|~17~|~_Pulp__arrow_coderef_call requires 5.004~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/Actions/client_03.t~|~2~|~86~|~29~|~_Pulp__var_method_without_parens requires 5.006~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/Actions/client_03.t~|~2~|~102~|~17~|~"grep" used in boolean context~|~See pages 71,72 of PBP~|~BuiltinFunctions::ProhibitBooleanGrep~||~
t/BOM/Actions/client_03.t~|~2~|~176~|~30~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/client_03.t~|~2~|~182~|~43~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/client_03.t~|~2~|~188~|~61~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/client_03.t~|~2~|~238~|~30~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/client_03.t~|~2~|~239~|~14~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/client_03.t~|~4~|~246~|~1~|~Module does not end with "1;"~|~Must end with a recognizable true value~|~Modules::RequireEndWithOne~||~
t/BOM/Actions/authentication.t~|~4~|~1~|~1~|~Code not contained in explicit package~|~Violates encapsulation~|~Modules::RequireExplicitPackage~||~
t/BOM/Actions/authentication.t~|~4~|~1~|~1~|~Code not contained in explicit package~|~Violates encapsulation~|~Modules::RequireExplicitPackage~||~
t/BOM/Actions/authentication.t~|~2~|~1~|~1~|~No package-scoped "$VERSION" variable found~|~See page 404 of PBP~|~Modules::RequireVersionVar~||~
t/BOM/Actions/authentication.t~|~2~|~2~|~1~|~_perl_5006_pragmas requires 5.006~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/Actions/authentication.t~|~2~|~31~|~9~|~C-style "for" loop used~|~See page 100 of PBP~|~ControlStructures::ProhibitCStyleForLoops~||~
t/BOM/Actions/authentication.t~|~2~|~31~|~27~|~20 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
t/BOM/Actions/authentication.t~|~2~|~44~|~78~|~_any_qr_tokens requires 5.005.03~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/Actions/authentication.t~|~2~|~44~|~78~|~_any_quotelike_regexp requires 5.005~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/Actions/authentication.t~|~2~|~44~|~78~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/authentication.t~|~2~|~44~|~78~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/authentication.t~|~2~|~47~|~5~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/authentication.t~|~2~|~47~|~5~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/authentication.t~|~2~|~58~|~5~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/authentication.t~|~2~|~58~|~5~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/authentication.t~|~2~|~73~|~41~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/authentication.t~|~2~|~73~|~41~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/authentication.t~|~2~|~74~|~27~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/authentication.t~|~3~|~74~|~27~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
t/BOM/Actions/authentication.t~|~2~|~74~|~27~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/authentication.t~|~2~|~76~|~5~|~_Pulp__for_loop_variable_using_my requires 5.004~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/Actions/authentication.t~|~3~|~93~|~9~|~Private subroutine/method used~|~Use published APIs~|~Subroutines::ProtectPrivateSubs~||~
t/BOM/Actions/authentication.t~|~3~|~99~|~9~|~Private subroutine/method used~|~Use published APIs~|~Subroutines::ProtectPrivateSubs~||~
t/BOM/Actions/authentication.t~|~4~|~105~|~1~|~Module does not end with "1;"~|~Must end with a recognizable true value~|~Modules::RequireEndWithOne~||~
t/BOM/Actions/name_change_after_deposit.t~|~4~|~1~|~1~|~Code not contained in explicit package~|~Violates encapsulation~|~Modules::RequireExplicitPackage~||~
t/BOM/Actions/name_change_after_deposit.t~|~4~|~1~|~1~|~Code not contained in explicit package~|~Violates encapsulation~|~Modules::RequireExplicitPackage~||~
t/BOM/Actions/name_change_after_deposit.t~|~2~|~1~|~1~|~No package-scoped "$VERSION" variable found~|~See page 404 of PBP~|~Modules::RequireVersionVar~||~
t/BOM/Actions/name_change_after_deposit.t~|~2~|~2~|~1~|~_perl_5006_pragmas requires 5.006~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/Actions/name_change_after_deposit.t~|~2~|~34~|~5~|~Found method-call chain of length 4~|~Long chains of method calls indicate code that is too tightly coupled~|~ValuesAndExpressions::ProhibitLongChainsOfMethodCalls~||~
t/BOM/Actions/name_change_after_deposit.t~|~3~|~36~|~5~|~Reused variable name in lexical scope: $offset~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/name_change_after_deposit.t~|~2~|~43~|~16~|~100 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
t/BOM/Actions/name_change_after_deposit.t~|~2~|~79~|~24~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
t/BOM/Actions/name_change_after_deposit.t~|~2~|~80~|~24~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
t/BOM/Actions/name_change_after_deposit.t~|~2~|~87~|~5~|~Found method-call chain of length 4~|~Long chains of method calls indicate code that is too tightly coupled~|~ValuesAndExpressions::ProhibitLongChainsOfMethodCalls~||~
t/BOM/Actions/name_change_after_deposit.t~|~2~|~90~|~16~|~100 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
t/BOM/Actions/name_change_after_deposit.t~|~2~|~109~|~51~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/name_change_after_deposit.t~|~4~|~116~|~1~|~Subroutine "change_name" does not end with "return"~|~See page 197 of PBP~|~Subroutines::RequireFinalReturn~||~
t/BOM/Actions/name_change_after_deposit.t~|~3~|~117~|~5~|~Ambiguously named variable "last"~|~See page 48 of PBP~|~NamingConventions::ProhibitAmbiguousNames~||~
t/BOM/Actions/name_change_after_deposit.t~|~2~|~122~|~5~|~Found method-call chain of length 4~|~Long chains of method calls indicate code that is too tightly coupled~|~ValuesAndExpressions::ProhibitLongChainsOfMethodCalls~||~
t/BOM/Actions/name_change_after_deposit.t~|~4~|~127~|~1~|~Module does not end with "1;"~|~Must end with a recognizable true value~|~Modules::RequireEndWithOne~||~
t/BOM/Actions/name_change_after_deposit.t~|~4~|~127~|~1~|~Subroutine "df_deposit" does not end with "return"~|~See page 197 of PBP~|~Subroutines::RequireFinalReturn~||~
t/BOM/Actions/name_change_after_deposit.t~|~2~|~136~|~5~|~Found method-call chain of length 4~|~Long chains of method calls indicate code that is too tightly coupled~|~ValuesAndExpressions::ProhibitLongChainsOfMethodCalls~||~
t/BOM/Actions/customerio.t~|~4~|~1~|~1~|~Code not contained in explicit package~|~Violates encapsulation~|~Modules::RequireExplicitPackage~||~
t/BOM/Actions/customerio.t~|~4~|~1~|~1~|~Code not contained in explicit package~|~Violates encapsulation~|~Modules::RequireExplicitPackage~||~
t/BOM/Actions/customerio.t~|~2~|~1~|~1~|~No package-scoped "$VERSION" variable found~|~See page 404 of PBP~|~Modules::RequireVersionVar~||~
t/BOM/Actions/customerio.t~|~2~|~2~|~1~|~_perl_5006_pragmas requires 5.006~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/Actions/customerio.t~|~2~|~30~|~35~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/customerio.t~|~2~|~31~|~15~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/customerio.t~|~2~|~35~|~21~|~10000 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
t/BOM/Actions/customerio.t~|~2~|~35~|~21~|~Long number not separated with underscores~|~See page 59 of PBP~|~ValuesAndExpressions::RequireNumberSeparators~||~
t/BOM/Actions/customerio.t~|~2~|~41~|~44~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/customerio.t~|~2~|~41~|~48~|~9999 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
t/BOM/Actions/customerio.t~|~2~|~42~|~44~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/customerio.t~|~4~|~45~|~1~|~Module does not end with "1;"~|~Must end with a recognizable true value~|~Modules::RequireEndWithOne~||~
t/BOM/Actions/client.t~|~3~|~1~|~1~|~Main code has high complexity score (50)~|~Consider refactoring~|~Modules::ProhibitExcessMainComplexity~||~
t/BOM/Actions/client.t~|~4~|~1~|~1~|~Code not contained in explicit package~|~Violates encapsulation~|~Modules::RequireExplicitPackage~||~
t/BOM/Actions/client.t~|~4~|~1~|~1~|~Code not contained in explicit package~|~Violates encapsulation~|~Modules::RequireExplicitPackage~||~
t/BOM/Actions/client.t~|~2~|~1~|~1~|~No package-scoped "$VERSION" variable found~|~See page 404 of PBP~|~Modules::RequireVersionVar~||~
t/BOM/Actions/client.t~|~2~|~2~|~1~|~_perl_5006_pragmas requires 5.006~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/Actions/client.t~|~4~|~36~|~1~|~Pragma "constant" used~|~See page 55 of PBP~|~ValuesAndExpressions::ProhibitConstantPragma~||~
t/BOM/Actions/client.t~|~2~|~52~|~40~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/client.t~|~2~|~71~|~22~|~List of quoted literal words~|~Use 'qw()' instead~|~CodeLayout::ProhibitQuotedWordLists~||~
t/BOM/Actions/client.t~|~5~|~84~|~33~|~"return" statement with explicit "undef"~|~See page 199 of PBP~|~Subroutines::ProhibitExplicitReturnUndef~||~
t/BOM/Actions/client.t~|~3~|~111~|~1~|~Private subroutine/method used~|~Use published APIs~|~Subroutines::ProtectPrivateSubs~||~
t/BOM/Actions/client.t~|~2~|~124~|~41~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/client.t~|~2~|~125~|~11~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/client.t~|~3~|~133~|~1~|~Private subroutine/method used~|~Use published APIs~|~Subroutines::ProtectPrivateSubs~||~
t/BOM/Actions/client.t~|~3~|~142~|~1~|~Private subroutine/method used~|~Use published APIs~|~Subroutines::ProtectPrivateSubs~||~
t/BOM/Actions/client.t~|~2~|~152~|~37~|~_any_qr_tokens requires 5.005.03~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/Actions/client.t~|~2~|~152~|~37~|~_any_quotelike_regexp requires 5.005~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/Actions/client.t~|~2~|~152~|~37~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/client.t~|~2~|~152~|~37~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/client.t~|~2~|~173~|~50~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
t/BOM/Actions/client.t~|~2~|~174~|~17~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
t/BOM/Actions/client.t~|~2~|~174~|~52~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
t/BOM/Actions/client.t~|~2~|~174~|~74~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/client.t~|~3~|~190~|~35~|~Private subroutine/method used~|~Use published APIs~|~Subroutines::ProtectPrivateSubs~||~
t/BOM/Actions/client.t~|~3~|~207~|~9~|~Reused variable name in lexical scope: $applicant~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/client.t~|~2~|~212~|~47~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/client.t~|~2~|~212~|~47~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/client.t~|~3~|~217~|~61~|~Private subroutine/method used~|~Use published APIs~|~Subroutines::ProtectPrivateSubs~||~
t/BOM/Actions/client.t~|~3~|~220~|~70~|~Private subroutine/method used~|~Use published APIs~|~Subroutines::ProtectPrivateSubs~||~
t/BOM/Actions/client.t~|~3~|~224~|~5~|~Reused variable name in lexical scope: $args~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/client.t~|~2~|~262~|~13~|~_Pulp__for_loop_variable_using_my requires 5.004~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/Actions/client.t~|~3~|~282~|~47~|~Private subroutine/method used~|~Use published APIs~|~Subroutines::ProtectPrivateSubs~||~
t/BOM/Actions/client.t~|~2~|~308~|~39~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/client.t~|~3~|~308~|~39~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
t/BOM/Actions/client.t~|~2~|~308~|~39~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/client.t~|~2~|~311~|~59~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/client.t~|~2~|~311~|~59~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/client.t~|~3~|~319~|~21~|~Reused variable name in lexical scope: $applicant~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/client.t~|~3~|~326~|~73~|~Private subroutine/method used~|~Use published APIs~|~Subroutines::ProtectPrivateSubs~||~
t/BOM/Actions/client.t~|~3~|~329~|~82~|~Private subroutine/method used~|~Use published APIs~|~Subroutines::ProtectPrivateSubs~||~
t/BOM/Actions/client.t~|~2~|~331~|~18~|~Put semicolon ; on last statement in a block~|~(no explanation)~|~CodeLayout::RequireFinalSemicolon~||~
t/BOM/Actions/client.t~|~2~|~358~|~48~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/client.t~|~2~|~366~|~55~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/client.t~|~3~|~375~|~21~|~Reused variable name in lexical scope: $args~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/client.t~|~3~|~384~|~21~|~Reused variable name in lexical scope: $upload_info~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/client.t~|~2~|~400~|~59~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/client.t~|~2~|~400~|~59~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/client.t~|~2~|~418~|~78~|~_Pulp__arrow_coderef_call requires 5.004~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/Actions/client.t~|~3~|~458~|~21~|~Reused variable name in lexical scope: $args~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/client.t~|~3~|~467~|~21~|~Reused variable name in lexical scope: $upload_info~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/client.t~|~3~|~500~|~13~|~Reused variable name in lexical scope: $test_client~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/client.t~|~3~|~504~|~13~|~Reused variable name in lexical scope: $args~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/client.t~|~2~|~515~|~69~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/client.t~|~2~|~521~|~36~|~7 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
t/BOM/Actions/client.t~|~3~|~534~|~13~|~Reused variable name in lexical scope: $test_client~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/client.t~|~3~|~538~|~13~|~Reused variable name in lexical scope: $args~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/client.t~|~2~|~549~|~36~|~7 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
t/BOM/Actions/client.t~|~3~|~555~|~35~|~Private subroutine/method used~|~Use published APIs~|~Subroutines::ProtectPrivateSubs~||~
t/BOM/Actions/client.t~|~2~|~567~|~47~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/client.t~|~2~|~567~|~47~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/client.t~|~3~|~570~|~9~|~Reused variable name in lexical scope: $applicant~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/client.t~|~3~|~579~|~61~|~Private subroutine/method used~|~Use published APIs~|~Subroutines::ProtectPrivateSubs~||~
t/BOM/Actions/client.t~|~3~|~582~|~70~|~Private subroutine/method used~|~Use published APIs~|~Subroutines::ProtectPrivateSubs~||~
t/BOM/Actions/client.t~|~2~|~590~|~9~|~Found method-call chain of length 4~|~Long chains of method calls indicate code that is too tightly coupled~|~ValuesAndExpressions::ProhibitLongChainsOfMethodCalls~||~
t/BOM/Actions/client.t~|~3~|~596~|~35~|~Private subroutine/method used~|~Use published APIs~|~Subroutines::ProtectPrivateSubs~||~
t/BOM/Actions/client.t~|~3~|~611~|~58~|~Private subroutine/method used~|~Use published APIs~|~Subroutines::ProtectPrivateSubs~||~
t/BOM/Actions/client.t~|~3~|~614~|~67~|~Private subroutine/method used~|~Use published APIs~|~Subroutines::ProtectPrivateSubs~||~
t/BOM/Actions/client.t~|~2~|~622~|~9~|~Found method-call chain of length 4~|~Long chains of method calls indicate code that is too tightly coupled~|~ValuesAndExpressions::ProhibitLongChainsOfMethodCalls~||~
t/BOM/Actions/client.t~|~2~|~629~|~41~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/client.t~|~3~|~640~|~5~|~Reused variable name in lexical scope: $msg~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/client.t~|~2~|~668~|~46~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
t/BOM/Actions/client.t~|~2~|~672~|~46~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
t/BOM/Actions/client.t~|~2~|~673~|~46~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
t/BOM/Actions/client.t~|~2~|~687~|~38~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/client.t~|~2~|~687~|~38~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/client.t~|~2~|~694~|~41~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/client.t~|~3~|~735~|~5~|~Reused variable name in lexical scope: $applicant_id~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/client.t~|~2~|~745~|~39~|~Postfix control "if" used~|~See pages 93,94 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
t/BOM/Actions/client.t~|~2~|~746~|~46~|~Postfix control "if" used~|~See pages 93,94 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
t/BOM/Actions/client.t~|~2~|~788~|~63~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/client.t~|~2~|~824~|~13~|~Found method-call chain of length 4~|~Long chains of method calls indicate code that is too tightly coupled~|~ValuesAndExpressions::ProhibitLongChainsOfMethodCalls~||~
t/BOM/Actions/client.t~|~2~|~897~|~71~|~20 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
t/BOM/Actions/client.t~|~2~|~901~|~35~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/client.t~|~2~|~904~|~45~|~20 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
t/BOM/Actions/client.t~|~3~|~939~|~17~|~Reused variable name in lexical scope: $applicant~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/client.t~|~2~|~950~|~60~|~429 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
t/BOM/Actions/client.t~|~3~|~958~|~17~|~Reused variable name in lexical scope: $redis~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/client.t~|~2~|~1016~|~59~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/client.t~|~2~|~1027~|~17~|~_Pulp__my_list_with_undef requires 5.005~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/Actions/client.t~|~2~|~1053~|~39~|~Postfix control "if" used~|~See pages 93,94 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
t/BOM/Actions/client.t~|~2~|~1054~|~46~|~Postfix control "if" used~|~See pages 93,94 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
t/BOM/Actions/client.t~|~2~|~1075~|~33~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/client.t~|~3~|~1075~|~33~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
t/BOM/Actions/client.t~|~2~|~1075~|~33~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/client.t~|~2~|~1083~|~26~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/client.t~|~2~|~1088~|~59~|~30 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
t/BOM/Actions/client.t~|~2~|~1090~|~23~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/client.t~|~2~|~1115~|~23~|~3 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
t/BOM/Actions/client.t~|~3~|~1140~|~17~|~Reused variable name in lexical scope: $keys~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/client.t~|~2~|~1141~|~27~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/client.t~|~2~|~1144~|~27~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/client.t~|~3~|~1161~|~25~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
t/BOM/Actions/client.t~|~3~|~1183~|~35~|~Split long regexps into smaller qr// chunks~|~See page 261 of PBP~|~RegularExpressions::ProhibitComplexRegexes~||~
t/BOM/Actions/client.t~|~2~|~1183~|~35~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/client.t~|~3~|~1183~|~35~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
t/BOM/Actions/client.t~|~2~|~1183~|~35~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/client.t~|~3~|~1246~|~17~|~Reused variable name in lexical scope: $keys~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/client.t~|~2~|~1247~|~27~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/client.t~|~2~|~1250~|~27~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/client.t~|~3~|~1259~|~17~|~Test without a label~|~Add a label argument to all Test::More functions~|~TestingAndDebugging::RequireTestLabels~||~
t/BOM/Actions/client.t~|~2~|~1259~|~21~|~"grep" used in boolean context~|~See pages 71,72 of PBP~|~BuiltinFunctions::ProhibitBooleanGrep~||~
t/BOM/Actions/client.t~|~2~|~1259~|~93~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/client.t~|~2~|~1327~|~77~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/client.t~|~2~|~1328~|~30~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/client.t~|~3~|~1337~|~21~|~Reused variable name in lexical scope: $keys~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/client.t~|~2~|~1338~|~31~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/client.t~|~2~|~1341~|~31~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/client.t~|~2~|~1347~|~61~|~Postfix control "if" used~|~See pages 93,94 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
t/BOM/Actions/client.t~|~2~|~1356~|~26~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/client.t~|~3~|~1372~|~25~|~Reused variable name in lexical scope: $onfido_report_filters~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/client.t~|~3~|~1383~|~25~|~Reused variable name in lexical scope: $mocked_report~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/client.t~|~3~|~1384~|~25~|~Reused variable name in lexical scope: $mocked_common~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/client.t~|~2~|~1424~|~81~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/client.t~|~2~|~1425~|~34~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/client.t~|~3~|~1434~|~25~|~Reused variable name in lexical scope: $keys~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/client.t~|~2~|~1435~|~35~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/client.t~|~2~|~1438~|~35~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/client.t~|~3~|~1440~|~25~|~Reused variable name in lexical scope: $db_doc~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/client.t~|~3~|~1443~|~25~|~Reused variable name in lexical scope: $expected_filter~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/client.t~|~2~|~1445~|~65~|~Postfix control "if" used~|~See pages 93,94 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
t/BOM/Actions/client.t~|~2~|~1454~|~30~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/client.t~|~3~|~1473~|~29~|~Reused variable name in lexical scope: $onfido_report_filters~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/client.t~|~3~|~1484~|~29~|~Reused variable name in lexical scope: $mocked_common~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/client.t~|~3~|~1485~|~29~|~Reused variable name in lexical scope: $mocked_report~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/client.t~|~3~|~1538~|~29~|~Reused variable name in lexical scope: $keys~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/client.t~|~2~|~1539~|~39~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/client.t~|~2~|~1542~|~39~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/client.t~|~3~|~1544~|~29~|~Reused variable name in lexical scope: $db_doc~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/client.t~|~2~|~1554~|~34~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/client.t~|~3~|~1578~|~17~|~Reused variable name in lexical scope: $redis_write~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/client.t~|~3~|~1607~|~17~|~Reused variable name in lexical scope: $msg~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/client.t~|~2~|~1607~|~53~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/client.t~|~2~|~1607~|~53~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/client.t~|~2~|~1632~|~50~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/client.t~|~2~|~1632~|~50~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/client.t~|~2~|~1652~|~31~|~Postfix control "if" used~|~See pages 93,94 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
t/BOM/Actions/client.t~|~2~|~1653~|~38~|~Postfix control "if" used~|~See pages 93,94 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
t/BOM/Actions/client.t~|~5~|~1668~|~49~|~"return" statement with explicit "undef"~|~See page 199 of PBP~|~Subroutines::ProhibitExplicitReturnUndef~||~
t/BOM/Actions/client.t~|~2~|~1711~|~38~|~Postfix control "if" used~|~See pages 93,94 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
t/BOM/Actions/client.t~|~2~|~1712~|~31~|~Postfix control "if" used~|~See pages 93,94 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
t/BOM/Actions/client.t~|~2~|~1719~|~30~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/client.t~|~2~|~1782~|~31~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/client.t~|~2~|~1839~|~38~|~Postfix control "if" used~|~See pages 93,94 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
t/BOM/Actions/client.t~|~2~|~1840~|~31~|~Postfix control "if" used~|~See pages 93,94 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
t/BOM/Actions/client.t~|~2~|~1847~|~30~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/client.t~|~2~|~1883~|~31~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/client.t~|~2~|~1979~|~38~|~Postfix control "if" used~|~See pages 93,94 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
t/BOM/Actions/client.t~|~2~|~1980~|~31~|~Postfix control "if" used~|~See pages 93,94 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
t/BOM/Actions/client.t~|~2~|~2023~|~58~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/client.t~|~2~|~2039~|~36~|~50 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
t/BOM/Actions/client.t~|~2~|~2039~|~38~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/client.t~|~2~|~2073~|~5~|~Found method-call chain of length 4~|~Long chains of method calls indicate code that is too tightly coupled~|~ValuesAndExpressions::ProhibitLongChainsOfMethodCalls~||~
t/BOM/Actions/client.t~|~2~|~2104~|~39~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/client.t~|~3~|~2104~|~39~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
t/BOM/Actions/client.t~|~2~|~2104~|~39~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/client.t~|~5~|~2112~|~88~|~"return" statement with explicit "undef"~|~See page 199 of PBP~|~Subroutines::ProhibitExplicitReturnUndef~||~
t/BOM/Actions/client.t~|~5~|~2113~|~88~|~"return" statement with explicit "undef"~|~See page 199 of PBP~|~Subroutines::ProhibitExplicitReturnUndef~||~
t/BOM/Actions/client.t~|~2~|~2126~|~23~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/client.t~|~2~|~2126~|~23~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/client.t~|~2~|~2143~|~26~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/client.t~|~2~|~2143~|~26~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/client.t~|~2~|~2154~|~29~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
t/BOM/Actions/client.t~|~2~|~2155~|~29~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
t/BOM/Actions/client.t~|~2~|~2157~|~29~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
t/BOM/Actions/client.t~|~2~|~2158~|~29~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
t/BOM/Actions/client.t~|~2~|~2159~|~29~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
t/BOM/Actions/client.t~|~2~|~2160~|~29~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
t/BOM/Actions/client.t~|~2~|~2161~|~29~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
t/BOM/Actions/client.t~|~2~|~2162~|~29~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
t/BOM/Actions/client.t~|~2~|~2194~|~51~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/client.t~|~2~|~2207~|~29~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/client.t~|~2~|~2208~|~10~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/client.t~|~2~|~2217~|~27~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/client.t~|~2~|~2231~|~32~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
t/BOM/Actions/client.t~|~2~|~2232~|~32~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
t/BOM/Actions/client.t~|~2~|~2233~|~32~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
t/BOM/Actions/client.t~|~2~|~2234~|~32~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
t/BOM/Actions/client.t~|~2~|~2240~|~10~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/client.t~|~2~|~2243~|~56~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
t/BOM/Actions/client.t~|~2~|~2263~|~53~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
t/BOM/Actions/client.t~|~2~|~2270~|~29~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/client.t~|~2~|~2271~|~10~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/client.t~|~2~|~2276~|~53~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
t/BOM/Actions/client.t~|~2~|~2277~|~19~|~_Pulp__UNIVERSAL_methods_5004 requires 5.004~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/Actions/client.t~|~2~|~2278~|~32~|~String delimiter used with "split"~|~Express it as a regex instead~|~BuiltinFunctions::ProhibitStringySplit~||~
t/BOM/Actions/client.t~|~2~|~2278~|~38~|~Quotes used with a noisy string~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitNoisyQuotes~||~
t/BOM/Actions/client.t~|~2~|~2283~|~27~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/client.t~|~2~|~2299~|~34~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/client.t~|~2~|~2303~|~63~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
t/BOM/Actions/client.t~|~2~|~2305~|~117~|~_perl_5010_operators requires 5.010~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/Actions/client.t~|~2~|~2305~|~120~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
t/BOM/Actions/client.t~|~2~|~2314~|~10~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/client.t~|~2~|~2331~|~29~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
t/BOM/Actions/client.t~|~2~|~2332~|~29~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
t/BOM/Actions/client.t~|~2~|~2334~|~29~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
t/BOM/Actions/client.t~|~2~|~2335~|~29~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
t/BOM/Actions/client.t~|~2~|~2336~|~29~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
t/BOM/Actions/client.t~|~2~|~2337~|~29~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
t/BOM/Actions/client.t~|~2~|~2338~|~29~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
t/BOM/Actions/client.t~|~2~|~2339~|~29~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
t/BOM/Actions/client.t~|~2~|~2370~|~51~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/client.t~|~2~|~2398~|~10~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/client.t~|~2~|~2407~|~29~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
t/BOM/Actions/client.t~|~2~|~2408~|~29~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
t/BOM/Actions/client.t~|~2~|~2410~|~29~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
t/BOM/Actions/client.t~|~2~|~2411~|~29~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
t/BOM/Actions/client.t~|~2~|~2412~|~29~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
t/BOM/Actions/client.t~|~2~|~2413~|~29~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
t/BOM/Actions/client.t~|~2~|~2414~|~29~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
t/BOM/Actions/client.t~|~2~|~2415~|~29~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
t/BOM/Actions/client.t~|~2~|~2446~|~51~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/client.t~|~2~|~2459~|~29~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/client.t~|~2~|~2460~|~10~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/client.t~|~2~|~2470~|~27~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/client.t~|~2~|~2484~|~32~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
t/BOM/Actions/client.t~|~2~|~2485~|~32~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
t/BOM/Actions/client.t~|~2~|~2486~|~32~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
t/BOM/Actions/client.t~|~2~|~2487~|~32~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
t/BOM/Actions/client.t~|~2~|~2493~|~10~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/client.t~|~2~|~2496~|~62~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
t/BOM/Actions/client.t~|~2~|~2513~|~28~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/client.t~|~2~|~2517~|~28~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/client.t~|~2~|~2527~|~30~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/client.t~|~2~|~2562~|~54~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/client.t~|~3~|~2562~|~54~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
t/BOM/Actions/client.t~|~2~|~2562~|~54~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/client.t~|~2~|~2563~|~54~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/client.t~|~3~|~2563~|~54~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
t/BOM/Actions/client.t~|~2~|~2563~|~54~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/client.t~|~2~|~2589~|~31~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/client.t~|~2~|~2604~|~27~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/client.t~|~2~|~2616~|~35~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/client.t~|~2~|~2626~|~27~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/client.t~|~3~|~2647~|~5~|~Reused variable name in lexical scope: $args~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/client.t~|~2~|~2663~|~60~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/client.t~|~2~|~2677~|~31~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/client.t~|~2~|~2689~|~34~|~Long number not separated with underscores~|~See page 59 of PBP~|~ValuesAndExpressions::RequireNumberSeparators~||~
t/BOM/Actions/client.t~|~2~|~2701~|~72~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/client.t~|~2~|~2717~|~31~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/client.t~|~2~|~2729~|~39~|~Long number not separated with underscores~|~See page 59 of PBP~|~ValuesAndExpressions::RequireNumberSeparators~||~
t/BOM/Actions/client.t~|~2~|~2743~|~72~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/client.t~|~2~|~2777~|~27~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/client.t~|~2~|~2793~|~27~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/client.t~|~2~|~2832~|~27~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/client.t~|~2~|~2848~|~27~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/client.t~|~3~|~2857~|~1~|~Too many arguments~|~See page 182 of PBP~|~Subroutines::ProhibitManyArgs~||~
t/BOM/Actions/client.t~|~4~|~2857~|~1~|~Subroutine "test_segment_customer" does not end with "return"~|~See page 197 of PBP~|~Subroutines::RequireFinalReturn~||~
t/BOM/Actions/client.t~|~3~|~2858~|~5~|~Reused variable name in lexical scope: $test_client~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/client.t~|~2~|~2874~|~32~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
t/BOM/Actions/client.t~|~2~|~2875~|~32~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
t/BOM/Actions/client.t~|~2~|~2876~|~32~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
t/BOM/Actions/client.t~|~2~|~2877~|~32~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
t/BOM/Actions/client.t~|~2~|~2887~|~49~|~Quotes used with a noisy string~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitNoisyQuotes~||~
t/BOM/Actions/client.t~|~2~|~2896~|~36~|~String delimiter used with "split"~|~Express it as a regex instead~|~BuiltinFunctions::ProhibitStringySplit~||~
t/BOM/Actions/client.t~|~2~|~2896~|~42~|~Quotes used with a noisy string~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitNoisyQuotes~||~
t/BOM/Actions/client.t~|~2~|~2909~|~34~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/client.t~|~2~|~2915~|~63~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
t/BOM/Actions/client.t~|~2~|~2917~|~120~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
t/BOM/Actions/client.t~|~2~|~2923~|~49~|~Quotes used with a noisy string~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitNoisyQuotes~||~
t/BOM/Actions/client.t~|~3~|~2946~|~5~|~Reused variable name in lexical scope: $args~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/client.t~|~2~|~2964~|~97~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/client.t~|~2~|~2972~|~30~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/client.t~|~2~|~2978~|~73~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/client.t~|~2~|~3072~|~38~|~Postfix control "if" used~|~See pages 93,94 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
t/BOM/Actions/client.t~|~2~|~3073~|~31~|~Postfix control "if" used~|~See pages 93,94 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
t/BOM/Actions/client.t~|~4~|~3079~|~5~|~Pragma "constant" used~|~See page 55 of PBP~|~ValuesAndExpressions::ProhibitConstantPragma~||~
t/BOM/Actions/client.t~|~4~|~3081~|~5~|~Pragma "constant" used~|~See page 55 of PBP~|~ValuesAndExpressions::ProhibitConstantPragma~||~
t/BOM/Actions/client.t~|~4~|~3084~|~5~|~Pragma "constant" used~|~See page 55 of PBP~|~ValuesAndExpressions::ProhibitConstantPragma~||~
t/BOM/Actions/client.t~|~4~|~3086~|~5~|~Pragma "constant" used~|~See page 55 of PBP~|~ValuesAndExpressions::ProhibitConstantPragma~||~
t/BOM/Actions/client.t~|~4~|~3089~|~5~|~Pragma "constant" used~|~See page 55 of PBP~|~ValuesAndExpressions::ProhibitConstantPragma~||~
t/BOM/Actions/client.t~|~4~|~3090~|~5~|~Pragma "constant" used~|~See page 55 of PBP~|~ValuesAndExpressions::ProhibitConstantPragma~||~
t/BOM/Actions/client.t~|~3~|~3108~|~31~|~Private subroutine/method used~|~Use published APIs~|~Subroutines::ProtectPrivateSubs~||~
t/BOM/Actions/client.t~|~2~|~3126~|~17~|~Postfix control "if" used~|~See pages 93,94 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
t/BOM/Actions/client.t~|~2~|~3126~|~28~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/client.t~|~3~|~3126~|~28~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
t/BOM/Actions/client.t~|~2~|~3126~|~28~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/client.t~|~2~|~3138~|~38~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/client.t~|~3~|~3155~|~31~|~Private subroutine/method used~|~Use published APIs~|~Subroutines::ProtectPrivateSubs~||~
t/BOM/Actions/client.t~|~3~|~3156~|~32~|~Private subroutine/method used~|~Use published APIs~|~Subroutines::ProtectPrivateSubs~||~
t/BOM/Actions/client.t~|~2~|~3173~|~56~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/client.t~|~2~|~3182~|~38~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/client.t~|~2~|~3193~|~90~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/client.t~|~2~|~3221~|~97~|~100 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
t/BOM/Actions/client.t~|~2~|~3223~|~20~|~100 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
t/BOM/Actions/client.t~|~2~|~3232~|~90~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/client.t~|~2~|~3250~|~88~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/client.t~|~3~|~3315~|~9~|~Reused variable name in lexical scope: $resubmission_context~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/client.t~|~2~|~3349~|~49~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/client.t~|~2~|~3350~|~19~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/client.t~|~3~|~3387~|~5~|~Test without a label~|~Add a label argument to all Test::More functions~|~TestingAndDebugging::RequireTestLabels~||~
t/BOM/Actions/client.t~|~2~|~3404~|~69~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/client.t~|~3~|~3426~|~39~|~Private subroutine/method used~|~Use published APIs~|~Subroutines::ProtectPrivateSubs~||~
t/BOM/Actions/client.t~|~3~|~3427~|~38~|~Private subroutine/method used~|~Use published APIs~|~Subroutines::ProtectPrivateSubs~||~
t/BOM/Actions/client.t~|~2~|~3443~|~49~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/client.t~|~3~|~3465~|~38~|~Private subroutine/method used~|~Use published APIs~|~Subroutines::ProtectPrivateSubs~||~
t/BOM/Actions/client.t~|~3~|~3466~|~39~|~Private subroutine/method used~|~Use published APIs~|~Subroutines::ProtectPrivateSubs~||~
t/BOM/Actions/client.t~|~3~|~3472~|~5~|~"@email_args" is declared but not used~|~Unused variables clutter code and make it harder to read~|~Variables::ProhibitUnusedVariables~||~
t/BOM/Actions/client.t~|~2~|~3485~|~33~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/client.t~|~3~|~3496~|~5~|~Reused variable name in lexical scope: $brand~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/client.t~|~2~|~3505~|~20~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/client.t~|~2~|~3505~|~20~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/client.t~|~2~|~3513~|~38~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/client.t~|~2~|~3513~|~38~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/client.t~|~3~|~3528~|~5~|~Reused variable name in lexical scope: $brand~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/client.t~|~2~|~3536~|~33~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/client.t~|~2~|~3556~|~14~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/client.t~|~2~|~3558~|~29~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/client.t~|~3~|~3588~|~5~|~Reused variable name in lexical scope: $test_client~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/client.t~|~2~|~3601~|~9~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/client.t~|~3~|~3601~|~9~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
t/BOM/Actions/client.t~|~2~|~3601~|~9~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/client.t~|~2~|~3602~|~60~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/client.t~|~2~|~3609~|~9~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/client.t~|~3~|~3609~|~9~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
t/BOM/Actions/client.t~|~2~|~3609~|~9~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/client.t~|~2~|~3610~|~60~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/client.t~|~3~|~3642~|~5~|~Reused variable name in lexical scope: $test_client~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/client.t~|~3~|~3649~|~5~|~Private subroutine/method used~|~Use published APIs~|~Subroutines::ProtectPrivateSubs~||~
t/BOM/Actions/client.t~|~3~|~3651~|~5~|~Reused variable name in lexical scope: $msg~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/client.t~|~2~|~3651~|~41~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/client.t~|~2~|~3651~|~41~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/client.t~|~3~|~3655~|~5~|~Private subroutine/method used~|~Use published APIs~|~Subroutines::ProtectPrivateSubs~||~
t/BOM/Actions/client.t~|~2~|~3657~|~38~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/client.t~|~2~|~3657~|~38~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/client.t~|~3~|~3674~|~5~|~Private subroutine/method used~|~Use published APIs~|~Subroutines::ProtectPrivateSubs~||~
t/BOM/Actions/client.t~|~3~|~3676~|~5~|~Reused variable name in lexical scope: $msg~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/client.t~|~2~|~3676~|~41~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/client.t~|~2~|~3676~|~41~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/client.t~|~3~|~3682~|~5~|~Private subroutine/method used~|~Use published APIs~|~Subroutines::ProtectPrivateSubs~||~
t/BOM/Actions/client.t~|~2~|~3684~|~38~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/client.t~|~2~|~3684~|~38~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/client.t~|~3~|~3688~|~5~|~Private subroutine/method used~|~Use published APIs~|~Subroutines::ProtectPrivateSubs~||~
t/BOM/Actions/client.t~|~2~|~3690~|~38~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/client.t~|~2~|~3690~|~38~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/client.t~|~3~|~3697~|~5~|~Reused variable name in lexical scope: $test_client~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/client.t~|~3~|~3702~|~5~|~Private subroutine/method used~|~Use published APIs~|~Subroutines::ProtectPrivateSubs~||~
t/BOM/Actions/client.t~|~3~|~3704~|~5~|~Reused variable name in lexical scope: $msg~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/client.t~|~2~|~3704~|~41~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/client.t~|~2~|~3704~|~41~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/client.t~|~2~|~3724~|~9~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
t/BOM/Actions/client.t~|~3~|~3736~|~16~|~Private subroutine/method used~|~Use published APIs~|~Subroutines::ProtectPrivateSubs~||~
t/BOM/Actions/client.t~|~3~|~3741~|~12~|~Private subroutine/method used~|~Use published APIs~|~Subroutines::ProtectPrivateSubs~||~
t/BOM/Actions/client.t~|~2~|~3741~|~84~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
t/BOM/Actions/client.t~|~3~|~3808~|~13~|~Reused variable name in lexical scope: $args~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/client.t~|~2~|~3834~|~53~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/client.t~|~3~|~3834~|~53~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
t/BOM/Actions/client.t~|~2~|~3834~|~53~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/client.t~|~2~|~3837~|~53~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/client.t~|~2~|~3837~|~53~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/client.t~|~3~|~3846~|~27~|~Private subroutine/method used~|~Use published APIs~|~Subroutines::ProtectPrivateSubs~||~
t/BOM/Actions/client.t~|~3~|~3860~|~27~|~Private subroutine/method used~|~Use published APIs~|~Subroutines::ProtectPrivateSubs~||~
t/BOM/Actions/client.t~|~3~|~3875~|~27~|~Private subroutine/method used~|~Use published APIs~|~Subroutines::ProtectPrivateSubs~||~
t/BOM/Actions/client.t~|~2~|~3881~|~88~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/client.t~|~3~|~3891~|~27~|~Private subroutine/method used~|~Use published APIs~|~Subroutines::ProtectPrivateSubs~||~
t/BOM/Actions/client.t~|~2~|~3896~|~93~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/client.t~|~3~|~3906~|~27~|~Private subroutine/method used~|~Use published APIs~|~Subroutines::ProtectPrivateSubs~||~
t/BOM/Actions/client.t~|~2~|~3912~|~93~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/client.t~|~3~|~3926~|~27~|~Private subroutine/method used~|~Use published APIs~|~Subroutines::ProtectPrivateSubs~||~
t/BOM/Actions/client.t~|~3~|~3946~|~27~|~Private subroutine/method used~|~Use published APIs~|~Subroutines::ProtectPrivateSubs~||~
t/BOM/Actions/client.t~|~3~|~3974~|~27~|~Private subroutine/method used~|~Use published APIs~|~Subroutines::ProtectPrivateSubs~||~
t/BOM/Actions/client.t~|~2~|~3987~|~25~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
t/BOM/Actions/client.t~|~2~|~4004~|~65~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
t/BOM/Actions/client.t~|~2~|~4004~|~110~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
t/BOM/Actions/client.t~|~3~|~4023~|~27~|~Private subroutine/method used~|~Use published APIs~|~Subroutines::ProtectPrivateSubs~||~
t/BOM/Actions/client.t~|~2~|~4046~|~65~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
t/BOM/Actions/client.t~|~2~|~4046~|~110~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
t/BOM/Actions/client.t~|~3~|~4089~|~35~|~Private subroutine/method used~|~Use published APIs~|~Subroutines::ProtectPrivateSubs~||~
t/BOM/Actions/client.t~|~2~|~4118~|~66~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/client.t~|~3~|~4136~|~35~|~Private subroutine/method used~|~Use published APIs~|~Subroutines::ProtectPrivateSubs~||~
t/BOM/Actions/client.t~|~2~|~4166~|~74~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/client.t~|~3~|~4184~|~35~|~Private subroutine/method used~|~Use published APIs~|~Subroutines::ProtectPrivateSubs~||~
t/BOM/Actions/client.t~|~3~|~4231~|~35~|~Private subroutine/method used~|~Use published APIs~|~Subroutines::ProtectPrivateSubs~||~
t/BOM/Actions/client.t~|~5~|~4288~|~9~|~Stricture disabled~|~See page 429 of PBP~|~TestingAndDebugging::ProhibitNoStrict~||~
t/BOM/Actions/client.t~|~4~|~4288~|~9~|~Don't turn off strict for large blocks of code~|~See page 433 of PBP~|~TestingAndDebugging::ProhibitProlongedStrictureOverride~||~
t/BOM/Actions/client.t~|~3~|~4299~|~5~|~Reused variable name in lexical scope: $test_client~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/client.t~|~3~|~4310~|~5~|~Reused variable name in lexical scope: $args~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/client.t~|~2~|~4318~|~19~|~_Pulp__bareword_double_colon requires 5.005~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/Actions/client.t~|~2~|~4318~|~19~|~_bareword_double_colon requires 5.005~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/Actions/client.t~|~3~|~4328~|~5~|~Reused variable name in lexical scope: $test_client~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/client.t~|~3~|~4339~|~5~|~Reused variable name in lexical scope: $args~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/client.t~|~3~|~4357~|~5~|~Reused variable name in lexical scope: $test_client~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/client.t~|~3~|~4368~|~5~|~Reused variable name in lexical scope: $args~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/client.t~|~3~|~4540~|~27~|~Private subroutine/method used~|~Use published APIs~|~Subroutines::ProtectPrivateSubs~||~
t/BOM/Actions/client.t~|~3~|~4551~|~32~|~Private subroutine/method used~|~Use published APIs~|~Subroutines::ProtectPrivateSubs~||~
t/BOM/Actions/client.t~|~3~|~4579~|~32~|~Private subroutine/method used~|~Use published APIs~|~Subroutines::ProtectPrivateSubs~||~
t/BOM/Actions/client.t~|~3~|~4588~|~21~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
t/BOM/Actions/client.t~|~2~|~4595~|~31~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/client.t~|~3~|~4595~|~31~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
t/BOM/Actions/client.t~|~2~|~4595~|~31~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/client.t~|~2~|~4598~|~10~|~Put semicolon ; on last statement in a block~|~(no explanation)~|~CodeLayout::RequireFinalSemicolon~||~
t/BOM/Actions/client.t~|~3~|~4614~|~5~|~Reused variable name in lexical scope: $test_client~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/client.t~|~2~|~4690~|~37~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/client.t~|~3~|~4709~|~9~|~Duplicate hash key "loginid"~|~(no explanation)~|~ValuesAndExpressions::ProhibitDuplicateHashKeys~||~
t/BOM/Actions/client.t~|~2~|~4749~|~37~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/client.t~|~3~|~4768~|~9~|~Duplicate hash key "email"~|~(no explanation)~|~ValuesAndExpressions::ProhibitDuplicateHashKeys~||~
t/BOM/Actions/client.t~|~2~|~4806~|~31~|~Postfix control "if" used~|~See pages 93,94 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
t/BOM/Actions/client.t~|~2~|~4807~|~38~|~Postfix control "if" used~|~See pages 93,94 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
t/BOM/Actions/client.t~|~3~|~4830~|~13~|~Reused variable name in lexical scope: $args~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/client.t~|~2~|~4832~|~39~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/client.t~|~5~|~4834~|~13~|~"return" statement with explicit "undef"~|~See page 199 of PBP~|~Subroutines::ProhibitExplicitReturnUndef~||~
t/BOM/Actions/client.t~|~3~|~4837~|~5~|~Reused variable name in lexical scope: $vrtc_client~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/client.t~|~3~|~4844~|~5~|~Reused variable name in lexical scope: $brand~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/client.t~|~2~|~4861~|~31~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/client.t~|~2~|~4875~|~26~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/client.t~|~3~|~4903~|~31~|~Private subroutine/method used~|~Use published APIs~|~Subroutines::ProtectPrivateSubs~||~
t/BOM/Actions/client.t~|~3~|~4908~|~31~|~Private subroutine/method used~|~Use published APIs~|~Subroutines::ProtectPrivateSubs~||~
t/BOM/Actions/client.t~|~2~|~4951~|~14~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/client.t~|~3~|~4957~|~9~|~Reused variable name in lexical scope: $msg~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/client.t~|~2~|~4957~|~45~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/client.t~|~2~|~4957~|~45~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/client.t~|~2~|~4965~|~43~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/client.t~|~3~|~4975~|~35~|~Private subroutine/method used~|~Use published APIs~|~Subroutines::ProtectPrivateSubs~||~
t/BOM/Actions/client.t~|~3~|~4980~|~35~|~Private subroutine/method used~|~Use published APIs~|~Subroutines::ProtectPrivateSubs~||~
t/BOM/Actions/client.t~|~3~|~5010~|~13~|~Reused variable name in lexical scope: $msg~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/client.t~|~2~|~5010~|~49~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/client.t~|~2~|~5010~|~49~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/client.t~|~2~|~5012~|~32~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/client.t~|~2~|~5012~|~32~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/client.t~|~2~|~5013~|~32~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/client.t~|~3~|~5013~|~32~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
t/BOM/Actions/client.t~|~2~|~5013~|~32~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/client.t~|~2~|~5014~|~32~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/client.t~|~3~|~5014~|~32~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
t/BOM/Actions/client.t~|~2~|~5014~|~32~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/client.t~|~2~|~5015~|~32~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/client.t~|~3~|~5015~|~32~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
t/BOM/Actions/client.t~|~2~|~5015~|~32~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/client.t~|~3~|~5032~|~35~|~Private subroutine/method used~|~Use published APIs~|~Subroutines::ProtectPrivateSubs~||~
t/BOM/Actions/client.t~|~3~|~5037~|~35~|~Private subroutine/method used~|~Use published APIs~|~Subroutines::ProtectPrivateSubs~||~
t/BOM/Actions/client.t~|~2~|~5070~|~18~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/client.t~|~3~|~5074~|~13~|~Reused variable name in lexical scope: $msg~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/client.t~|~2~|~5074~|~49~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/client.t~|~2~|~5074~|~49~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/client.t~|~3~|~5088~|~31~|~Private subroutine/method used~|~Use published APIs~|~Subroutines::ProtectPrivateSubs~||~
t/BOM/Actions/client.t~|~3~|~5093~|~31~|~Private subroutine/method used~|~Use published APIs~|~Subroutines::ProtectPrivateSubs~||~
t/BOM/Actions/client.t~|~2~|~5118~|~14~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/client.t~|~3~|~5142~|~9~|~Reused variable name in lexical scope: $msg~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/client.t~|~2~|~5142~|~45~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/client.t~|~2~|~5142~|~45~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/client.t~|~3~|~5160~|~35~|~Private subroutine/method used~|~Use published APIs~|~Subroutines::ProtectPrivateSubs~||~
t/BOM/Actions/client.t~|~3~|~5165~|~35~|~Private subroutine/method used~|~Use published APIs~|~Subroutines::ProtectPrivateSubs~||~
t/BOM/Actions/client.t~|~3~|~5185~|~13~|~Reused variable name in lexical scope: $msg~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/client.t~|~2~|~5185~|~49~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/client.t~|~2~|~5185~|~49~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/client.t~|~2~|~5187~|~32~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/client.t~|~2~|~5187~|~32~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/client.t~|~2~|~5188~|~32~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/client.t~|~3~|~5188~|~32~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
t/BOM/Actions/client.t~|~2~|~5188~|~32~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/client.t~|~2~|~5189~|~32~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/client.t~|~3~|~5189~|~32~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
t/BOM/Actions/client.t~|~2~|~5189~|~32~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/client.t~|~3~|~5206~|~35~|~Private subroutine/method used~|~Use published APIs~|~Subroutines::ProtectPrivateSubs~||~
t/BOM/Actions/client.t~|~3~|~5211~|~35~|~Private subroutine/method used~|~Use published APIs~|~Subroutines::ProtectPrivateSubs~||~
t/BOM/Actions/client.t~|~2~|~5236~|~18~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/client.t~|~3~|~5248~|~13~|~Reused variable name in lexical scope: $msg~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/client.t~|~2~|~5248~|~49~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/client.t~|~2~|~5248~|~49~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/client.t~|~3~|~5266~|~31~|~Private subroutine/method used~|~Use published APIs~|~Subroutines::ProtectPrivateSubs~||~
t/BOM/Actions/client.t~|~3~|~5270~|~31~|~Private subroutine/method used~|~Use published APIs~|~Subroutines::ProtectPrivateSubs~||~
t/BOM/Actions/client.t~|~3~|~5296~|~9~|~Reused variable name in lexical scope: $msg~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/client.t~|~2~|~5296~|~45~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/client.t~|~2~|~5296~|~45~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/client.t~|~3~|~5308~|~35~|~Private subroutine/method used~|~Use published APIs~|~Subroutines::ProtectPrivateSubs~||~
t/BOM/Actions/client.t~|~3~|~5313~|~35~|~Private subroutine/method used~|~Use published APIs~|~Subroutines::ProtectPrivateSubs~||~
t/BOM/Actions/client.t~|~2~|~5323~|~39~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/client.t~|~2~|~5328~|~39~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/client.t~|~3~|~5359~|~13~|~Reused variable name in lexical scope: $msg~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/client.t~|~2~|~5359~|~49~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/client.t~|~2~|~5359~|~49~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/client.t~|~2~|~5361~|~32~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/client.t~|~3~|~5361~|~32~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
t/BOM/Actions/client.t~|~2~|~5361~|~32~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/client.t~|~2~|~5362~|~32~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/client.t~|~3~|~5362~|~32~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
t/BOM/Actions/client.t~|~2~|~5362~|~32~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/client.t~|~2~|~5363~|~32~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/client.t~|~3~|~5363~|~32~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
t/BOM/Actions/client.t~|~2~|~5363~|~32~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/client.t~|~3~|~5379~|~31~|~Private subroutine/method used~|~Use published APIs~|~Subroutines::ProtectPrivateSubs~||~
t/BOM/Actions/client.t~|~3~|~5384~|~31~|~Private subroutine/method used~|~Use published APIs~|~Subroutines::ProtectPrivateSubs~||~
t/BOM/Actions/client.t~|~3~|~5427~|~5~|~Reused variable name in lexical scope: $test_user~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/client.t~|~3~|~5438~|~9~|~Reused variable name in lexical scope: $onfido~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/client.t~|~3~|~5438~|~33~|~Private subroutine/method used~|~Use published APIs~|~Subroutines::ProtectPrivateSubs~||~
t/BOM/Actions/client.t~|~3~|~5439~|~9~|~Reused variable name in lexical scope: $applicant_id~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/client.t~|~3~|~5462~|~35~|~Return value of eval not tested~|~You can't depend upon the value of $@/$EVAL_ERROR to tell whether an eval failed~|~ErrorHandling::RequireCheckingReturnValueOfEval~||~
t/BOM/Actions/client.t~|~3~|~5466~|~17~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
t/BOM/Actions/client.t~|~2~|~5467~|~44~|~Postfix control "unless" used~|~See pages 96,97 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
t/BOM/Actions/client.t~|~2~|~5546~|~41~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/client.t~|~2~|~5580~|~53~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/client.t~|~2~|~5612~|~57~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/client.t~|~3~|~5626~|~13~|~Reused variable name in lexical scope: $check_newdata~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/client.t~|~2~|~5693~|~34~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
t/BOM/Actions/client.t~|~2~|~5697~|~35~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/client.t~|~2~|~5716~|~36~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
t/BOM/Actions/client.t~|~2~|~5721~|~38~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/client.t~|~2~|~5734~|~34~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
t/BOM/Actions/client.t~|~2~|~5738~|~35~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/client.t~|~2~|~5757~|~36~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
t/BOM/Actions/client.t~|~2~|~5760~|~36~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
t/BOM/Actions/client.t~|~2~|~5762~|~38~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/client.t~|~3~|~5786~|~5~|~Reused variable name in lexical scope: $args~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/client.t~|~2~|~5790~|~35~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/client.t~|~3~|~5897~|~5~|~Reused variable name in lexical scope: $test_client~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/client.t~|~3~|~5901~|~5~|~Reused variable name in lexical scope: $args~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/client.t~|~3~|~5930~|~5~|~Reused variable name in lexical scope: $test_client~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/client.t~|~3~|~5934~|~5~|~Reused variable name in lexical scope: $args~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/client.t~|~3~|~5964~|~5~|~Reused variable name in lexical scope: $test_client~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/client.t~|~3~|~5968~|~5~|~Reused variable name in lexical scope: $args~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/client.t~|~3~|~5998~|~5~|~Reused variable name in lexical scope: $test_client~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/client.t~|~3~|~6002~|~5~|~Reused variable name in lexical scope: $args~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/client.t~|~3~|~6024~|~5~|~Reused variable name in lexical scope: $args~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/client.t~|~3~|~6047~|~5~|~Reused variable name in lexical scope: $test_client~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/client.t~|~3~|~6051~|~5~|~Reused variable name in lexical scope: $args~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/client.t~|~3~|~6103~|~5~|~Reused variable name in lexical scope: $test_client~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/client.t~|~3~|~6107~|~5~|~Reused variable name in lexical scope: $args~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/client.t~|~2~|~6113~|~30~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
t/BOM/Actions/client.t~|~3~|~6119~|~5~|~Test without a label~|~Add a label argument to all Test::More functions~|~TestingAndDebugging::RequireTestLabels~||~
t/BOM/Actions/client.t~|~3~|~6135~|~5~|~Reused variable name in lexical scope: $args~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/client.t~|~2~|~6139~|~47~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/client.t~|~3~|~6161~|~26~|~Private subroutine/method used~|~Use published APIs~|~Subroutines::ProtectPrivateSubs~||~
t/BOM/Actions/client.t~|~3~|~6172~|~5~|~Reused variable name in lexical scope: $args~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/client.t~|~3~|~6180~|~26~|~Private subroutine/method used~|~Use published APIs~|~Subroutines::ProtectPrivateSubs~||~
t/BOM/Actions/client.t~|~4~|~6183~|~1~|~Subroutine "reset_onfido_check" does not end with "return"~|~See page 197 of PBP~|~Subroutines::RequireFinalReturn~||~
t/BOM/Actions/client.t~|~3~|~6184~|~5~|~Reused variable name in lexical scope: $check~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/client.t~|~4~|~6195~|~1~|~Module does not end with "1;"~|~Must end with a recognizable true value~|~Modules::RequireEndWithOne~||~
t/BOM/Actions/client_02.t~|~4~|~1~|~1~|~Code not contained in explicit package~|~Violates encapsulation~|~Modules::RequireExplicitPackage~||~
t/BOM/Actions/client_02.t~|~4~|~1~|~1~|~Code not contained in explicit package~|~Violates encapsulation~|~Modules::RequireExplicitPackage~||~
t/BOM/Actions/client_02.t~|~2~|~1~|~1~|~No package-scoped "$VERSION" variable found~|~See page 404 of PBP~|~Modules::RequireVersionVar~||~
t/BOM/Actions/client_02.t~|~2~|~2~|~1~|~_perl_5006_pragmas requires 5.006~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/Actions/client_02.t~|~4~|~23~|~29~|~Magic variable "$ENV" should be assigned as "local"~|~See pages 81,82 of PBP~|~Variables::RequireLocalizedPunctuationVars~||~
t/BOM/Actions/client_02.t~|~4~|~25~|~38~|~Magic variable "$ENV" should be assigned as "local"~|~See pages 81,82 of PBP~|~Variables::RequireLocalizedPunctuationVars~||~
t/BOM/Actions/client_02.t~|~2~|~25~|~40~|~3 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
t/BOM/Actions/client_02.t~|~5~|~63~|~13~|~"return" statement with explicit "undef"~|~See page 199 of PBP~|~Subroutines::ProhibitExplicitReturnUndef~||~
t/BOM/Actions/client_02.t~|~2~|~72~|~22~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/client_02.t~|~2~|~72~|~22~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/client_02.t~|~2~|~80~|~22~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/client_02.t~|~2~|~80~|~22~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/client_02.t~|~2~|~97~|~10~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/client_02.t~|~2~|~110~|~10~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/client_02.t~|~2~|~128~|~22~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/client_02.t~|~2~|~128~|~22~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/client_02.t~|~2~|~136~|~22~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/client_02.t~|~2~|~136~|~22~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/client_02.t~|~2~|~144~|~22~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/client_02.t~|~2~|~144~|~22~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/client_02.t~|~3~|~159~|~13~|~Reused variable name in lexical scope: $from_proc~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/client_02.t~|~3~|~159~|~13~|~Reused variable name in lexical scope: $client_proc~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/client_02.t~|~3~|~159~|~13~|~Reused variable name in lexical scope: $provider~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/client_02.t~|~2~|~162~|~56~|~Postfix control "unless" used~|~See pages 96,97 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
t/BOM/Actions/client_02.t~|~2~|~163~|~71~|~Postfix control "if" used~|~See pages 93,94 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
t/BOM/Actions/client_02.t~|~5~|~164~|~13~|~"return" statement with explicit "undef"~|~See page 199 of PBP~|~Subroutines::ProhibitExplicitReturnUndef~||~
t/BOM/Actions/client_02.t~|~2~|~205~|~18~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/client_02.t~|~2~|~223~|~27~|~_any_qr_tokens requires 5.005.03~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/Actions/client_02.t~|~2~|~223~|~27~|~_any_quotelike_regexp requires 5.005~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/Actions/client_02.t~|~2~|~223~|~27~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/client_02.t~|~2~|~223~|~27~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/client_02.t~|~4~|~255~|~1~|~Module does not end with "1;"~|~Must end with a recognizable true value~|~Modules::RequireEndWithOne~||~
t/BOM/Actions/send_email.t~|~4~|~1~|~1~|~Code not contained in explicit package~|~Violates encapsulation~|~Modules::RequireExplicitPackage~||~
t/BOM/Actions/send_email.t~|~4~|~1~|~1~|~Code not contained in explicit package~|~Violates encapsulation~|~Modules::RequireExplicitPackage~||~
t/BOM/Actions/send_email.t~|~2~|~1~|~1~|~No package-scoped "$VERSION" variable found~|~See page 404 of PBP~|~Modules::RequireVersionVar~||~
t/BOM/Actions/send_email.t~|~2~|~2~|~1~|~_perl_5006_pragmas requires 5.006~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/Actions/send_email.t~|~2~|~33~|~40~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/send_email.t~|~5~|~35~|~20~|~Subroutine "new" called using indirect syntax~|~See page 349 of PBP~|~Objects::ProhibitIndirectSyntax~||~
t/BOM/Actions/send_email.t~|~5~|~35~|~20~|~Subroutine "new" called using indirect syntax~|~See page 349 of PBP~|~Objects::ProhibitIndirectSyntax~||~
t/BOM/Actions/send_email.t~|~4~|~35~|~20~|~Subroutine "new" called using indirect syntax~|~See page 349 of PBP~|~Objects::ProhibitIndirectSyntax~||~
t/BOM/Actions/send_email.t~|~3~|~46~|~9~|~Reused variable name in lexical scope: $brand~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/send_email.t~|~2~|~56~|~52~|~_Pulp__arrow_coderef_call requires 5.004~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/Actions/send_email.t~|~2~|~59~|~22~|~List of quoted literal words~|~Use 'qw()' instead~|~CodeLayout::ProhibitQuotedWordLists~||~
t/BOM/Actions/send_email.t~|~3~|~76~|~5~|~Reused variable name in lexical scope: $req~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/send_email.t~|~3~|~97~|~5~|~Reused variable name in lexical scope: $req~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/send_email.t~|~3~|~116~|~5~|~Reused variable name in lexical scope: $req~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/send_email.t~|~4~|~135~|~1~|~Module does not end with "1;"~|~Must end with a recognizable true value~|~Modules::RequireEndWithOne~||~
t/BOM/Actions/CustomerStatement.t~|~4~|~1~|~1~|~Code not contained in explicit package~|~Violates encapsulation~|~Modules::RequireExplicitPackage~||~
t/BOM/Actions/CustomerStatement.t~|~4~|~1~|~1~|~Code not contained in explicit package~|~Violates encapsulation~|~Modules::RequireExplicitPackage~||~
t/BOM/Actions/CustomerStatement.t~|~2~|~1~|~1~|~No package-scoped "$VERSION" variable found~|~See page 404 of PBP~|~Modules::RequireVersionVar~||~
t/BOM/Actions/CustomerStatement.t~|~2~|~2~|~1~|~_perl_5006_pragmas requires 5.006~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/Actions/CustomerStatement.t~|~2~|~3~|~1~|~_pragma_utf8 requires 5.008~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/Actions/CustomerStatement.t~|~4~|~28~|~1~|~Pragma "constant" used~|~See page 55 of PBP~|~ValuesAndExpressions::ProhibitConstantPragma~||~
t/BOM/Actions/CustomerStatement.t~|~2~|~28~|~39~|~Long number not separated with underscores~|~See page 59 of PBP~|~ValuesAndExpressions::RequireNumberSeparators~||~
t/BOM/Actions/CustomerStatement.t~|~4~|~29~|~1~|~Pragma "constant" used~|~See page 55 of PBP~|~ValuesAndExpressions::ProhibitConstantPragma~||~
t/BOM/Actions/CustomerStatement.t~|~2~|~36~|~8~|~Postfix control "for" used~|~See page 96 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
t/BOM/Actions/CustomerStatement.t~|~2~|~48~|~33~|~99 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
t/BOM/Actions/CustomerStatement.t~|~2~|~56~|~33~|~52 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
t/BOM/Actions/CustomerStatement.t~|~2~|~74~|~26~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/CustomerStatement.t~|~2~|~79~|~39~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/CustomerStatement.t~|~2~|~86~|~26~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/CustomerStatement.t~|~2~|~110~|~44~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
t/BOM/Actions/CustomerStatement.t~|~2~|~112~|~64~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/CustomerStatement.t~|~2~|~115~|~23~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
t/BOM/Actions/CustomerStatement.t~|~2~|~115~|~27~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
t/BOM/Actions/CustomerStatement.t~|~2~|~115~|~31~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
t/BOM/Actions/CustomerStatement.t~|~2~|~115~|~35~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
t/BOM/Actions/CustomerStatement.t~|~2~|~115~|~39~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
t/BOM/Actions/CustomerStatement.t~|~2~|~115~|~43~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
t/BOM/Actions/CustomerStatement.t~|~2~|~115~|~47~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
t/BOM/Actions/CustomerStatement.t~|~2~|~127~|~42~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
t/BOM/Actions/CustomerStatement.t~|~2~|~139~|~21~|~Long number not separated with underscores~|~See page 59 of PBP~|~ValuesAndExpressions::RequireNumberSeparators~||~
t/BOM/Actions/CustomerStatement.t~|~2~|~180~|~26~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/CustomerStatement.t~|~2~|~185~|~45~|~30 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
t/BOM/Actions/CustomerStatement.t~|~2~|~186~|~26~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/CustomerStatement.t~|~2~|~191~|~25~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/CustomerStatement.t~|~2~|~213~|~58~|~101 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
t/BOM/Actions/CustomerStatement.t~|~3~|~227~|~5~|~Ambiguously named variable "contract"~|~See page 48 of PBP~|~NamingConventions::ProhibitAmbiguousNames~||~
t/BOM/Actions/CustomerStatement.t~|~2~|~278~|~34~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/CustomerStatement.t~|~2~|~286~|~38~|~100 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
t/BOM/Actions/CustomerStatement.t~|~2~|~293~|~42~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
t/BOM/Actions/CustomerStatement.t~|~2~|~298~|~64~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/CustomerStatement.t~|~2~|~303~|~62~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/CustomerStatement.t~|~2~|~311~|~31~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/CustomerStatement.t~|~2~|~315~|~35~|~Quotes used with a noisy string~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitNoisyQuotes~||~
t/BOM/Actions/CustomerStatement.t~|~2~|~316~|~35~|~Quotes used with a noisy string~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitNoisyQuotes~||~
t/BOM/Actions/CustomerStatement.t~|~2~|~317~|~35~|~Quotes used with a noisy string~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitNoisyQuotes~||~
t/BOM/Actions/CustomerStatement.t~|~2~|~318~|~49~|~Quotes used with a noisy string~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitNoisyQuotes~||~
t/BOM/Actions/CustomerStatement.t~|~2~|~319~|~49~|~Quotes used with a noisy string~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitNoisyQuotes~||~
t/BOM/Actions/CustomerStatement.t~|~2~|~324~|~84~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/CustomerStatement.t~|~5~|~332~|~56~|~"return" statement with explicit "undef"~|~See page 199 of PBP~|~Subroutines::ProhibitExplicitReturnUndef~||~
t/BOM/Actions/CustomerStatement.t~|~3~|~406~|~5~|~Reused variable name in lexical scope: $req_args~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/CustomerStatement.t~|~2~|~409~|~38~|~100 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
t/BOM/Actions/CustomerStatement.t~|~2~|~410~|~38~|~100 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
t/BOM/Actions/CustomerStatement.t~|~2~|~414~|~53~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
t/BOM/Actions/CustomerStatement.t~|~2~|~416~|~87~|~Quotes used with a noisy string~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitNoisyQuotes~||~
t/BOM/Actions/CustomerStatement.t~|~4~|~427~|~1~|~Subroutine "test_email_statement" does not end with "return"~|~See page 197 of PBP~|~Subroutines::RequireFinalReturn~||~
t/BOM/Actions/CustomerStatement.t~|~3~|~431~|~18~|~Private subroutine/method used~|~Use published APIs~|~Subroutines::ProtectPrivateSubs~||~
t/BOM/Actions/CustomerStatement.t~|~2~|~437~|~20~|~_any_qr_tokens requires 5.005.03~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/Actions/CustomerStatement.t~|~2~|~437~|~20~|~_any_quotelike_regexp requires 5.005~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/Actions/CustomerStatement.t~|~2~|~437~|~20~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/CustomerStatement.t~|~3~|~437~|~20~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
t/BOM/Actions/CustomerStatement.t~|~2~|~437~|~20~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/CustomerStatement.t~|~2~|~437~|~47~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/CustomerStatement.t~|~2~|~442~|~23~|~List of quoted literal words~|~Use 'qw()' instead~|~CodeLayout::ProhibitQuotedWordLists~||~
t/BOM/Actions/CustomerStatement.t~|~2~|~445~|~35~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/CustomerStatement.t~|~3~|~445~|~35~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
t/BOM/Actions/CustomerStatement.t~|~2~|~445~|~35~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/CustomerStatement.t~|~2~|~447~|~44~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/CustomerStatement.t~|~2~|~447~|~116~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/CustomerStatement.t~|~2~|~451~|~5~|~_Pulp__for_loop_variable_using_my requires 5.004~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/Actions/CustomerStatement.t~|~2~|~452~|~14~|~Postfix control "unless" used~|~See pages 96,97 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
t/BOM/Actions/CustomerStatement.t~|~2~|~456~|~33~|~Postfix control "while" used~|~See page 96 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
t/BOM/Actions/CustomerStatement.t~|~2~|~456~|~65~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/CustomerStatement.t~|~3~|~456~|~65~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
t/BOM/Actions/CustomerStatement.t~|~2~|~456~|~65~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/CustomerStatement.t~|~3~|~457~|~30~|~Capture variable used outside conditional~|~See page 253 of PBP~|~RegularExpressions::ProhibitCaptureWithoutTest~||~
t/BOM/Actions/CustomerStatement.t~|~2~|~457~|~33~|~Postfix control "while" used~|~See page 96 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
t/BOM/Actions/CustomerStatement.t~|~2~|~457~|~65~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/CustomerStatement.t~|~3~|~457~|~65~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
t/BOM/Actions/CustomerStatement.t~|~2~|~457~|~65~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/CustomerStatement.t~|~2~|~464~|~62~|~_perl_5010_operators requires 5.010~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/Actions/CustomerStatement.t~|~2~|~470~|~25~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/CustomerStatement.t~|~2~|~472~|~73~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/CustomerStatement.t~|~2~|~477~|~25~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/CustomerStatement.t~|~2~|~478~|~36~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/CustomerStatement.t~|~2~|~478~|~78~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/CustomerStatement.t~|~2~|~479~|~63~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/CustomerStatement.t~|~2~|~484~|~50~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/CustomerStatement.t~|~3~|~484~|~50~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
t/BOM/Actions/CustomerStatement.t~|~2~|~484~|~50~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/CustomerStatement.t~|~2~|~485~|~26~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/CustomerStatement.t~|~3~|~485~|~26~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
t/BOM/Actions/CustomerStatement.t~|~2~|~485~|~26~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/shared_payment_method_found.t~|~4~|~1~|~1~|~Code not contained in explicit package~|~Violates encapsulation~|~Modules::RequireExplicitPackage~||~
t/BOM/Actions/shared_payment_method_found.t~|~4~|~1~|~1~|~Code not contained in explicit package~|~Violates encapsulation~|~Modules::RequireExplicitPackage~||~
t/BOM/Actions/shared_payment_method_found.t~|~2~|~1~|~1~|~No package-scoped "$VERSION" variable found~|~See page 404 of PBP~|~Modules::RequireVersionVar~||~
t/BOM/Actions/shared_payment_method_found.t~|~2~|~2~|~1~|~_perl_5006_pragmas requires 5.006~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/Actions/shared_payment_method_found.t~|~2~|~58~|~57~|~_Pulp__arrow_coderef_call requires 5.004~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/Actions/shared_payment_method_found.t~|~2~|~66~|~20~|~11780 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
t/BOM/Actions/shared_payment_method_found.t~|~2~|~66~|~20~|~Long number not separated with underscores~|~See page 59 of PBP~|~ValuesAndExpressions::RequireNumberSeparators~||~
t/BOM/Actions/shared_payment_method_found.t~|~2~|~93~|~9~|~_Pulp__for_loop_variable_using_my requires 5.004~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/Actions/shared_payment_method_found.t~|~2~|~95~|~44~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/shared_payment_method_found.t~|~3~|~95~|~44~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
t/BOM/Actions/shared_payment_method_found.t~|~2~|~95~|~44~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/shared_payment_method_found.t~|~2~|~97~|~37~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
t/BOM/Actions/shared_payment_method_found.t~|~2~|~97~|~49~|~Quotes used with a noisy string~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitNoisyQuotes~||~
t/BOM/Actions/shared_payment_method_found.t~|~3~|~107~|~60~|~Private subroutine/method used~|~Use published APIs~|~Subroutines::ProtectPrivateSubs~||~
t/BOM/Actions/shared_payment_method_found.t~|~3~|~113~|~42~|~Private subroutine/method used~|~Use published APIs~|~Subroutines::ProtectPrivateSubs~||~
t/BOM/Actions/shared_payment_method_found.t~|~2~|~113~|~88~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
t/BOM/Actions/shared_payment_method_found.t~|~3~|~115~|~42~|~Private subroutine/method used~|~Use published APIs~|~Subroutines::ProtectPrivateSubs~||~
t/BOM/Actions/shared_payment_method_found.t~|~2~|~115~|~88~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
t/BOM/Actions/shared_payment_method_found.t~|~3~|~119~|~21~|~Reused variable name in lexical scope: $current_reason~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/shared_payment_method_found.t~|~2~|~148~|~56~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/shared_payment_method_found.t~|~3~|~148~|~56~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
t/BOM/Actions/shared_payment_method_found.t~|~2~|~148~|~56~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/shared_payment_method_found.t~|~2~|~150~|~45~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
t/BOM/Actions/shared_payment_method_found.t~|~2~|~150~|~57~|~Quotes used with a noisy string~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitNoisyQuotes~||~
t/BOM/Actions/shared_payment_method_found.t~|~2~|~166~|~76~|~Quotes used with a noisy string~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitNoisyQuotes~||~
t/BOM/Actions/shared_payment_method_found.t~|~2~|~166~|~86~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
t/BOM/Actions/shared_payment_method_found.t~|~3~|~167~|~46~|~Private subroutine/method used~|~Use published APIs~|~Subroutines::ProtectPrivateSubs~||~
t/BOM/Actions/shared_payment_method_found.t~|~3~|~168~|~46~|~Private subroutine/method used~|~Use published APIs~|~Subroutines::ProtectPrivateSubs~||~
t/BOM/Actions/shared_payment_method_found.t~|~2~|~168~|~92~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
t/BOM/Actions/shared_payment_method_found.t~|~2~|~207~|~20~|~11780 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
t/BOM/Actions/shared_payment_method_found.t~|~2~|~207~|~20~|~Long number not separated with underscores~|~See page 59 of PBP~|~ValuesAndExpressions::RequireNumberSeparators~||~
t/BOM/Actions/shared_payment_method_found.t~|~2~|~215~|~20~|~11780 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
t/BOM/Actions/shared_payment_method_found.t~|~2~|~215~|~20~|~Long number not separated with underscores~|~See page 59 of PBP~|~ValuesAndExpressions::RequireNumberSeparators~||~
t/BOM/Actions/shared_payment_method_found.t~|~2~|~224~|~57~|~Quotes used with a noisy string~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitNoisyQuotes~||~
t/BOM/Actions/shared_payment_method_found.t~|~2~|~229~|~29~|~3 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
t/BOM/Actions/shared_payment_method_found.t~|~2~|~237~|~32~|~Quotes used with a noisy string~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitNoisyQuotes~||~
t/BOM/Actions/shared_payment_method_found.t~|~2~|~279~|~20~|~11780 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
t/BOM/Actions/shared_payment_method_found.t~|~2~|~279~|~20~|~Long number not separated with underscores~|~See page 59 of PBP~|~ValuesAndExpressions::RequireNumberSeparators~||~
t/BOM/Actions/shared_payment_method_found.t~|~4~|~321~|~1~|~Module does not end with "1;"~|~Must end with a recognizable true value~|~Modules::RequireEndWithOne~||~
t/BOM/Actions/common.t~|~3~|~1~|~1~|~Main code has high complexity score (32)~|~Consider refactoring~|~Modules::ProhibitExcessMainComplexity~||~
t/BOM/Actions/common.t~|~4~|~1~|~1~|~Code not contained in explicit package~|~Violates encapsulation~|~Modules::RequireExplicitPackage~||~
t/BOM/Actions/common.t~|~4~|~1~|~1~|~Code not contained in explicit package~|~Violates encapsulation~|~Modules::RequireExplicitPackage~||~
t/BOM/Actions/common.t~|~2~|~1~|~1~|~No package-scoped "$VERSION" variable found~|~See page 404 of PBP~|~Modules::RequireVersionVar~||~
t/BOM/Actions/common.t~|~2~|~2~|~1~|~_perl_5006_pragmas requires 5.006~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/Actions/common.t~|~2~|~56~|~48~|~_Pulp__arrow_coderef_call requires 5.004~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/Actions/common.t~|~2~|~109~|~14~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/common.t~|~2~|~126~|~14~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/common.t~|~2~|~146~|~14~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/common.t~|~2~|~156~|~55~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/common.t~|~2~|~163~|~14~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/common.t~|~2~|~176~|~72~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/common.t~|~2~|~185~|~14~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/common.t~|~2~|~200~|~14~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/common.t~|~2~|~215~|~14~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/common.t~|~2~|~230~|~14~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/common.t~|~2~|~245~|~14~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/common.t~|~2~|~260~|~14~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/common.t~|~2~|~264~|~5~|~_Pulp__for_loop_variable_using_my requires 5.004~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/Actions/common.t~|~2~|~269~|~100~|~_perl_5010_operators requires 5.010~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/Actions/common.t~|~3~|~318~|~29~|~Array assigned a [] arrayref, should it be a () list ?~|~(no explanation)~|~ValuesAndExpressions::ProhibitArrayAssignAref~||~
t/BOM/Actions/common.t~|~3~|~318~|~29~|~Array assigned a [] arrayref, should it be a () list ?~|~(no explanation)~|~ValuesAndExpressions::ProhibitArrayAssignAref~||~
t/BOM/Actions/common.t~|~3~|~318~|~29~|~Array assigned a [] arrayref, should it be a () list ?~|~(no explanation)~|~ValuesAndExpressions::ProhibitArrayAssignAref~||~
t/BOM/Actions/common.t~|~3~|~330~|~30~|~Private subroutine/method used~|~Use published APIs~|~Subroutines::ProtectPrivateSubs~||~
t/BOM/Actions/common.t~|~3~|~333~|~17~|~Test without a label~|~Add a label argument to all Test::More functions~|~TestingAndDebugging::RequireTestLabels~||~
t/BOM/Actions/common.t~|~2~|~349~|~93~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/common.t~|~2~|~352~|~22~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/common.t~|~3~|~357~|~17~|~Test without a label~|~Add a label argument to all Test::More functions~|~TestingAndDebugging::RequireTestLabels~||~
t/BOM/Actions/common.t~|~2~|~359~|~21~|~_Pulp__exists_array_elem requires 5.006~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/Actions/common.t~|~2~|~369~|~21~|~Postfix control "if" used~|~See pages 93,94 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
t/BOM/Actions/common.t~|~2~|~369~|~31~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/common.t~|~2~|~388~|~13~|~"unless" block used~|~See page 97 of PBP~|~ControlStructures::ProhibitUnlessBlocks~||~
t/BOM/Actions/common.t~|~2~|~426~|~29~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/common.t~|~3~|~455~|~5~|~Reused variable name in lexical scope: $emitter_mock~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/common.t~|~3~|~465~|~5~|~Reused variable name in lexical scope: $client_mock~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/common.t~|~2~|~478~|~13~|~_Pulp__my_list_with_undef requires 5.005~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/Actions/common.t~|~2~|~479~|~35~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/common.t~|~2~|~480~|~35~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/common.t~|~3~|~528~|~9~|~Reused variable name in lexical scope: $from~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/common.t~|~3~|~537~|~26~|~Private subroutine/method used~|~Use published APIs~|~Subroutines::ProtectPrivateSubs~||~
t/BOM/Actions/common.t~|~3~|~538~|~26~|~Private subroutine/method used~|~Use published APIs~|~Subroutines::ProtectPrivateSubs~||~
t/BOM/Actions/common.t~|~2~|~542~|~47~|~_any_qr_tokens requires 5.005.03~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/Actions/common.t~|~2~|~542~|~47~|~_any_quotelike_regexp requires 5.005~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/Actions/common.t~|~2~|~542~|~47~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/common.t~|~2~|~542~|~47~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/common.t~|~2~|~551~|~44~|~-1 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
t/BOM/Actions/common.t~|~2~|~551~|~78~|~Postfix control "for" used~|~See page 96 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
t/BOM/Actions/common.t~|~2~|~551~|~97~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/common.t~|~2~|~552~|~44~|~-1 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
t/BOM/Actions/common.t~|~2~|~552~|~78~|~Postfix control "for" used~|~See page 96 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
t/BOM/Actions/common.t~|~2~|~552~|~92~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/common.t~|~3~|~553~|~13~|~Test without a label~|~Add a label argument to all Test::More functions~|~TestingAndDebugging::RequireTestLabels~||~
t/BOM/Actions/common.t~|~2~|~553~|~118~|~-1 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
t/BOM/Actions/common.t~|~2~|~553~|~121~|~Postfix control "if" used~|~See pages 93,94 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
t/BOM/Actions/common.t~|~3~|~554~|~13~|~Test without a label~|~Add a label argument to all Test::More functions~|~TestingAndDebugging::RequireTestLabels~||~
t/BOM/Actions/common.t~|~2~|~554~|~99~|~-1 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
t/BOM/Actions/common.t~|~2~|~554~|~102~|~Postfix control "unless" used~|~See pages 96,97 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
t/BOM/Actions/common.t~|~2~|~565~|~23~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/common.t~|~3~|~590~|~5~|~Private subroutine/method used~|~Use published APIs~|~Subroutines::ProtectPrivateSubs~||~
t/BOM/Actions/common.t~|~2~|~592~|~41~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/common.t~|~2~|~592~|~41~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/common.t~|~3~|~600~|~5~|~Private subroutine/method used~|~Use published APIs~|~Subroutines::ProtectPrivateSubs~||~
t/BOM/Actions/common.t~|~2~|~602~|~38~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/common.t~|~2~|~602~|~38~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/common.t~|~3~|~612~|~5~|~Private subroutine/method used~|~Use published APIs~|~Subroutines::ProtectPrivateSubs~||~
t/BOM/Actions/common.t~|~2~|~614~|~38~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/common.t~|~2~|~614~|~38~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/common.t~|~3~|~621~|~5~|~Private subroutine/method used~|~Use published APIs~|~Subroutines::ProtectPrivateSubs~||~
t/BOM/Actions/common.t~|~2~|~623~|~38~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/common.t~|~2~|~623~|~38~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/common.t~|~4~|~631~|~1~|~Module does not end with "1;"~|~Must end with a recognizable true value~|~Modules::RequireEndWithOne~||~
t/BOM/Actions/anonymization.t~|~4~|~1~|~1~|~Code not contained in explicit package~|~Violates encapsulation~|~Modules::RequireExplicitPackage~||~
t/BOM/Actions/anonymization.t~|~4~|~1~|~1~|~Code not contained in explicit package~|~Violates encapsulation~|~Modules::RequireExplicitPackage~||~
t/BOM/Actions/anonymization.t~|~2~|~1~|~1~|~No package-scoped "$VERSION" variable found~|~See page 404 of PBP~|~Modules::RequireVersionVar~||~
t/BOM/Actions/anonymization.t~|~2~|~2~|~1~|~_perl_5006_pragmas requires 5.006~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/Actions/anonymization.t~|~3~|~28~|~18~|~Private subroutine/method used~|~Use published APIs~|~Subroutines::ProtectPrivateSubs~||~
t/BOM/Actions/anonymization.t~|~2~|~45~|~25~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/anonymization.t~|~2~|~45~|~32~|~3 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
t/BOM/Actions/anonymization.t~|~2~|~47~|~29~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/anonymization.t~|~3~|~47~|~29~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
t/BOM/Actions/anonymization.t~|~2~|~47~|~29~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/anonymization.t~|~2~|~47~|~38~|~3 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
t/BOM/Actions/anonymization.t~|~2~|~55~|~31~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/anonymization.t~|~2~|~58~|~45~|~_Pulp__arrow_coderef_call requires 5.004~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/Actions/anonymization.t~|~2~|~90~|~59~|~10 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
t/BOM/Actions/anonymization.t~|~2~|~99~|~41~|~_any_qr_tokens requires 5.005.03~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/Actions/anonymization.t~|~2~|~99~|~41~|~_any_quotelike_regexp requires 5.005~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/Actions/anonymization.t~|~2~|~99~|~41~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/anonymization.t~|~2~|~99~|~41~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/anonymization.t~|~2~|~102~|~27~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/anonymization.t~|~3~|~102~|~27~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
t/BOM/Actions/anonymization.t~|~2~|~102~|~27~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/anonymization.t~|~2~|~103~|~27~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/anonymization.t~|~2~|~103~|~27~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/anonymization.t~|~2~|~108~|~45~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/anonymization.t~|~2~|~108~|~45~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/anonymization.t~|~2~|~111~|~27~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/anonymization.t~|~3~|~111~|~27~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
t/BOM/Actions/anonymization.t~|~2~|~111~|~27~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/anonymization.t~|~3~|~112~|~27~|~Split long regexps into smaller qr// chunks~|~See page 261 of PBP~|~RegularExpressions::ProhibitComplexRegexes~||~
t/BOM/Actions/anonymization.t~|~2~|~112~|~27~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/anonymization.t~|~3~|~112~|~27~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
t/BOM/Actions/anonymization.t~|~2~|~112~|~27~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/anonymization.t~|~2~|~143~|~56~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/anonymization.t~|~2~|~177~|~90~|~Postfix control "for" used~|~See page 96 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
t/BOM/Actions/anonymization.t~|~3~|~198~|~35~|~Literal line breaks in a string~|~See pages 60,61 of PBP~|~ValuesAndExpressions::ProhibitImplicitNewlines~||~
t/BOM/Actions/anonymization.t~|~2~|~210~|~61~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/anonymization.t~|~2~|~217~|~84~|~Postfix control "for" used~|~See page 96 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
t/BOM/Actions/anonymization.t~|~2~|~243~|~59~|~11 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
t/BOM/Actions/anonymization.t~|~2~|~258~|~90~|~Postfix control "for" used~|~See page 96 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
t/BOM/Actions/anonymization.t~|~2~|~273~|~9~|~C-style "for" loop used~|~See page 100 of PBP~|~ControlStructures::ProhibitCStyleForLoops~||~
t/BOM/Actions/anonymization.t~|~2~|~273~|~27~|~5 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
t/BOM/Actions/anonymization.t~|~2~|~281~|~63~|~10 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
t/BOM/Actions/anonymization.t~|~2~|~291~|~41~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/anonymization.t~|~2~|~291~|~41~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/anonymization.t~|~2~|~294~|~27~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/anonymization.t~|~3~|~294~|~27~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
t/BOM/Actions/anonymization.t~|~2~|~294~|~27~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/anonymization.t~|~2~|~295~|~27~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/anonymization.t~|~2~|~295~|~27~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/anonymization.t~|~2~|~320~|~38~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/anonymization.t~|~2~|~320~|~38~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/anonymization.t~|~2~|~323~|~27~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/anonymization.t~|~3~|~323~|~27~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
t/BOM/Actions/anonymization.t~|~2~|~323~|~27~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/anonymization.t~|~2~|~324~|~27~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/anonymization.t~|~3~|~324~|~27~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
t/BOM/Actions/anonymization.t~|~2~|~324~|~27~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/anonymization.t~|~2~|~354~|~5~|~_Pulp__for_loop_variable_using_my requires 5.004~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/Actions/anonymization.t~|~2~|~367~|~28~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/anonymization.t~|~2~|~367~|~60~|~Postfix control "unless" used~|~See pages 96,97 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
t/BOM/Actions/anonymization.t~|~2~|~406~|~96~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/anonymization.t~|~2~|~415~|~41~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/anonymization.t~|~3~|~415~|~41~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
t/BOM/Actions/anonymization.t~|~2~|~415~|~41~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/anonymization.t~|~2~|~417~|~24~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/anonymization.t~|~3~|~417~|~24~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
t/BOM/Actions/anonymization.t~|~2~|~417~|~24~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/anonymization.t~|~2~|~418~|~24~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/anonymization.t~|~3~|~418~|~24~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
t/BOM/Actions/anonymization.t~|~2~|~418~|~24~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/anonymization.t~|~2~|~424~|~90~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/anonymization.t~|~2~|~426~|~13~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/anonymization.t~|~2~|~430~|~5~|~Found method-call chain of length 4~|~Long chains of method calls indicate code that is too tightly coupled~|~ValuesAndExpressions::ProhibitLongChainsOfMethodCalls~||~
t/BOM/Actions/anonymization.t~|~2~|~434~|~5~|~Found method-call chain of length 4~|~Long chains of method calls indicate code that is too tightly coupled~|~ValuesAndExpressions::ProhibitLongChainsOfMethodCalls~||~
t/BOM/Actions/anonymization.t~|~2~|~434~|~92~|~50 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
t/BOM/Actions/anonymization.t~|~2~|~470~|~59~|~11 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
t/BOM/Actions/anonymization.t~|~2~|~493~|~45~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/anonymization.t~|~2~|~497~|~45~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/anonymization.t~|~2~|~519~|~24~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/anonymization.t~|~2~|~519~|~56~|~Postfix control "unless" used~|~See pages 96,97 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
t/BOM/Actions/anonymization.t~|~2~|~561~|~59~|~11 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
t/BOM/Actions/anonymization.t~|~2~|~585~|~84~|~Postfix control "for" used~|~See page 96 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
t/BOM/Actions/anonymization.t~|~2~|~624~|~59~|~11 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
t/BOM/Actions/anonymization.t~|~2~|~660~|~72~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/anonymization.t~|~2~|~673~|~45~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/anonymization.t~|~2~|~673~|~45~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/anonymization.t~|~2~|~689~|~45~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/anonymization.t~|~2~|~689~|~45~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/anonymization.t~|~2~|~715~|~45~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/anonymization.t~|~2~|~715~|~45~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/anonymization.t~|~2~|~717~|~28~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/anonymization.t~|~2~|~717~|~28~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/anonymization.t~|~2~|~745~|~45~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/anonymization.t~|~2~|~745~|~45~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/anonymization.t~|~2~|~747~|~28~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/anonymization.t~|~3~|~747~|~28~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
t/BOM/Actions/anonymization.t~|~2~|~747~|~28~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/anonymization.t~|~3~|~756~|~27~|~Split long regexps into smaller qr// chunks~|~See page 261 of PBP~|~RegularExpressions::ProhibitComplexRegexes~||~
t/BOM/Actions/anonymization.t~|~2~|~756~|~27~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/anonymization.t~|~3~|~756~|~27~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
t/BOM/Actions/anonymization.t~|~2~|~756~|~27~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/anonymization.t~|~2~|~776~|~45~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/anonymization.t~|~3~|~776~|~45~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
t/BOM/Actions/anonymization.t~|~2~|~776~|~45~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/anonymization.t~|~2~|~785~|~27~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/anonymization.t~|~3~|~785~|~27~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
t/BOM/Actions/anonymization.t~|~2~|~785~|~27~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/anonymization.t~|~2~|~809~|~45~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/anonymization.t~|~3~|~809~|~45~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
t/BOM/Actions/anonymization.t~|~2~|~809~|~45~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/anonymization.t~|~2~|~818~|~27~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/anonymization.t~|~3~|~818~|~27~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
t/BOM/Actions/anonymization.t~|~2~|~818~|~27~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/anonymization.t~|~2~|~854~|~45~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/anonymization.t~|~3~|~854~|~45~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
t/BOM/Actions/anonymization.t~|~2~|~854~|~45~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/anonymization.t~|~2~|~856~|~28~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/anonymization.t~|~3~|~856~|~28~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
t/BOM/Actions/anonymization.t~|~2~|~856~|~28~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/anonymization.t~|~2~|~857~|~28~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/anonymization.t~|~2~|~857~|~28~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/anonymization.t~|~2~|~867~|~27~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/anonymization.t~|~3~|~867~|~27~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
t/BOM/Actions/anonymization.t~|~2~|~867~|~27~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/anonymization.t~|~4~|~895~|~1~|~Module does not end with "1;"~|~Must end with a recognizable true value~|~Modules::RequireEndWithOne~||~
t/BOM/Actions/myaffiliate.t~|~4~|~1~|~1~|~Code not contained in explicit package~|~Violates encapsulation~|~Modules::RequireExplicitPackage~||~
t/BOM/Actions/myaffiliate.t~|~4~|~1~|~1~|~Code not contained in explicit package~|~Violates encapsulation~|~Modules::RequireExplicitPackage~||~
t/BOM/Actions/myaffiliate.t~|~2~|~1~|~1~|~No package-scoped "$VERSION" variable found~|~See page 404 of PBP~|~Modules::RequireVersionVar~||~
t/BOM/Actions/myaffiliate.t~|~2~|~2~|~1~|~_perl_5006_pragmas requires 5.006~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/Actions/myaffiliate.t~|~2~|~25~|~32~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/myaffiliate.t~|~2~|~36~|~38~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/myaffiliate.t~|~2~|~46~|~17~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/myaffiliate.t~|~3~|~46~|~17~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
t/BOM/Actions/myaffiliate.t~|~2~|~46~|~17~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/myaffiliate.t~|~2~|~52~|~20~|~1234 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
t/BOM/Actions/myaffiliate.t~|~3~|~59~|~16~|~Private subroutine/method used~|~Use published APIs~|~Subroutines::ProtectPrivateSubs~||~
t/BOM/Actions/myaffiliate.t~|~2~|~69~|~43~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/myaffiliate.t~|~2~|~77~|~17~|~5 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
t/BOM/Actions/myaffiliate.t~|~2~|~79~|~5~|~_Pulp__for_loop_variable_using_my requires 5.004~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/Actions/myaffiliate.t~|~2~|~80~|~26~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/myaffiliate.t~|~2~|~110~|~75~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/myaffiliate.t~|~2~|~122~|~71~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/myaffiliate.t~|~2~|~135~|~72~|~_Pulp__arrow_coderef_call requires 5.004~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/Actions/myaffiliate.t~|~2~|~141~|~30~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/myaffiliate.t~|~2~|~167~|~45~|~_any_qr_tokens requires 5.005.03~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/Actions/myaffiliate.t~|~2~|~167~|~45~|~_any_quotelike_regexp requires 5.005~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/Actions/myaffiliate.t~|~2~|~167~|~45~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/myaffiliate.t~|~3~|~167~|~45~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
t/BOM/Actions/myaffiliate.t~|~2~|~167~|~45~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/myaffiliate.t~|~2~|~168~|~28~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/myaffiliate.t~|~3~|~168~|~28~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
t/BOM/Actions/myaffiliate.t~|~2~|~168~|~28~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/myaffiliate.t~|~2~|~190~|~41~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/myaffiliate.t~|~3~|~190~|~41~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
t/BOM/Actions/myaffiliate.t~|~2~|~190~|~41~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/myaffiliate.t~|~2~|~191~|~24~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/myaffiliate.t~|~3~|~191~|~24~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
t/BOM/Actions/myaffiliate.t~|~2~|~191~|~24~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/myaffiliate.t~|~4~|~195~|~1~|~Module does not end with "1;"~|~Must end with a recognizable true value~|~Modules::RequireEndWithOne~||~
t/BOM/Actions/notification_daemon.t~|~4~|~1~|~1~|~Code not contained in explicit package~|~Violates encapsulation~|~Modules::RequireExplicitPackage~||~
t/BOM/Actions/notification_daemon.t~|~4~|~1~|~1~|~Code not contained in explicit package~|~Violates encapsulation~|~Modules::RequireExplicitPackage~||~
t/BOM/Actions/notification_daemon.t~|~2~|~1~|~1~|~No package-scoped "$VERSION" variable found~|~See page 404 of PBP~|~Modules::RequireVersionVar~||~
t/BOM/Actions/notification_daemon.t~|~2~|~2~|~1~|~_perl_5006_pragmas requires 5.006~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/Actions/notification_daemon.t~|~4~|~16~|~1~|~Pragma "constant" used~|~See page 55 of PBP~|~ValuesAndExpressions::ProhibitConstantPragma~||~
t/BOM/Actions/notification_daemon.t~|~2~|~16~|~43~|~Quotes used with a noisy string~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitNoisyQuotes~||~
t/BOM/Actions/notification_daemon.t~|~4~|~17~|~1~|~Pragma "constant" used~|~See page 55 of PBP~|~ValuesAndExpressions::ProhibitConstantPragma~||~
t/BOM/Actions/notification_daemon.t~|~4~|~18~|~1~|~Pragma "constant" used~|~See page 55 of PBP~|~ValuesAndExpressions::ProhibitConstantPragma~||~
t/BOM/Actions/notification_daemon.t~|~2~|~101~|~64~|~_any_qr_tokens requires 5.005.03~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/Actions/notification_daemon.t~|~2~|~101~|~64~|~_any_quotelike_regexp requires 5.005~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/Actions/notification_daemon.t~|~2~|~101~|~64~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/notification_daemon.t~|~2~|~101~|~64~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/notification_daemon.t~|~2~|~111~|~29~|~Quotes used with a noisy string~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitNoisyQuotes~||~
t/BOM/Actions/notification_daemon.t~|~3~|~118~|~13~|~Test without a label~|~Add a label argument to all Test::More functions~|~TestingAndDebugging::RequireTestLabels~||~
t/BOM/Actions/notification_daemon.t~|~2~|~177~|~29~|~Quotes used with a noisy string~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitNoisyQuotes~||~
t/BOM/Actions/notification_daemon.t~|~3~|~184~|~13~|~Test without a label~|~Add a label argument to all Test::More functions~|~TestingAndDebugging::RequireTestLabels~||~
t/BOM/Actions/notification_daemon.t~|~4~|~226~|~9~|~Warnings disabled~|~See page 431 of PBP~|~TestingAndDebugging::ProhibitNoWarnings~||~
t/BOM/Actions/notification_daemon.t~|~2~|~227~|~69~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/notification_daemon.t~|~2~|~235~|~20~|~1638871863 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
t/BOM/Actions/notification_daemon.t~|~2~|~235~|~20~|~Long number not separated with underscores~|~See page 59 of PBP~|~ValuesAndExpressions::RequireNumberSeparators~||~
t/BOM/Actions/notification_daemon.t~|~2~|~243~|~29~|~Quotes used with a noisy string~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitNoisyQuotes~||~
t/BOM/Actions/notification_daemon.t~|~2~|~252~|~31~|~60 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
t/BOM/Actions/notification_daemon.t~|~2~|~318~|~20~|~1638871863 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
t/BOM/Actions/notification_daemon.t~|~2~|~318~|~20~|~Long number not separated with underscores~|~See page 59 of PBP~|~ValuesAndExpressions::RequireNumberSeparators~||~
t/BOM/Actions/notification_daemon.t~|~2~|~325~|~29~|~Quotes used with a noisy string~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitNoisyQuotes~||~
t/BOM/Actions/notification_daemon.t~|~4~|~355~|~1~|~Module does not end with "1;"~|~Must end with a recognizable true value~|~Modules::RequireEndWithOne~||~
t/BOM/Actions/app.t~|~4~|~1~|~1~|~Code not contained in explicit package~|~Violates encapsulation~|~Modules::RequireExplicitPackage~||~
t/BOM/Actions/app.t~|~4~|~1~|~1~|~Code not contained in explicit package~|~Violates encapsulation~|~Modules::RequireExplicitPackage~||~
t/BOM/Actions/app.t~|~2~|~1~|~1~|~No package-scoped "$VERSION" variable found~|~See page 404 of PBP~|~Modules::RequireVersionVar~||~
t/BOM/Actions/app.t~|~2~|~2~|~1~|~_perl_5006_pragmas requires 5.006~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/Actions/app.t~|~5~|~33~|~24~|~Subroutine "new" called using indirect syntax~|~See page 349 of PBP~|~Objects::ProhibitIndirectSyntax~||~
t/BOM/Actions/app.t~|~5~|~33~|~24~|~Subroutine "new" called using indirect syntax~|~See page 349 of PBP~|~Objects::ProhibitIndirectSyntax~||~
t/BOM/Actions/app.t~|~4~|~33~|~24~|~Subroutine "new" called using indirect syntax~|~See page 349 of PBP~|~Objects::ProhibitIndirectSyntax~||~
t/BOM/Actions/app.t~|~2~|~44~|~22~|~List of quoted literal words~|~Use 'qw()' instead~|~CodeLayout::ProhibitQuotedWordLists~||~
t/BOM/Actions/app.t~|~2~|~62~|~27~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/app.t~|~2~|~77~|~33~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/app.t~|~2~|~80~|~27~|~_Pulp__arrow_coderef_call requires 5.004~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/Actions/app.t~|~2~|~85~|~19~|~_Pulp__UNIVERSAL_methods_5004 requires 5.004~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/Actions/app.t~|~2~|~91~|~27~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/app.t~|~2~|~100~|~27~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/app.t~|~2~|~114~|~27~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/app.t~|~2~|~127~|~27~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/app.t~|~2~|~141~|~27~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/app.t~|~2~|~150~|~27~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/app.t~|~2~|~164~|~27~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/app.t~|~2~|~174~|~24~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/app.t~|~2~|~188~|~27~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/app.t~|~2~|~197~|~27~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/app.t~|~4~|~208~|~1~|~Module does not end with "1;"~|~Must end with a recognizable true value~|~Modules::RequireEndWithOne~||~
t/BOM/Actions/DisputeNotification/acquired.t~|~4~|~1~|~1~|~Code not contained in explicit package~|~Violates encapsulation~|~Modules::RequireExplicitPackage~||~
t/BOM/Actions/DisputeNotification/acquired.t~|~4~|~1~|~1~|~Code not contained in explicit package~|~Violates encapsulation~|~Modules::RequireExplicitPackage~||~
t/BOM/Actions/DisputeNotification/acquired.t~|~2~|~1~|~1~|~No package-scoped "$VERSION" variable found~|~See page 404 of PBP~|~Modules::RequireVersionVar~||~
t/BOM/Actions/DisputeNotification/acquired.t~|~2~|~2~|~1~|~_perl_5006_pragmas requires 5.006~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/Actions/DisputeNotification/acquired.t~|~2~|~27~|~42~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
t/BOM/Actions/DisputeNotification/acquired.t~|~2~|~31~|~40~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
t/BOM/Actions/DisputeNotification/acquired.t~|~2~|~38~|~41~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
t/BOM/Actions/DisputeNotification/acquired.t~|~2~|~39~|~41~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
t/BOM/Actions/DisputeNotification/acquired.t~|~2~|~40~|~41~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
t/BOM/Actions/DisputeNotification/acquired.t~|~2~|~40~|~43~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/DisputeNotification/acquired.t~|~2~|~41~|~25~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/DisputeNotification/acquired.t~|~2~|~64~|~45~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/DisputeNotification/acquired.t~|~2~|~69~|~44~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/DisputeNotification/acquired.t~|~2~|~80~|~45~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/DisputeNotification/acquired.t~|~2~|~89~|~5~|~_Pulp__for_loop_variable_using_my requires 5.004~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/Actions/DisputeNotification/acquired.t~|~2~|~96~|~24~|~_Pulp__arrow_coderef_call requires 5.004~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/Actions/DisputeNotification/acquired.t~|~4~|~137~|~1~|~Module does not end with "1;"~|~Must end with a recognizable true value~|~Modules::RequireEndWithOne~||~
t/BOM/Actions/DisputeNotification/isignthis.t~|~4~|~1~|~1~|~Code not contained in explicit package~|~Violates encapsulation~|~Modules::RequireExplicitPackage~||~
t/BOM/Actions/DisputeNotification/isignthis.t~|~4~|~1~|~1~|~Code not contained in explicit package~|~Violates encapsulation~|~Modules::RequireExplicitPackage~||~
t/BOM/Actions/DisputeNotification/isignthis.t~|~2~|~1~|~1~|~No package-scoped "$VERSION" variable found~|~See page 404 of PBP~|~Modules::RequireVersionVar~||~
t/BOM/Actions/DisputeNotification/isignthis.t~|~2~|~2~|~1~|~_perl_5006_pragmas requires 5.006~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/Actions/DisputeNotification/isignthis.t~|~2~|~29~|~52~|~Long number not separated with underscores~|~See page 59 of PBP~|~ValuesAndExpressions::RequireNumberSeparators~||~
t/BOM/Actions/DisputeNotification/isignthis.t~|~2~|~34~|~52~|~Long number not separated with underscores~|~See page 59 of PBP~|~ValuesAndExpressions::RequireNumberSeparators~||~
t/BOM/Actions/DisputeNotification/isignthis.t~|~2~|~41~|~44~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/DisputeNotification/isignthis.t~|~2~|~49~|~34~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/DisputeNotification/isignthis.t~|~2~|~55~|~48~|~Long number not separated with underscores~|~See page 59 of PBP~|~ValuesAndExpressions::RequireNumberSeparators~||~
t/BOM/Actions/DisputeNotification/isignthis.t~|~2~|~57~|~48~|~Long number not separated with underscores~|~See page 59 of PBP~|~ValuesAndExpressions::RequireNumberSeparators~||~
t/BOM/Actions/DisputeNotification/isignthis.t~|~2~|~59~|~48~|~Long number not separated with underscores~|~See page 59 of PBP~|~ValuesAndExpressions::RequireNumberSeparators~||~
t/BOM/Actions/DisputeNotification/isignthis.t~|~2~|~80~|~10~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/DisputeNotification/isignthis.t~|~2~|~96~|~52~|~Long number not separated with underscores~|~See page 59 of PBP~|~ValuesAndExpressions::RequireNumberSeparators~||~
t/BOM/Actions/DisputeNotification/isignthis.t~|~2~|~101~|~52~|~Long number not separated with underscores~|~See page 59 of PBP~|~ValuesAndExpressions::RequireNumberSeparators~||~
t/BOM/Actions/DisputeNotification/isignthis.t~|~2~|~108~|~44~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/DisputeNotification/isignthis.t~|~2~|~116~|~34~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/DisputeNotification/isignthis.t~|~2~|~122~|~48~|~Long number not separated with underscores~|~See page 59 of PBP~|~ValuesAndExpressions::RequireNumberSeparators~||~
t/BOM/Actions/DisputeNotification/isignthis.t~|~2~|~124~|~48~|~Long number not separated with underscores~|~See page 59 of PBP~|~ValuesAndExpressions::RequireNumberSeparators~||~
t/BOM/Actions/DisputeNotification/isignthis.t~|~2~|~126~|~48~|~Long number not separated with underscores~|~See page 59 of PBP~|~ValuesAndExpressions::RequireNumberSeparators~||~
t/BOM/Actions/DisputeNotification/isignthis.t~|~2~|~153~|~45~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/DisputeNotification/isignthis.t~|~2~|~162~|~5~|~_Pulp__for_loop_variable_using_my requires 5.004~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/Actions/DisputeNotification/isignthis.t~|~2~|~169~|~24~|~_Pulp__arrow_coderef_call requires 5.004~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/Actions/DisputeNotification/isignthis.t~|~4~|~194~|~1~|~Module does not end with "1;"~|~Must end with a recognizable true value~|~Modules::RequireEndWithOne~||~
t/BOM/Actions/P2P/archived_ad.t~|~4~|~1~|~1~|~Code not contained in explicit package~|~Violates encapsulation~|~Modules::RequireExplicitPackage~||~
t/BOM/Actions/P2P/archived_ad.t~|~4~|~1~|~1~|~Code not contained in explicit package~|~Violates encapsulation~|~Modules::RequireExplicitPackage~||~
t/BOM/Actions/P2P/archived_ad.t~|~2~|~1~|~1~|~No package-scoped "$VERSION" variable found~|~See page 404 of PBP~|~Modules::RequireVersionVar~||~
t/BOM/Actions/P2P/archived_ad.t~|~2~|~2~|~1~|~_perl_5006_pragmas requires 5.006~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/Actions/P2P/archived_ad.t~|~2~|~21~|~21~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/P2P/archived_ad.t~|~2~|~23~|~1~|~_Pulp__my_list_with_undef requires 5.005~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/Actions/P2P/archived_ad.t~|~2~|~25~|~28~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/P2P/archived_ad.t~|~3~|~29~|~1~|~"@identify_args" is declared but not used~|~Unused variables clutter code and make it harder to read~|~Variables::ProhibitUnusedVariables~||~
t/BOM/Actions/P2P/archived_ad.t~|~2~|~42~|~43~|~3 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
t/BOM/Actions/P2P/archived_ad.t~|~2~|~43~|~44~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/P2P/archived_ad.t~|~2~|~49~|~43~|~3 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
t/BOM/Actions/P2P/archived_ad.t~|~2~|~69~|~5~|~_Pulp__for_loop_variable_using_my requires 5.004~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/Actions/P2P/archived_ad.t~|~2~|~73~|~75~|~_any_qr_tokens requires 5.005.03~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/Actions/P2P/archived_ad.t~|~2~|~73~|~75~|~_any_quotelike_regexp requires 5.005~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/Actions/P2P/archived_ad.t~|~2~|~73~|~75~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/P2P/archived_ad.t~|~3~|~73~|~75~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
t/BOM/Actions/P2P/archived_ad.t~|~2~|~73~|~75~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/P2P/archived_ad.t~|~2~|~85~|~32~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/P2P/archived_ad.t~|~4~|~92~|~1~|~Module does not end with "1;"~|~Must end with a recognizable true value~|~Modules::RequireEndWithOne~||~
t/BOM/Actions/P2P/chat_received.t~|~4~|~1~|~1~|~Code not contained in explicit package~|~Violates encapsulation~|~Modules::RequireExplicitPackage~||~
t/BOM/Actions/P2P/chat_received.t~|~4~|~1~|~1~|~Code not contained in explicit package~|~Violates encapsulation~|~Modules::RequireExplicitPackage~||~
t/BOM/Actions/P2P/chat_received.t~|~2~|~1~|~1~|~No package-scoped "$VERSION" variable found~|~See page 404 of PBP~|~Modules::RequireVersionVar~||~
t/BOM/Actions/P2P/chat_received.t~|~2~|~2~|~1~|~_perl_5006_pragmas requires 5.006~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/Actions/P2P/chat_received.t~|~2~|~17~|~27~|~Long number not separated with underscores~|~See page 59 of PBP~|~ValuesAndExpressions::RequireNumberSeparators~||~
t/BOM/Actions/P2P/chat_received.t~|~2~|~22~|~27~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
t/BOM/Actions/P2P/chat_received.t~|~2~|~26~|~27~|~Long number not separated with underscores~|~See page 59 of PBP~|~ValuesAndExpressions::RequireNumberSeparators~||~
t/BOM/Actions/P2P/chat_received.t~|~2~|~30~|~27~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
t/BOM/Actions/P2P/chat_received.t~|~2~|~34~|~5~|~_Pulp__for_loop_variable_using_my requires 5.004~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/Actions/P2P/chat_received.t~|~4~|~58~|~1~|~Module does not end with "1;"~|~Must end with a recognizable true value~|~Modules::RequireEndWithOne~||~
t/BOM/Actions/P2P/client_notifications.t~|~4~|~1~|~1~|~Code not contained in explicit package~|~Violates encapsulation~|~Modules::RequireExplicitPackage~||~
t/BOM/Actions/P2P/client_notifications.t~|~4~|~1~|~1~|~Code not contained in explicit package~|~Violates encapsulation~|~Modules::RequireExplicitPackage~||~
t/BOM/Actions/P2P/client_notifications.t~|~2~|~1~|~1~|~No package-scoped "$VERSION" variable found~|~See page 404 of PBP~|~Modules::RequireVersionVar~||~
t/BOM/Actions/P2P/client_notifications.t~|~2~|~2~|~1~|~_perl_5006_pragmas requires 5.006~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/Actions/P2P/client_notifications.t~|~2~|~18~|~35~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/P2P/client_notifications.t~|~2~|~22~|~21~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/P2P/client_notifications.t~|~2~|~36~|~35~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/P2P/client_notifications.t~|~2~|~56~|~19~|~Quotes used with a noisy string~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitNoisyQuotes~||~
t/BOM/Actions/P2P/client_notifications.t~|~2~|~58~|~19~|~Quotes used with a noisy string~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitNoisyQuotes~||~
t/BOM/Actions/P2P/client_notifications.t~|~2~|~60~|~19~|~Quotes used with a noisy string~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitNoisyQuotes~||~
t/BOM/Actions/P2P/client_notifications.t~|~3~|~61~|~17~|~Mismatched operator~|~Numeric/string operators and operands should match~|~ValuesAndExpressions::ProhibitMismatchedOperators~||~
t/BOM/Actions/P2P/client_notifications.t~|~2~|~61~|~19~|~-1 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
t/BOM/Actions/P2P/client_notifications.t~|~3~|~62~|~17~|~Mismatched operator~|~Numeric/string operators and operands should match~|~ValuesAndExpressions::ProhibitMismatchedOperators~||~
t/BOM/Actions/P2P/client_notifications.t~|~2~|~62~|~19~|~Quotes used with a noisy string~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitNoisyQuotes~||~
t/BOM/Actions/P2P/client_notifications.t~|~3~|~63~|~17~|~Mismatched operator~|~Numeric/string operators and operands should match~|~ValuesAndExpressions::ProhibitMismatchedOperators~||~
t/BOM/Actions/P2P/client_notifications.t~|~2~|~63~|~19~|~-1 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
t/BOM/Actions/P2P/client_notifications.t~|~3~|~64~|~17~|~Mismatched operator~|~Numeric/string operators and operands should match~|~ValuesAndExpressions::ProhibitMismatchedOperators~||~
t/BOM/Actions/P2P/client_notifications.t~|~2~|~64~|~19~|~Quotes used with a noisy string~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitNoisyQuotes~||~
t/BOM/Actions/P2P/client_notifications.t~|~3~|~65~|~17~|~Mismatched operator~|~Numeric/string operators and operands should match~|~ValuesAndExpressions::ProhibitMismatchedOperators~||~
t/BOM/Actions/P2P/client_notifications.t~|~2~|~65~|~19~|~-1 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
t/BOM/Actions/P2P/client_notifications.t~|~2~|~68~|~19~|~Quotes used with a noisy string~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitNoisyQuotes~||~
t/BOM/Actions/P2P/client_notifications.t~|~2~|~70~|~19~|~Quotes used with a noisy string~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitNoisyQuotes~||~
t/BOM/Actions/P2P/client_notifications.t~|~2~|~72~|~19~|~Quotes used with a noisy string~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitNoisyQuotes~||~
t/BOM/Actions/P2P/client_notifications.t~|~3~|~73~|~17~|~Mismatched operator~|~Numeric/string operators and operands should match~|~ValuesAndExpressions::ProhibitMismatchedOperators~||~
t/BOM/Actions/P2P/client_notifications.t~|~2~|~73~|~19~|~-1 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
t/BOM/Actions/P2P/client_notifications.t~|~3~|~74~|~17~|~Mismatched operator~|~Numeric/string operators and operands should match~|~ValuesAndExpressions::ProhibitMismatchedOperators~||~
t/BOM/Actions/P2P/client_notifications.t~|~2~|~74~|~19~|~Quotes used with a noisy string~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitNoisyQuotes~||~
t/BOM/Actions/P2P/client_notifications.t~|~3~|~75~|~17~|~Mismatched operator~|~Numeric/string operators and operands should match~|~ValuesAndExpressions::ProhibitMismatchedOperators~||~
t/BOM/Actions/P2P/client_notifications.t~|~2~|~75~|~19~|~-1 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
t/BOM/Actions/P2P/client_notifications.t~|~3~|~76~|~17~|~Mismatched operator~|~Numeric/string operators and operands should match~|~ValuesAndExpressions::ProhibitMismatchedOperators~||~
t/BOM/Actions/P2P/client_notifications.t~|~2~|~76~|~19~|~Quotes used with a noisy string~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitNoisyQuotes~||~
t/BOM/Actions/P2P/client_notifications.t~|~3~|~77~|~17~|~Mismatched operator~|~Numeric/string operators and operands should match~|~ValuesAndExpressions::ProhibitMismatchedOperators~||~
t/BOM/Actions/P2P/client_notifications.t~|~2~|~77~|~19~|~-1 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
t/BOM/Actions/P2P/client_notifications.t~|~2~|~78~|~10~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/P2P/client_notifications.t~|~2~|~90~|~19~|~Quotes used with a noisy string~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitNoisyQuotes~||~
t/BOM/Actions/P2P/client_notifications.t~|~2~|~92~|~19~|~Quotes used with a noisy string~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitNoisyQuotes~||~
t/BOM/Actions/P2P/client_notifications.t~|~2~|~94~|~19~|~Quotes used with a noisy string~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitNoisyQuotes~||~
t/BOM/Actions/P2P/client_notifications.t~|~3~|~95~|~17~|~Mismatched operator~|~Numeric/string operators and operands should match~|~ValuesAndExpressions::ProhibitMismatchedOperators~||~
t/BOM/Actions/P2P/client_notifications.t~|~2~|~95~|~19~|~-1 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
t/BOM/Actions/P2P/client_notifications.t~|~3~|~96~|~17~|~Mismatched operator~|~Numeric/string operators and operands should match~|~ValuesAndExpressions::ProhibitMismatchedOperators~||~
t/BOM/Actions/P2P/client_notifications.t~|~2~|~96~|~19~|~Quotes used with a noisy string~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitNoisyQuotes~||~
t/BOM/Actions/P2P/client_notifications.t~|~3~|~97~|~17~|~Mismatched operator~|~Numeric/string operators and operands should match~|~ValuesAndExpressions::ProhibitMismatchedOperators~||~
t/BOM/Actions/P2P/client_notifications.t~|~2~|~97~|~19~|~-1 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
t/BOM/Actions/P2P/client_notifications.t~|~3~|~98~|~17~|~Mismatched operator~|~Numeric/string operators and operands should match~|~ValuesAndExpressions::ProhibitMismatchedOperators~||~
t/BOM/Actions/P2P/client_notifications.t~|~2~|~98~|~19~|~Quotes used with a noisy string~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitNoisyQuotes~||~
t/BOM/Actions/P2P/client_notifications.t~|~3~|~99~|~17~|~Mismatched operator~|~Numeric/string operators and operands should match~|~ValuesAndExpressions::ProhibitMismatchedOperators~||~
t/BOM/Actions/P2P/client_notifications.t~|~2~|~99~|~19~|~-1 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
t/BOM/Actions/P2P/client_notifications.t~|~2~|~102~|~19~|~Quotes used with a noisy string~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitNoisyQuotes~||~
t/BOM/Actions/P2P/client_notifications.t~|~2~|~104~|~19~|~Quotes used with a noisy string~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitNoisyQuotes~||~
t/BOM/Actions/P2P/client_notifications.t~|~2~|~106~|~19~|~Quotes used with a noisy string~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitNoisyQuotes~||~
t/BOM/Actions/P2P/client_notifications.t~|~3~|~107~|~17~|~Mismatched operator~|~Numeric/string operators and operands should match~|~ValuesAndExpressions::ProhibitMismatchedOperators~||~
t/BOM/Actions/P2P/client_notifications.t~|~2~|~107~|~19~|~-1 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
t/BOM/Actions/P2P/client_notifications.t~|~3~|~108~|~17~|~Mismatched operator~|~Numeric/string operators and operands should match~|~ValuesAndExpressions::ProhibitMismatchedOperators~||~
t/BOM/Actions/P2P/client_notifications.t~|~2~|~108~|~19~|~Quotes used with a noisy string~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitNoisyQuotes~||~
t/BOM/Actions/P2P/client_notifications.t~|~3~|~109~|~17~|~Mismatched operator~|~Numeric/string operators and operands should match~|~ValuesAndExpressions::ProhibitMismatchedOperators~||~
t/BOM/Actions/P2P/client_notifications.t~|~3~|~110~|~17~|~Mismatched operator~|~Numeric/string operators and operands should match~|~ValuesAndExpressions::ProhibitMismatchedOperators~||~
t/BOM/Actions/P2P/client_notifications.t~|~2~|~110~|~19~|~Quotes used with a noisy string~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitNoisyQuotes~||~
t/BOM/Actions/P2P/client_notifications.t~|~3~|~111~|~17~|~Mismatched operator~|~Numeric/string operators and operands should match~|~ValuesAndExpressions::ProhibitMismatchedOperators~||~
t/BOM/Actions/P2P/client_notifications.t~|~2~|~112~|~10~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/P2P/client_notifications.t~|~2~|~125~|~19~|~Quotes used with a noisy string~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitNoisyQuotes~||~
t/BOM/Actions/P2P/client_notifications.t~|~2~|~126~|~38~|~Quotes used with a noisy string~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitNoisyQuotes~||~
t/BOM/Actions/P2P/client_notifications.t~|~2~|~127~|~32~|~Quotes used with a noisy string~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitNoisyQuotes~||~
t/BOM/Actions/P2P/client_notifications.t~|~3~|~128~|~17~|~Mismatched operator~|~Numeric/string operators and operands should match~|~ValuesAndExpressions::ProhibitMismatchedOperators~||~
t/BOM/Actions/P2P/client_notifications.t~|~3~|~128~|~22~|~Mismatched operator~|~Numeric/string operators and operands should match~|~ValuesAndExpressions::ProhibitMismatchedOperators~||~
t/BOM/Actions/P2P/client_notifications.t~|~2~|~128~|~24~|~Quotes used with a noisy string~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitNoisyQuotes~||~
t/BOM/Actions/P2P/client_notifications.t~|~3~|~129~|~17~|~Mismatched operator~|~Numeric/string operators and operands should match~|~ValuesAndExpressions::ProhibitMismatchedOperators~||~
t/BOM/Actions/P2P/client_notifications.t~|~3~|~129~|~22~|~Mismatched operator~|~Numeric/string operators and operands should match~|~ValuesAndExpressions::ProhibitMismatchedOperators~||~
t/BOM/Actions/P2P/client_notifications.t~|~2~|~129~|~24~|~Quotes used with a noisy string~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitNoisyQuotes~||~
t/BOM/Actions/P2P/client_notifications.t~|~3~|~130~|~17~|~Mismatched operator~|~Numeric/string operators and operands should match~|~ValuesAndExpressions::ProhibitMismatchedOperators~||~
t/BOM/Actions/P2P/client_notifications.t~|~2~|~131~|~10~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/P2P/client_notifications.t~|~2~|~142~|~41~|~Quotes used with a noisy string~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitNoisyQuotes~||~
t/BOM/Actions/P2P/client_notifications.t~|~2~|~143~|~38~|~Quotes used with a noisy string~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitNoisyQuotes~||~
t/BOM/Actions/P2P/client_notifications.t~|~2~|~144~|~32~|~Quotes used with a noisy string~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitNoisyQuotes~||~
t/BOM/Actions/P2P/client_notifications.t~|~3~|~145~|~17~|~Mismatched operator~|~Numeric/string operators and operands should match~|~ValuesAndExpressions::ProhibitMismatchedOperators~||~
t/BOM/Actions/P2P/client_notifications.t~|~3~|~145~|~22~|~Mismatched operator~|~Numeric/string operators and operands should match~|~ValuesAndExpressions::ProhibitMismatchedOperators~||~
t/BOM/Actions/P2P/client_notifications.t~|~2~|~145~|~24~|~Quotes used with a noisy string~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitNoisyQuotes~||~
t/BOM/Actions/P2P/client_notifications.t~|~2~|~146~|~34~|~Quotes used with a noisy string~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitNoisyQuotes~||~
t/BOM/Actions/P2P/client_notifications.t~|~3~|~147~|~17~|~Mismatched operator~|~Numeric/string operators and operands should match~|~ValuesAndExpressions::ProhibitMismatchedOperators~||~
t/BOM/Actions/P2P/client_notifications.t~|~2~|~148~|~10~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/P2P/client_notifications.t~|~2~|~160~|~45~|~Quotes used with a noisy string~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitNoisyQuotes~||~
t/BOM/Actions/P2P/client_notifications.t~|~2~|~161~|~42~|~Quotes used with a noisy string~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitNoisyQuotes~||~
t/BOM/Actions/P2P/client_notifications.t~|~2~|~162~|~36~|~Quotes used with a noisy string~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitNoisyQuotes~||~
t/BOM/Actions/P2P/client_notifications.t~|~3~|~163~|~17~|~Mismatched operator~|~Numeric/string operators and operands should match~|~ValuesAndExpressions::ProhibitMismatchedOperators~||~
t/BOM/Actions/P2P/client_notifications.t~|~3~|~163~|~22~|~Mismatched operator~|~Numeric/string operators and operands should match~|~ValuesAndExpressions::ProhibitMismatchedOperators~||~
t/BOM/Actions/P2P/client_notifications.t~|~2~|~163~|~24~|~Quotes used with a noisy string~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitNoisyQuotes~||~
t/BOM/Actions/P2P/client_notifications.t~|~3~|~164~|~17~|~Mismatched operator~|~Numeric/string operators and operands should match~|~ValuesAndExpressions::ProhibitMismatchedOperators~||~
t/BOM/Actions/P2P/client_notifications.t~|~3~|~164~|~22~|~Mismatched operator~|~Numeric/string operators and operands should match~|~ValuesAndExpressions::ProhibitMismatchedOperators~||~
t/BOM/Actions/P2P/client_notifications.t~|~2~|~164~|~24~|~Quotes used with a noisy string~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitNoisyQuotes~||~
t/BOM/Actions/P2P/client_notifications.t~|~3~|~165~|~17~|~Mismatched operator~|~Numeric/string operators and operands should match~|~ValuesAndExpressions::ProhibitMismatchedOperators~||~
t/BOM/Actions/P2P/client_notifications.t~|~2~|~166~|~10~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/P2P/client_notifications.t~|~2~|~175~|~72~|~Quotes used with a noisy string~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitNoisyQuotes~||~
t/BOM/Actions/P2P/client_notifications.t~|~2~|~176~|~10~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/P2P/client_notifications.t~|~2~|~186~|~42~|~Quotes used with a noisy string~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitNoisyQuotes~||~
t/BOM/Actions/P2P/client_notifications.t~|~2~|~188~|~10~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/P2P/client_notifications.t~|~2~|~197~|~72~|~Quotes used with a noisy string~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitNoisyQuotes~||~
t/BOM/Actions/P2P/client_notifications.t~|~2~|~199~|~42~|~Quotes used with a noisy string~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitNoisyQuotes~||~
t/BOM/Actions/P2P/client_notifications.t~|~2~|~201~|~10~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/P2P/client_notifications.t~|~2~|~205~|~1~|~_Pulp__for_loop_variable_using_my requires 5.004~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/Actions/P2P/client_notifications.t~|~2~|~215~|~69~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/P2P/client_notifications.t~|~2~|~223~|~26~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/P2P/client_notifications.t~|~2~|~226~|~27~|~Postfix control "for" used~|~See page 96 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
t/BOM/Actions/P2P/client_notifications.t~|~2~|~226~|~97~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/P2P/client_notifications.t~|~4~|~232~|~1~|~Module does not end with "1;"~|~Must end with a recognizable true value~|~Modules::RequireEndWithOne~||~
t/BOM/Actions/P2P/move_funds_back.t~|~4~|~1~|~1~|~Code not contained in explicit package~|~Violates encapsulation~|~Modules::RequireExplicitPackage~||~
t/BOM/Actions/P2P/move_funds_back.t~|~4~|~1~|~1~|~Code not contained in explicit package~|~Violates encapsulation~|~Modules::RequireExplicitPackage~||~
t/BOM/Actions/P2P/move_funds_back.t~|~2~|~1~|~1~|~No package-scoped "$VERSION" variable found~|~See page 404 of PBP~|~Modules::RequireVersionVar~||~
t/BOM/Actions/P2P/move_funds_back.t~|~2~|~2~|~1~|~_perl_5006_pragmas requires 5.006~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/Actions/P2P/move_funds_back.t~|~2~|~24~|~18~|~100 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
t/BOM/Actions/P2P/move_funds_back.t~|~2~|~45~|~10~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/P2P/move_funds_back.t~|~2~|~51~|~43~|~Quotes used with a noisy string~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitNoisyQuotes~||~
t/BOM/Actions/P2P/move_funds_back.t~|~2~|~52~|~43~|~Quotes used with a noisy string~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitNoisyQuotes~||~
t/BOM/Actions/P2P/move_funds_back.t~|~2~|~53~|~43~|~Quotes used with a noisy string~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitNoisyQuotes~||~
t/BOM/Actions/P2P/move_funds_back.t~|~2~|~60~|~18~|~100 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
t/BOM/Actions/P2P/move_funds_back.t~|~2~|~81~|~10~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/P2P/move_funds_back.t~|~2~|~87~|~43~|~Quotes used with a noisy string~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitNoisyQuotes~||~
t/BOM/Actions/P2P/move_funds_back.t~|~2~|~88~|~43~|~Quotes used with a noisy string~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitNoisyQuotes~||~
t/BOM/Actions/P2P/move_funds_back.t~|~2~|~89~|~43~|~Quotes used with a noisy string~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitNoisyQuotes~||~
t/BOM/Actions/P2P/move_funds_back.t~|~2~|~96~|~18~|~100 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
t/BOM/Actions/P2P/move_funds_back.t~|~2~|~117~|~46~|~-1 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
t/BOM/Actions/P2P/move_funds_back.t~|~2~|~118~|~10~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/P2P/move_funds_back.t~|~2~|~127~|~10~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/P2P/move_funds_back.t~|~2~|~137~|~10~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/P2P/move_funds_back.t~|~2~|~165~|~64~|~_Pulp__arrow_coderef_call requires 5.004~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/Actions/P2P/move_funds_back.t~|~2~|~184~|~18~|~100 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
t/BOM/Actions/P2P/move_funds_back.t~|~2~|~206~|~10~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/P2P/move_funds_back.t~|~2~|~225~|~18~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/P2P/move_funds_back.t~|~2~|~231~|~18~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/P2P/move_funds_back.t~|~2~|~237~|~18~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/P2P/move_funds_back.t~|~2~|~243~|~18~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/P2P/move_funds_back.t~|~2~|~246~|~53~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/P2P/move_funds_back.t~|~2~|~251~|~32~|~5 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
t/BOM/Actions/P2P/move_funds_back.t~|~4~|~253~|~34~|~Negative array index should be used~|~See page 88 of PBP~|~Variables::RequireNegativeIndices~||~
t/BOM/Actions/P2P/move_funds_back.t~|~3~|~267~|~27~|~UNIVERSAL::isa should not be used as a function~|~Use eval{$obj->isa($pkg)} instead~|~BuiltinFunctions::ProhibitUniversalIsa~||~
t/BOM/Actions/P2P/move_funds_back.t~|~2~|~271~|~37~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
t/BOM/Actions/P2P/move_funds_back.t~|~2~|~278~|~74~|~_perl_5010_operators requires 5.010~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/Actions/P2P/move_funds_back.t~|~2~|~278~|~77~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
t/BOM/Actions/P2P/move_funds_back.t~|~3~|~279~|~17~|~Duplicate hash key "seller_nickname"~|~(no explanation)~|~ValuesAndExpressions::ProhibitDuplicateHashKeys~||~
t/BOM/Actions/P2P/move_funds_back.t~|~2~|~279~|~77~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
t/BOM/Actions/P2P/move_funds_back.t~|~2~|~282~|~14~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/P2P/move_funds_back.t~|~3~|~286~|~27~|~UNIVERSAL::isa should not be used as a function~|~Use eval{$obj->isa($pkg)} instead~|~BuiltinFunctions::ProhibitUniversalIsa~||~
t/BOM/Actions/P2P/move_funds_back.t~|~2~|~296~|~77~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
t/BOM/Actions/P2P/move_funds_back.t~|~2~|~297~|~77~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
t/BOM/Actions/P2P/move_funds_back.t~|~2~|~305~|~90~|~_postfix_foreach requires 5.004.05~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/Actions/P2P/move_funds_back.t~|~2~|~305~|~90~|~Postfix control "foreach" used~|~See page 96 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
t/BOM/Actions/P2P/move_funds_back.t~|~4~|~314~|~1~|~Module does not end with "1;"~|~Must end with a recognizable true value~|~Modules::RequireEndWithOne~||~
t/BOM/Actions/P2P/order_expired.t~|~4~|~1~|~1~|~Code not contained in explicit package~|~Violates encapsulation~|~Modules::RequireExplicitPackage~||~
t/BOM/Actions/P2P/order_expired.t~|~4~|~1~|~1~|~Code not contained in explicit package~|~Violates encapsulation~|~Modules::RequireExplicitPackage~||~
t/BOM/Actions/P2P/order_expired.t~|~2~|~1~|~1~|~No package-scoped "$VERSION" variable found~|~See page 404 of PBP~|~Modules::RequireVersionVar~||~
t/BOM/Actions/P2P/order_expired.t~|~2~|~2~|~1~|~_perl_5006_pragmas requires 5.006~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/Actions/P2P/order_expired.t~|~2~|~15~|~1~|~Found method-call chain of length 4~|~Long chains of method calls indicate code that is too tightly coupled~|~ValuesAndExpressions::ProhibitLongChainsOfMethodCalls~||~
t/BOM/Actions/P2P/order_expired.t~|~2~|~23~|~25~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/P2P/order_expired.t~|~2~|~27~|~25~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/P2P/order_expired.t~|~2~|~46~|~25~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/P2P/order_expired.t~|~2~|~50~|~25~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/P2P/order_expired.t~|~2~|~67~|~1~|~_Pulp__for_loop_variable_using_my requires 5.004~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/Actions/P2P/order_expired.t~|~2~|~72~|~29~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/P2P/order_expired.t~|~2~|~76~|~29~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/P2P/order_expired.t~|~4~|~94~|~1~|~Module does not end with "1;"~|~Must end with a recognizable true value~|~Modules::RequireEndWithOne~||~
t/BOM/Actions/P2P/event_tracking.t~|~4~|~1~|~1~|~Code not contained in explicit package~|~Violates encapsulation~|~Modules::RequireExplicitPackage~||~
t/BOM/Actions/P2P/event_tracking.t~|~4~|~1~|~1~|~Code not contained in explicit package~|~Violates encapsulation~|~Modules::RequireExplicitPackage~||~
t/BOM/Actions/P2P/event_tracking.t~|~2~|~1~|~1~|~No package-scoped "$VERSION" variable found~|~See page 404 of PBP~|~Modules::RequireVersionVar~||~
t/BOM/Actions/P2P/event_tracking.t~|~2~|~2~|~1~|~_perl_5006_pragmas requires 5.006~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/Actions/P2P/event_tracking.t~|~5~|~19~|~20~|~Subroutine "new" called using indirect syntax~|~See page 349 of PBP~|~Objects::ProhibitIndirectSyntax~||~
t/BOM/Actions/P2P/event_tracking.t~|~5~|~19~|~20~|~Subroutine "new" called using indirect syntax~|~See page 349 of PBP~|~Objects::ProhibitIndirectSyntax~||~
t/BOM/Actions/P2P/event_tracking.t~|~4~|~19~|~20~|~Subroutine "new" called using indirect syntax~|~See page 349 of PBP~|~Objects::ProhibitIndirectSyntax~||~
t/BOM/Actions/P2P/event_tracking.t~|~2~|~22~|~45~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/P2P/event_tracking.t~|~2~|~25~|~26~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/P2P/event_tracking.t~|~2~|~29~|~1~|~Found method-call chain of length 4~|~Long chains of method calls indicate code that is too tightly coupled~|~ValuesAndExpressions::ProhibitLongChainsOfMethodCalls~||~
t/BOM/Actions/P2P/event_tracking.t~|~2~|~51~|~29~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/P2P/event_tracking.t~|~2~|~59~|~21~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/P2P/event_tracking.t~|~2~|~73~|~16~|~_Pulp__arrow_coderef_call requires 5.004~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/Actions/P2P/event_tracking.t~|~2~|~106~|~31~|~4 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
t/BOM/Actions/P2P/event_tracking.t~|~3~|~108~|~5~|~Reused variable name in lexical scope: $order~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/P2P/event_tracking.t~|~2~|~112~|~5~|~_Pulp__my_list_with_undef requires 5.005~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/Actions/P2P/event_tracking.t~|~2~|~126~|~51~|~_perl_5010_operators requires 5.010~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/Actions/P2P/event_tracking.t~|~2~|~126~|~54~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
t/BOM/Actions/P2P/event_tracking.t~|~2~|~132~|~33~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/P2P/event_tracking.t~|~2~|~148~|~54~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
t/BOM/Actions/P2P/event_tracking.t~|~2~|~154~|~33~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/P2P/event_tracking.t~|~3~|~165~|~5~|~Reused variable name in lexical scope: $order~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/P2P/event_tracking.t~|~4~|~176~|~70~|~Negative array index should be used~|~See page 88 of PBP~|~Variables::RequireNegativeIndices~||~
t/BOM/Actions/P2P/event_tracking.t~|~2~|~178~|~31~|~4 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
t/BOM/Actions/P2P/event_tracking.t~|~2~|~195~|~54~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
t/BOM/Actions/P2P/event_tracking.t~|~2~|~201~|~33~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/P2P/event_tracking.t~|~2~|~217~|~54~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
t/BOM/Actions/P2P/event_tracking.t~|~2~|~223~|~33~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/P2P/event_tracking.t~|~3~|~235~|~5~|~Reused variable name in lexical scope: $order~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/P2P/event_tracking.t~|~4~|~246~|~70~|~Negative array index should be used~|~See page 88 of PBP~|~Variables::RequireNegativeIndices~||~
t/BOM/Actions/P2P/event_tracking.t~|~2~|~248~|~31~|~4 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
t/BOM/Actions/P2P/event_tracking.t~|~2~|~264~|~54~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
t/BOM/Actions/P2P/event_tracking.t~|~2~|~270~|~33~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/P2P/event_tracking.t~|~2~|~286~|~54~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
t/BOM/Actions/P2P/event_tracking.t~|~2~|~292~|~33~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/P2P/event_tracking.t~|~3~|~305~|~5~|~Reused variable name in lexical scope: $order~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/P2P/event_tracking.t~|~4~|~316~|~70~|~Negative array index should be used~|~See page 88 of PBP~|~Variables::RequireNegativeIndices~||~
t/BOM/Actions/P2P/event_tracking.t~|~2~|~318~|~31~|~4 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
t/BOM/Actions/P2P/event_tracking.t~|~2~|~336~|~54~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
t/BOM/Actions/P2P/event_tracking.t~|~2~|~342~|~33~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/P2P/event_tracking.t~|~2~|~358~|~54~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
t/BOM/Actions/P2P/event_tracking.t~|~2~|~364~|~33~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/P2P/event_tracking.t~|~3~|~374~|~5~|~Reused variable name in lexical scope: $advertiser~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/P2P/event_tracking.t~|~3~|~374~|~5~|~Reused variable name in lexical scope: $advert~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/P2P/event_tracking.t~|~2~|~376~|~25~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/P2P/event_tracking.t~|~3~|~378~|~5~|~Reused variable name in lexical scope: $client~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/P2P/event_tracking.t~|~3~|~378~|~5~|~Reused variable name in lexical scope: $order~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/P2P/event_tracking.t~|~2~|~380~|~25~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/P2P/event_tracking.t~|~4~|~396~|~70~|~Negative array index should be used~|~See page 88 of PBP~|~Variables::RequireNegativeIndices~||~
t/BOM/Actions/P2P/event_tracking.t~|~2~|~398~|~31~|~4 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
t/BOM/Actions/P2P/event_tracking.t~|~2~|~411~|~57~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
t/BOM/Actions/P2P/event_tracking.t~|~2~|~418~|~36~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/P2P/event_tracking.t~|~2~|~426~|~9~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/P2P/event_tracking.t~|~2~|~428~|~30~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/P2P/event_tracking.t~|~3~|~438~|~5~|~Reused variable name in lexical scope: $advertiser~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/P2P/event_tracking.t~|~3~|~438~|~5~|~Reused variable name in lexical scope: $advert~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/P2P/event_tracking.t~|~2~|~440~|~25~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/P2P/event_tracking.t~|~3~|~442~|~5~|~Reused variable name in lexical scope: $client~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/P2P/event_tracking.t~|~3~|~442~|~5~|~Reused variable name in lexical scope: $order~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/P2P/event_tracking.t~|~2~|~444~|~25~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/P2P/event_tracking.t~|~4~|~463~|~70~|~Negative array index should be used~|~See page 88 of PBP~|~Variables::RequireNegativeIndices~||~
t/BOM/Actions/P2P/event_tracking.t~|~2~|~465~|~31~|~4 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
t/BOM/Actions/P2P/event_tracking.t~|~2~|~478~|~57~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
t/BOM/Actions/P2P/event_tracking.t~|~2~|~485~|~36~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/P2P/event_tracking.t~|~2~|~493~|~9~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/P2P/event_tracking.t~|~2~|~495~|~30~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/P2P/event_tracking.t~|~3~|~510~|~5~|~Reused variable name in lexical scope: $advertiser~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/P2P/event_tracking.t~|~3~|~510~|~5~|~Reused variable name in lexical scope: $advert~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/P2P/event_tracking.t~|~2~|~513~|~9~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/P2P/event_tracking.t~|~2~|~515~|~26~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/P2P/event_tracking.t~|~2~|~527~|~31~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/P2P/event_tracking.t~|~2~|~535~|~26~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/P2P/event_tracking.t~|~2~|~557~|~26~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/P2P/event_tracking.t~|~4~|~562~|~1~|~Module does not end with "1;"~|~Must end with a recognizable true value~|~Modules::RequireEndWithOne~||~
t/BOM/Actions/P2P/update_local_currencies.t~|~4~|~1~|~1~|~Code not contained in explicit package~|~Violates encapsulation~|~Modules::RequireExplicitPackage~||~
t/BOM/Actions/P2P/update_local_currencies.t~|~4~|~1~|~1~|~Code not contained in explicit package~|~Violates encapsulation~|~Modules::RequireExplicitPackage~||~
t/BOM/Actions/P2P/update_local_currencies.t~|~2~|~1~|~1~|~No package-scoped "$VERSION" variable found~|~See page 404 of PBP~|~Modules::RequireVersionVar~||~
t/BOM/Actions/P2P/update_local_currencies.t~|~2~|~2~|~1~|~_perl_5006_pragmas requires 5.006~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/Actions/P2P/update_local_currencies.t~|~2~|~18~|~23~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
t/BOM/Actions/P2P/update_local_currencies.t~|~2~|~34~|~19~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/P2P/update_local_currencies.t~|~4~|~47~|~1~|~Module does not end with "1;"~|~Must end with a recognizable true value~|~Modules::RequireEndWithOne~||~
t/BOM/Actions/P2P/advertiser_approved.t~|~4~|~1~|~1~|~Code not contained in explicit package~|~Violates encapsulation~|~Modules::RequireExplicitPackage~||~
t/BOM/Actions/P2P/advertiser_approved.t~|~4~|~1~|~1~|~Code not contained in explicit package~|~Violates encapsulation~|~Modules::RequireExplicitPackage~||~
t/BOM/Actions/P2P/advertiser_approved.t~|~2~|~1~|~1~|~No package-scoped "$VERSION" variable found~|~See page 404 of PBP~|~Modules::RequireVersionVar~||~
t/BOM/Actions/P2P/advertiser_approved.t~|~2~|~2~|~1~|~_perl_5006_pragmas requires 5.006~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/Actions/P2P/advertiser_approved.t~|~5~|~15~|~20~|~Subroutine "new" called using indirect syntax~|~See page 349 of PBP~|~Objects::ProhibitIndirectSyntax~||~
t/BOM/Actions/P2P/advertiser_approved.t~|~5~|~15~|~20~|~Subroutine "new" called using indirect syntax~|~See page 349 of PBP~|~Objects::ProhibitIndirectSyntax~||~
t/BOM/Actions/P2P/advertiser_approved.t~|~4~|~15~|~20~|~Subroutine "new" called using indirect syntax~|~See page 349 of PBP~|~Objects::ProhibitIndirectSyntax~||~
t/BOM/Actions/P2P/advertiser_approved.t~|~5~|~16~|~20~|~Subroutine "new" called using indirect syntax~|~See page 349 of PBP~|~Objects::ProhibitIndirectSyntax~||~
t/BOM/Actions/P2P/advertiser_approved.t~|~5~|~16~|~20~|~Subroutine "new" called using indirect syntax~|~See page 349 of PBP~|~Objects::ProhibitIndirectSyntax~||~
t/BOM/Actions/P2P/advertiser_approved.t~|~4~|~16~|~20~|~Subroutine "new" called using indirect syntax~|~See page 349 of PBP~|~Objects::ProhibitIndirectSyntax~||~
t/BOM/Actions/P2P/advertiser_approved.t~|~2~|~26~|~27~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/P2P/advertiser_approved.t~|~4~|~90~|~1~|~Module does not end with "1;"~|~Must end with a recognizable true value~|~Modules::RequireEndWithOne~||~
t/BOM/Actions/P2P/dispute_expired.t~|~4~|~1~|~1~|~Code not contained in explicit package~|~Violates encapsulation~|~Modules::RequireExplicitPackage~||~
t/BOM/Actions/P2P/dispute_expired.t~|~4~|~1~|~1~|~Code not contained in explicit package~|~Violates encapsulation~|~Modules::RequireExplicitPackage~||~
t/BOM/Actions/P2P/dispute_expired.t~|~2~|~1~|~1~|~No package-scoped "$VERSION" variable found~|~See page 404 of PBP~|~Modules::RequireVersionVar~||~
t/BOM/Actions/P2P/dispute_expired.t~|~2~|~2~|~1~|~_perl_5006_pragmas requires 5.006~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/Actions/P2P/dispute_expired.t~|~2~|~20~|~18~|~100 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
t/BOM/Actions/P2P/dispute_expired.t~|~2~|~36~|~28~|~Long number not separated with underscores~|~See page 59 of PBP~|~ValuesAndExpressions::RequireNumberSeparators~||~
t/BOM/Actions/P2P/dispute_expired.t~|~2~|~37~|~10~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/P2P/dispute_expired.t~|~2~|~44~|~28~|~Long number not separated with underscores~|~See page 59 of PBP~|~ValuesAndExpressions::RequireNumberSeparators~||~
t/BOM/Actions/P2P/dispute_expired.t~|~2~|~45~|~10~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/P2P/dispute_expired.t~|~2~|~56~|~28~|~Long number not separated with underscores~|~See page 59 of PBP~|~ValuesAndExpressions::RequireNumberSeparators~||~
t/BOM/Actions/P2P/dispute_expired.t~|~2~|~57~|~10~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/P2P/dispute_expired.t~|~2~|~68~|~30~|~1600000000 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
t/BOM/Actions/P2P/dispute_expired.t~|~2~|~68~|~30~|~Long number not separated with underscores~|~See page 59 of PBP~|~ValuesAndExpressions::RequireNumberSeparators~||~
t/BOM/Actions/P2P/dispute_expired.t~|~2~|~75~|~53~|~_Pulp__arrow_coderef_call requires 5.004~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/Actions/P2P/dispute_expired.t~|~2~|~88~|~32~|~Long number not separated with underscores~|~See page 59 of PBP~|~ValuesAndExpressions::RequireNumberSeparators~||~
t/BOM/Actions/P2P/dispute_expired.t~|~2~|~89~|~14~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/P2P/dispute_expired.t~|~2~|~93~|~45~|~_any_qr_tokens requires 5.005.03~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/Actions/P2P/dispute_expired.t~|~2~|~93~|~45~|~_any_quotelike_regexp requires 5.005~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/Actions/P2P/dispute_expired.t~|~2~|~93~|~45~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/P2P/dispute_expired.t~|~2~|~93~|~45~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/P2P/dispute_expired.t~|~2~|~116~|~24~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/P2P/dispute_expired.t~|~4~|~126~|~1~|~Module does not end with "1;"~|~Must end with a recognizable true value~|~Modules::RequireEndWithOne~||~
t/BOM/Actions/P2P/order_disputes.t~|~4~|~1~|~1~|~Code not contained in explicit package~|~Violates encapsulation~|~Modules::RequireExplicitPackage~||~
t/BOM/Actions/P2P/order_disputes.t~|~4~|~1~|~1~|~Code not contained in explicit package~|~Violates encapsulation~|~Modules::RequireExplicitPackage~||~
t/BOM/Actions/P2P/order_disputes.t~|~2~|~1~|~1~|~No package-scoped "$VERSION" variable found~|~See page 404 of PBP~|~Modules::RequireVersionVar~||~
t/BOM/Actions/P2P/order_disputes.t~|~2~|~2~|~1~|~_perl_5006_pragmas requires 5.006~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/Actions/P2P/order_disputes.t~|~2~|~3~|~1~|~_pragma_utf8 requires 5.008~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/Actions/P2P/order_disputes.t~|~2~|~28~|~29~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/P2P/order_disputes.t~|~2~|~43~|~46~|~_Pulp__arrow_coderef_call requires 5.004~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/Actions/P2P/order_disputes.t~|~2~|~100~|~5~|~_Pulp__for_loop_variable_using_my requires 5.004~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/Actions/P2P/order_disputes.t~|~2~|~104~|~35~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/P2P/order_disputes.t~|~2~|~108~|~33~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/P2P/order_disputes.t~|~4~|~129~|~78~|~Negative array index should be used~|~See page 88 of PBP~|~Variables::RequireNegativeIndices~||~
t/BOM/Actions/P2P/order_disputes.t~|~2~|~174~|~30~|~100 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
t/BOM/Actions/P2P/order_disputes.t~|~2~|~182~|~41~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/P2P/order_disputes.t~|~4~|~205~|~82~|~Negative array index should be used~|~See page 88 of PBP~|~Variables::RequireNegativeIndices~||~
t/BOM/Actions/P2P/order_disputes.t~|~2~|~210~|~84~|~_postfix_foreach requires 5.004.05~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/Actions/P2P/order_disputes.t~|~2~|~210~|~84~|~Postfix control "foreach" used~|~See page 96 of PBP~|~ControlStructures::ProhibitPostfixControls~||~
t/BOM/Actions/P2P/order_disputes.t~|~3~|~222~|~35~|~UNIVERSAL::isa should not be used as a function~|~Use eval{$obj->isa($pkg)} instead~|~BuiltinFunctions::ProhibitUniversalIsa~||~
t/BOM/Actions/P2P/order_disputes.t~|~2~|~226~|~45~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
t/BOM/Actions/P2P/order_disputes.t~|~2~|~233~|~62~|~_perl_5010_operators requires 5.010~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/Actions/P2P/order_disputes.t~|~2~|~233~|~65~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
t/BOM/Actions/P2P/order_disputes.t~|~3~|~234~|~25~|~Duplicate hash key "seller_nickname"~|~(no explanation)~|~ValuesAndExpressions::ProhibitDuplicateHashKeys~||~
t/BOM/Actions/P2P/order_disputes.t~|~2~|~234~|~65~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
t/BOM/Actions/P2P/order_disputes.t~|~3~|~243~|~35~|~UNIVERSAL::isa should not be used as a function~|~Use eval{$obj->isa($pkg)} instead~|~BuiltinFunctions::ProhibitUniversalIsa~||~
t/BOM/Actions/P2P/order_disputes.t~|~2~|~253~|~65~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
t/BOM/Actions/P2P/order_disputes.t~|~2~|~254~|~65~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
t/BOM/Actions/P2P/order_disputes.t~|~4~|~283~|~1~|~Module does not end with "1;"~|~Must end with a recognizable true value~|~Modules::RequireEndWithOne~||~
t/BOM/Actions/P2P/chat_freeze.t~|~4~|~1~|~1~|~Code not contained in explicit package~|~Violates encapsulation~|~Modules::RequireExplicitPackage~||~
t/BOM/Actions/P2P/chat_freeze.t~|~4~|~1~|~1~|~Code not contained in explicit package~|~Violates encapsulation~|~Modules::RequireExplicitPackage~||~
t/BOM/Actions/P2P/chat_freeze.t~|~2~|~1~|~1~|~No package-scoped "$VERSION" variable found~|~See page 404 of PBP~|~Modules::RequireVersionVar~||~
t/BOM/Actions/P2P/chat_freeze.t~|~2~|~2~|~1~|~_perl_5006_pragmas requires 5.006~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/Actions/P2P/chat_freeze.t~|~2~|~22~|~27~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/P2P/chat_freeze.t~|~2~|~32~|~21~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/P2P/chat_freeze.t~|~2~|~36~|~21~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/P2P/chat_freeze.t~|~2~|~60~|~1~|~_Pulp__for_loop_variable_using_my requires 5.004~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/Actions/P2P/chat_freeze.t~|~2~|~68~|~47~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/P2P/chat_freeze.t~|~2~|~70~|~10~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/P2P/chat_freeze.t~|~4~|~78~|~1~|~Module does not end with "1;"~|~Must end with a recognizable true value~|~Modules::RequireEndWithOne~||~
t/BOM/Actions/P2P/advert_subscriptions.t~|~4~|~1~|~1~|~Code not contained in explicit package~|~Violates encapsulation~|~Modules::RequireExplicitPackage~||~
t/BOM/Actions/P2P/advert_subscriptions.t~|~4~|~1~|~1~|~Code not contained in explicit package~|~Violates encapsulation~|~Modules::RequireExplicitPackage~||~
t/BOM/Actions/P2P/advert_subscriptions.t~|~2~|~1~|~1~|~No package-scoped "$VERSION" variable found~|~See page 404 of PBP~|~Modules::RequireVersionVar~||~
t/BOM/Actions/P2P/advert_subscriptions.t~|~2~|~2~|~1~|~_perl_5006_pragmas requires 5.006~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/Actions/P2P/advert_subscriptions.t~|~4~|~13~|~1~|~Fully qualified functions calls should end in parens~|~To differentiate from class methods and function calls, use Foo:Bar::baz()->gimble~|~Subroutines::ProhibitAmbiguousFunctionCalls~||~
t/BOM/Actions/P2P/advert_subscriptions.t~|~2~|~33~|~54~|~Quotes used with a noisy string~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitNoisyQuotes~||~
t/BOM/Actions/P2P/advert_subscriptions.t~|~2~|~33~|~88~|~Quotes used with a noisy string~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitNoisyQuotes~||~
t/BOM/Actions/P2P/advert_subscriptions.t~|~2~|~52~|~23~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/P2P/advert_subscriptions.t~|~2~|~69~|~24~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/P2P/advert_subscriptions.t~|~2~|~85~|~20~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/P2P/advert_subscriptions.t~|~2~|~105~|~44~|~Quotes used with a noisy string~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitNoisyQuotes~||~
t/BOM/Actions/P2P/advert_subscriptions.t~|~2~|~105~|~78~|~Quotes used with a noisy string~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitNoisyQuotes~||~
t/BOM/Actions/P2P/advert_subscriptions.t~|~2~|~105~|~108~|~Quotes used with a noisy string~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitNoisyQuotes~||~
t/BOM/Actions/P2P/advert_subscriptions.t~|~2~|~106~|~69~|~Quotes used with a noisy string~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitNoisyQuotes~||~
t/BOM/Actions/P2P/advert_subscriptions.t~|~2~|~106~|~103~|~Quotes used with a noisy string~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitNoisyQuotes~||~
t/BOM/Actions/P2P/advert_subscriptions.t~|~3~|~126~|~19~|~Map blocks should have a single statement~|~See page 113 of PBP~|~BuiltinFunctions::ProhibitComplexMappings~||~
t/BOM/Actions/P2P/advert_subscriptions.t~|~2~|~134~|~61~|~Quotes used with a noisy string~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitNoisyQuotes~||~
t/BOM/Actions/P2P/advert_subscriptions.t~|~2~|~134~|~95~|~Quotes used with a noisy string~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitNoisyQuotes~||~
t/BOM/Actions/P2P/advert_subscriptions.t~|~2~|~134~|~121~|~Quotes used with a noisy string~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitNoisyQuotes~||~
t/BOM/Actions/P2P/advert_subscriptions.t~|~3~|~165~|~16~|~Map blocks should have a single statement~|~See page 113 of PBP~|~BuiltinFunctions::ProhibitComplexMappings~||~
t/BOM/Actions/P2P/advert_subscriptions.t~|~2~|~172~|~85~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/P2P/advert_subscriptions.t~|~2~|~179~|~20~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/P2P/advert_subscriptions.t~|~3~|~186~|~16~|~Map blocks should have a single statement~|~See page 113 of PBP~|~BuiltinFunctions::ProhibitComplexMappings~||~
t/BOM/Actions/P2P/advert_subscriptions.t~|~4~|~196~|~1~|~Module does not end with "1;"~|~Must end with a recognizable true value~|~Modules::RequireEndWithOne~||~
t/BOM/Actions/IdentityVerification/001_common.t~|~4~|~1~|~1~|~Code not contained in explicit package~|~Violates encapsulation~|~Modules::RequireExplicitPackage~||~
t/BOM/Actions/IdentityVerification/001_common.t~|~4~|~1~|~1~|~Code not contained in explicit package~|~Violates encapsulation~|~Modules::RequireExplicitPackage~||~
t/BOM/Actions/IdentityVerification/001_common.t~|~2~|~1~|~1~|~No package-scoped "$VERSION" variable found~|~See page 404 of PBP~|~Modules::RequireVersionVar~||~
t/BOM/Actions/IdentityVerification/001_common.t~|~2~|~2~|~1~|~_perl_5006_pragmas requires 5.006~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/Actions/IdentityVerification/001_common.t~|~4~|~16~|~1~|~Pragma "constant" used~|~See page 55 of PBP~|~ValuesAndExpressions::ProhibitConstantPragma~||~
t/BOM/Actions/IdentityVerification/001_common.t~|~2~|~46~|~60~|~_Pulp__arrow_coderef_call requires 5.004~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/Actions/IdentityVerification/001_common.t~|~2~|~68~|~58~|~_any_qr_tokens requires 5.005.03~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/Actions/IdentityVerification/001_common.t~|~2~|~68~|~58~|~_any_quotelike_regexp requires 5.005~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/Actions/IdentityVerification/001_common.t~|~2~|~68~|~58~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/IdentityVerification/001_common.t~|~2~|~68~|~58~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/IdentityVerification/001_common.t~|~2~|~74~|~58~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/IdentityVerification/001_common.t~|~2~|~74~|~58~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/IdentityVerification/001_common.t~|~2~|~78~|~58~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/IdentityVerification/001_common.t~|~2~|~78~|~58~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/IdentityVerification/001_common.t~|~2~|~86~|~58~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/IdentityVerification/001_common.t~|~2~|~86~|~58~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/IdentityVerification/001_common.t~|~2~|~92~|~58~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/IdentityVerification/001_common.t~|~3~|~92~|~58~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
t/BOM/Actions/IdentityVerification/001_common.t~|~2~|~92~|~58~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/IdentityVerification/001_common.t~|~2~|~98~|~58~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/IdentityVerification/001_common.t~|~2~|~98~|~58~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/IdentityVerification/001_common.t~|~2~|~103~|~58~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/IdentityVerification/001_common.t~|~2~|~103~|~58~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/IdentityVerification/001_common.t~|~3~|~109~|~66~|~"die" used instead of "croak"~|~See page 283 of PBP~|~ErrorHandling::RequireCarping~||~
t/BOM/Actions/IdentityVerification/001_common.t~|~2~|~114~|~41~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/IdentityVerification/001_common.t~|~2~|~125~|~5~|~Found method-call chain of length 5~|~Long chains of method calls indicate code that is too tightly coupled~|~ValuesAndExpressions::ProhibitLongChainsOfMethodCalls~||~
t/BOM/Actions/IdentityVerification/001_common.t~|~2~|~130~|~45~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/IdentityVerification/001_common.t~|~2~|~136~|~5~|~Found method-call chain of length 5~|~Long chains of method calls indicate code that is too tightly coupled~|~ValuesAndExpressions::ProhibitLongChainsOfMethodCalls~||~
t/BOM/Actions/IdentityVerification/001_common.t~|~2~|~144~|~58~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/IdentityVerification/001_common.t~|~2~|~144~|~58~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/IdentityVerification/001_common.t~|~3~|~152~|~8~|~Private subroutine/method used~|~Use published APIs~|~Subroutines::ProtectPrivateSubs~||~
t/BOM/Actions/IdentityVerification/001_common.t~|~3~|~155~|~8~|~Private subroutine/method used~|~Use published APIs~|~Subroutines::ProtectPrivateSubs~||~
t/BOM/Actions/IdentityVerification/001_common.t~|~3~|~157~|~8~|~Private subroutine/method used~|~Use published APIs~|~Subroutines::ProtectPrivateSubs~||~
t/BOM/Actions/IdentityVerification/001_common.t~|~4~|~164~|~1~|~Subroutine "_set_submissions_left" does not end with "return"~|~See page 197 of PBP~|~Subroutines::RequireFinalReturn~||~
t/BOM/Actions/IdentityVerification/001_common.t~|~3~|~166~|~5~|~Ambiguously named variable "left"~|~See page 48 of PBP~|~NamingConventions::ProhibitAmbiguousNames~||~
t/BOM/Actions/IdentityVerification/001_common.t~|~3~|~167~|~5~|~Reused variable name in lexical scope: $redis~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/IdentityVerification/001_common.t~|~4~|~172~|~1~|~Module does not end with "1;"~|~Must end with a recognizable true value~|~Modules::RequireEndWithOne~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~4~|~1~|~1~|~Code not contained in explicit package~|~Violates encapsulation~|~Modules::RequireExplicitPackage~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~4~|~1~|~1~|~Code not contained in explicit package~|~Violates encapsulation~|~Modules::RequireExplicitPackage~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~2~|~1~|~1~|~No package-scoped "$VERSION" variable found~|~See page 404 of PBP~|~Modules::RequireVersionVar~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~2~|~2~|~1~|~_perl_5006_pragmas requires 5.006~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~4~|~24~|~1~|~Pragma "constant" used~|~See page 55 of PBP~|~ValuesAndExpressions::ProhibitConstantPragma~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~2~|~40~|~55~|~_Pulp__arrow_coderef_call requires 5.004~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~3~|~81~|~9~|~Reused variable name in lexical scope: $args~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~2~|~101~|~9~|~_Pulp__my_list_with_undef requires 5.005~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~2~|~166~|~13~|~200 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~2~|~179~|~41~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~2~|~205~|~32~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~3~|~218~|~5~|~Reused variable name in lexical scope: $email~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~3~|~219~|~5~|~Reused variable name in lexical scope: $user~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~3~|~225~|~5~|~Reused variable name in lexical scope: $client~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~3~|~235~|~5~|~Reused variable name in lexical scope: $args~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~3~|~239~|~5~|~Reused variable name in lexical scope: $idv_model~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~2~|~246~|~33~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~2~|~274~|~13~|~200 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~2~|~319~|~46~|~200 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~2~|~325~|~32~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~3~|~343~|~5~|~Reused variable name in lexical scope: $idv_event_handler~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~3~|~345~|~5~|~Reused variable name in lexical scope: $email~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~3~|~346~|~5~|~Reused variable name in lexical scope: $user~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~3~|~352~|~5~|~Reused variable name in lexical scope: $client~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~3~|~363~|~5~|~Reused variable name in lexical scope: $args~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~2~|~368~|~45~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~3~|~374~|~5~|~Reused variable name in lexical scope: $idv_model~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~2~|~381~|~33~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~3~|~416~|~5~|~Reused variable name in lexical scope: $idv_event_handler~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~3~|~418~|~5~|~Reused variable name in lexical scope: $email~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~3~|~419~|~5~|~Reused variable name in lexical scope: $user~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~3~|~425~|~5~|~Reused variable name in lexical scope: $client~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~3~|~436~|~5~|~Reused variable name in lexical scope: $args~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~3~|~440~|~5~|~Reused variable name in lexical scope: $idv_model~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~2~|~447~|~33~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~2~|~464~|~13~|~200 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~2~|~483~|~48~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~2~|~485~|~37~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~3~|~491~|~5~|~Reused variable name in lexical scope: $idv_event_handler~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~3~|~493~|~5~|~Reused variable name in lexical scope: $email~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~3~|~494~|~5~|~Reused variable name in lexical scope: $user~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~3~|~500~|~5~|~Reused variable name in lexical scope: $client~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~3~|~511~|~5~|~Reused variable name in lexical scope: $args~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~3~|~515~|~5~|~Reused variable name in lexical scope: $idv_model~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~2~|~522~|~33~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~2~|~539~|~13~|~200 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~2~|~559~|~48~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~2~|~561~|~51~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~3~|~566~|~5~|~Reused variable name in lexical scope: $idv_event_handler~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~3~|~567~|~5~|~Reused variable name in lexical scope: $email~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~3~|~568~|~5~|~Reused variable name in lexical scope: $user~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~3~|~574~|~5~|~Reused variable name in lexical scope: $client~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~3~|~585~|~5~|~Reused variable name in lexical scope: $args~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~2~|~592~|~17~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~3~|~592~|~17~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~2~|~592~|~17~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~2~|~604~|~17~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~3~|~604~|~17~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~2~|~604~|~17~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~2~|~621~|~17~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~3~|~621~|~17~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~2~|~621~|~17~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~3~|~633~|~17~|~Split long regexps into smaller qr// chunks~|~See page 261 of PBP~|~RegularExpressions::ProhibitComplexRegexes~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~2~|~633~|~17~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~3~|~633~|~17~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~2~|~633~|~17~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~3~|~640~|~5~|~Reused variable name in lexical scope: $idv_event_handler~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~3~|~641~|~5~|~Reused variable name in lexical scope: $email~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~3~|~642~|~5~|~Reused variable name in lexical scope: $user~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~3~|~648~|~5~|~Reused variable name in lexical scope: $client~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~3~|~659~|~5~|~Reused variable name in lexical scope: $args~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~2~|~667~|~17~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~3~|~667~|~17~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~2~|~667~|~17~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~2~|~675~|~17~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~3~|~675~|~17~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~2~|~675~|~17~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~2~|~682~|~17~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~3~|~682~|~17~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~2~|~682~|~17~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~2~|~698~|~17~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~3~|~698~|~17~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~2~|~698~|~17~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~2~|~708~|~17~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~3~|~708~|~17~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~2~|~708~|~17~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~3~|~715~|~5~|~Reused variable name in lexical scope: $idv_event_handler~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~3~|~717~|~5~|~Reused variable name in lexical scope: $email~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~3~|~718~|~5~|~Reused variable name in lexical scope: $user~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~3~|~724~|~5~|~Reused variable name in lexical scope: $client~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~3~|~735~|~5~|~Reused variable name in lexical scope: $args~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~3~|~739~|~5~|~Reused variable name in lexical scope: $idv_model~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~2~|~746~|~33~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~2~|~763~|~13~|~200 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~2~|~783~|~48~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~2~|~785~|~38~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~3~|~790~|~5~|~Reused variable name in lexical scope: $idv_event_handler~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~3~|~792~|~5~|~Reused variable name in lexical scope: $email~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~3~|~793~|~5~|~Reused variable name in lexical scope: $user~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~3~|~799~|~5~|~Reused variable name in lexical scope: $client~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~3~|~810~|~5~|~Reused variable name in lexical scope: $args~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~3~|~814~|~5~|~Reused variable name in lexical scope: $idv_model~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~2~|~821~|~33~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~2~|~838~|~13~|~200 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~2~|~858~|~48~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~2~|~860~|~42~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~3~|~865~|~5~|~Reused variable name in lexical scope: $idv_event_handler~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~3~|~867~|~5~|~Reused variable name in lexical scope: $email~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~3~|~868~|~5~|~Reused variable name in lexical scope: $user~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~3~|~874~|~5~|~Reused variable name in lexical scope: $client~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~3~|~885~|~5~|~Reused variable name in lexical scope: $args~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~3~|~889~|~5~|~Reused variable name in lexical scope: $idv_model~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~2~|~898~|~33~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~2~|~912~|~13~|~200 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~2~|~936~|~48~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~2~|~938~|~65~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~3~|~948~|~5~|~Reused variable name in lexical scope: $idv_event_handler~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~3~|~950~|~5~|~Reused variable name in lexical scope: $email~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~3~|~951~|~5~|~Reused variable name in lexical scope: $user~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~3~|~957~|~5~|~Reused variable name in lexical scope: $client~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~3~|~968~|~5~|~Reused variable name in lexical scope: $args~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~3~|~972~|~5~|~Reused variable name in lexical scope: $idv_model~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~2~|~979~|~33~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~2~|~991~|~59~|~17 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~2~|~997~|~13~|~200 is not one of the allowed literal values (0, 1, 2). Use the Readonly or Const::Fast module or the "constant" pragma instead~|~Unnamed numeric literals make code less maintainable~|~ValuesAndExpressions::ProhibitMagicNumbers~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~2~|~1003~|~52~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~2~|~1020~|~48~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~2~|~1022~|~60~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~3~|~1029~|~5~|~Reused variable name in lexical scope: $idv_event_handler~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~3~|~1031~|~5~|~Reused variable name in lexical scope: $email~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~3~|~1032~|~5~|~Reused variable name in lexical scope: $user~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~3~|~1038~|~5~|~Reused variable name in lexical scope: $client~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~3~|~1049~|~5~|~Reused variable name in lexical scope: $args~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~3~|~1053~|~5~|~Reused variable name in lexical scope: $idv_model~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~2~|~1060~|~33~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~2~|~1084~|~52~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~2~|~1103~|~48~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~2~|~1105~|~60~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~3~|~1111~|~5~|~Reused variable name in lexical scope: $idv_event_handler~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~3~|~1113~|~5~|~Reused variable name in lexical scope: $email~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~3~|~1114~|~5~|~Reused variable name in lexical scope: $user~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~3~|~1120~|~5~|~Reused variable name in lexical scope: $client~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~3~|~1131~|~5~|~Reused variable name in lexical scope: $args~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~3~|~1135~|~5~|~Reused variable name in lexical scope: $idv_model~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~2~|~1189~|~48~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~2~|~1191~|~59~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~3~|~1199~|~5~|~Reused variable name in lexical scope: $idv_event_handler~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~3~|~1201~|~5~|~Reused variable name in lexical scope: $email~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~3~|~1202~|~5~|~Reused variable name in lexical scope: $user~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~3~|~1208~|~5~|~Reused variable name in lexical scope: $client~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~3~|~1219~|~5~|~Reused variable name in lexical scope: $args~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~3~|~1223~|~5~|~Reused variable name in lexical scope: $idv_model~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~2~|~1276~|~48~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~2~|~1278~|~64~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~3~|~1286~|~5~|~Reused variable name in lexical scope: $idv_event_handler~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~3~|~1288~|~5~|~Reused variable name in lexical scope: $email~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~3~|~1289~|~5~|~Reused variable name in lexical scope: $user~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~3~|~1295~|~5~|~Reused variable name in lexical scope: $client~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~3~|~1306~|~5~|~Reused variable name in lexical scope: $args~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~3~|~1310~|~5~|~Reused variable name in lexical scope: $idv_model~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~2~|~1361~|~48~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~2~|~1363~|~65~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~2~|~1371~|~5~|~_Pulp__for_loop_variable_using_my requires 5.004~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~3~|~1373~|~13~|~Reused variable name in lexical scope: $idv_event_handler~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~3~|~1375~|~13~|~Reused variable name in lexical scope: $email~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~3~|~1376~|~13~|~Reused variable name in lexical scope: $user~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~3~|~1382~|~13~|~Reused variable name in lexical scope: $client~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~3~|~1393~|~13~|~Reused variable name in lexical scope: $args~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~3~|~1397~|~13~|~Reused variable name in lexical scope: $idv_model~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~2~|~1464~|~45~|~Quotes used with a noisy string~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitNoisyQuotes~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~2~|~1465~|~45~|~Quotes used with a noisy string~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitNoisyQuotes~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~2~|~1466~|~45~|~Quotes used with a noisy string~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitNoisyQuotes~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~2~|~1467~|~45~|~Quotes used with a noisy string~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitNoisyQuotes~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~2~|~1468~|~42~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~2~|~1469~|~42~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~2~|~1471~|~49~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~2~|~1473~|~56~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~2~|~1488~|~56~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~2~|~1490~|~68~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~2~|~1493~|~35~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~3~|~1502~|~13~|~Reused variable name in lexical scope: $idv_event_handler~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~3~|~1504~|~13~|~Reused variable name in lexical scope: $email~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~3~|~1505~|~13~|~Reused variable name in lexical scope: $user~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~3~|~1511~|~13~|~Reused variable name in lexical scope: $client~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~3~|~1522~|~13~|~Reused variable name in lexical scope: $args~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~3~|~1526~|~13~|~Reused variable name in lexical scope: $idv_model~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~2~|~1592~|~45~|~Quotes used with a noisy string~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitNoisyQuotes~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~2~|~1593~|~45~|~Quotes used with a noisy string~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitNoisyQuotes~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~2~|~1594~|~45~|~Quotes used with a noisy string~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitNoisyQuotes~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~2~|~1595~|~45~|~Quotes used with a noisy string~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitNoisyQuotes~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~2~|~1596~|~42~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~2~|~1597~|~42~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~2~|~1599~|~49~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~2~|~1601~|~56~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~2~|~1616~|~56~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~2~|~1618~|~50~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~2~|~1638~|~35~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~3~|~1648~|~9~|~Reused variable name in lexical scope: $idv_event_handler~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~3~|~1650~|~9~|~Reused variable name in lexical scope: $email~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~3~|~1651~|~9~|~Reused variable name in lexical scope: $user~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~3~|~1657~|~9~|~Reused variable name in lexical scope: $client~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~3~|~1668~|~9~|~Reused variable name in lexical scope: $args~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~3~|~1672~|~9~|~Reused variable name in lexical scope: $idv_model~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~2~|~1691~|~35~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~2~|~1739~|~45~|~Quotes used with a noisy string~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitNoisyQuotes~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~2~|~1740~|~45~|~Quotes used with a noisy string~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitNoisyQuotes~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~2~|~1741~|~45~|~Quotes used with a noisy string~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitNoisyQuotes~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~2~|~1742~|~45~|~Quotes used with a noisy string~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitNoisyQuotes~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~2~|~1743~|~42~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~2~|~1744~|~42~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~2~|~1746~|~49~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~2~|~1749~|~45~|~Quotes used with a noisy string~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitNoisyQuotes~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~2~|~1750~|~45~|~Quotes used with a noisy string~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitNoisyQuotes~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~2~|~1751~|~45~|~Quotes used with a noisy string~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitNoisyQuotes~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~2~|~1752~|~45~|~Quotes used with a noisy string~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitNoisyQuotes~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~2~|~1753~|~42~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~2~|~1754~|~42~|~Quotes used with a string containing no non-whitespace characters~|~See page 53 of PBP~|~ValuesAndExpressions::ProhibitEmptyQuotes~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~2~|~1756~|~49~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~2~|~1757~|~18~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~2~|~1759~|~52~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~2~|~1774~|~52~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~2~|~1776~|~46~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~2~|~1796~|~31~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~3~|~1809~|~5~|~Reused variable name in lexical scope: $idv_event_handler~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~3~|~1811~|~5~|~Reused variable name in lexical scope: $email~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~3~|~1812~|~5~|~Reused variable name in lexical scope: $user~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~3~|~1818~|~5~|~Reused variable name in lexical scope: $client~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~3~|~1829~|~5~|~Reused variable name in lexical scope: $args~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~3~|~1836~|~5~|~Reused variable name in lexical scope: $idv_model~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~2~|~1843~|~33~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~2~|~1869~|~48~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~2~|~1871~|~38~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~3~|~1876~|~5~|~Reused variable name in lexical scope: $idv_event_handler~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~3~|~1878~|~5~|~Reused variable name in lexical scope: $email~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~3~|~1879~|~5~|~Reused variable name in lexical scope: $user~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~3~|~1885~|~5~|~Reused variable name in lexical scope: $client~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~3~|~1896~|~5~|~Reused variable name in lexical scope: $args~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~3~|~1902~|~5~|~Reused variable name in lexical scope: $idv_model~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~2~|~1909~|~33~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~2~|~1925~|~99~|~_perl_5010_operators requires 5.010~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~2~|~1941~|~48~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~2~|~1943~|~42~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~3~|~1953~|~5~|~Reused variable name in lexical scope: $idv_event_handler~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~3~|~1955~|~5~|~Reused variable name in lexical scope: $email~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~3~|~1956~|~5~|~Reused variable name in lexical scope: $user~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~3~|~1962~|~5~|~Reused variable name in lexical scope: $client~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~3~|~1973~|~5~|~Reused variable name in lexical scope: $args~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~3~|~1979~|~5~|~Reused variable name in lexical scope: $idv_model~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~2~|~1986~|~33~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~2~|~2016~|~48~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~2~|~2018~|~42~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~2~|~2021~|~23~|~_any_qr_tokens requires 5.005.03~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~2~|~2021~|~23~|~_any_quotelike_regexp requires 5.005~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~2~|~2021~|~23~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~3~|~2021~|~23~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~2~|~2021~|~23~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~3~|~2026~|~5~|~Reused variable name in lexical scope: $idv_event_handler~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~3~|~2028~|~5~|~Reused variable name in lexical scope: $email~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~3~|~2029~|~5~|~Reused variable name in lexical scope: $user~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~3~|~2035~|~5~|~Reused variable name in lexical scope: $client~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~2~|~2054~|~18~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~2~|~2064~|~62~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~2~|~2066~|~41~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~3~|~2071~|~5~|~Reused variable name in lexical scope: $idv_event_handler~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~3~|~2073~|~5~|~Reused variable name in lexical scope: $email~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~3~|~2074~|~5~|~Reused variable name in lexical scope: $user~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~3~|~2080~|~5~|~Reused variable name in lexical scope: $client~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~2~|~2104~|~18~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~2~|~2110~|~23~|~Regular expression without "/s" flag~|~See pages 240,241 of PBP~|~RegularExpressions::RequireDotMatchAnything~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~3~|~2110~|~23~|~Regular expression without "/x" flag~|~See page 236 of PBP~|~RegularExpressions::RequireExtendedFormatting~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~2~|~2110~|~23~|~Regular expression without "/m" flag~|~See page 237 of PBP~|~RegularExpressions::RequireLineBoundaryMatching~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~3~|~2118~|~15~|~Private subroutine/method used~|~Use published APIs~|~Subroutines::ProtectPrivateSubs~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~3~|~2122~|~15~|~Private subroutine/method used~|~Use published APIs~|~Subroutines::ProtectPrivateSubs~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~3~|~2127~|~15~|~Private subroutine/method used~|~Use published APIs~|~Subroutines::ProtectPrivateSubs~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~3~|~2135~|~5~|~Reused variable name in lexical scope: $idv_event_handler~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~3~|~2137~|~5~|~Reused variable name in lexical scope: $email~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~3~|~2138~|~5~|~Reused variable name in lexical scope: $user~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~3~|~2144~|~5~|~Reused variable name in lexical scope: $client~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~3~|~2155~|~5~|~Reused variable name in lexical scope: $args~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~3~|~2159~|~5~|~Reused variable name in lexical scope: $idv_model~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~2~|~2236~|~48~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~2~|~2238~|~42~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~3~|~2243~|~5~|~Reused variable name in lexical scope: $idv_event_handler~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~3~|~2247~|~5~|~Reused variable name in lexical scope: $email~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~3~|~2249~|~5~|~Reused variable name in lexical scope: $user~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~3~|~2255~|~5~|~Reused variable name in lexical scope: $client~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~3~|~2266~|~5~|~Reused variable name in lexical scope: $args~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~3~|~2270~|~5~|~Reused variable name in lexical scope: $idv_model~|~Invent unique variable names~|~Variables::ProhibitReusedNames~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~2~|~2323~|~53~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~2~|~2325~|~58~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~3~|~2331~|~1~|~Private subroutine/method '_reset_submissions' declared but not used~|~Eliminate dead code~|~Subroutines::ProhibitUnusedPrivateSubroutines~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~4~|~2331~|~1~|~Subroutine "_reset_submissions" does not end with "return"~|~See page 197 of PBP~|~Subroutines::RequireFinalReturn~||~
t/BOM/Actions/IdentityVerification/002_verification.t~|~4~|~2338~|~1~|~Module does not end with "1;"~|~Must end with a recognizable true value~|~Modules::RequireEndWithOne~||~
t/BOM/Script/001_onfido_retry.t~|~4~|~1~|~1~|~Code not contained in explicit package~|~Violates encapsulation~|~Modules::RequireExplicitPackage~||~
t/BOM/Script/001_onfido_retry.t~|~4~|~1~|~1~|~Code not contained in explicit package~|~Violates encapsulation~|~Modules::RequireExplicitPackage~||~
t/BOM/Script/001_onfido_retry.t~|~2~|~1~|~1~|~No package-scoped "$VERSION" variable found~|~See page 404 of PBP~|~Modules::RequireVersionVar~||~
t/BOM/Script/001_onfido_retry.t~|~2~|~2~|~1~|~_perl_5006_pragmas requires 5.006~|~(no explanation)~|~Compatibility::PerlMinimumVersionAndWhy~||~
t/BOM/Script/001_onfido_retry.t~|~3~|~18~|~14~|~Private subroutine/method used~|~Use published APIs~|~Subroutines::ProtectPrivateSubs~||~
t/BOM/Script/001_onfido_retry.t~|~2~|~80~|~29~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Script/001_onfido_retry.t~|~2~|~166~|~45~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Script/001_onfido_retry.t~|~2~|~167~|~10~|~Put a trailing comma at last of a list ending with a newline~|~(no explanation)~|~CodeLayout::RequireTrailingCommaAtNewline~||~
t/BOM/Script/001_onfido_retry.t~|~3~|~224~|~5~|~Test without a label~|~Add a label argument to all Test::More functions~|~TestingAndDebugging::RequireTestLabels~||~
t/BOM/Script/001_onfido_retry.t~|~2~|~224~|~65~|~Double-sigil dereference~|~See page 228 of PBP~|~References::ProhibitDoubleSigils~||~
t/BOM/Script/001_onfido_retry.t~|~4~|~229~|~1~|~Module does not end with "1;"~|~Must end with a recognizable true value~|~Modules::RequireEndWithOne~||~
